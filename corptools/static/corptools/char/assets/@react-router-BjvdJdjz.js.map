{"version":3,"file":"@react-router-BjvdJdjz.js","sources":["../../../node_modules/@remix-run/router/dist/router.js","../../../node_modules/react-router/dist/index.js","../../../node_modules/react-router-dom/dist/index.js","../../../node_modules/react-router-bootstrap/LinkContainer.js","../../../node_modules/react-router-bootstrap/index.js"],"sourcesContent":["/**\n * @remix-run/router v1.7.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Actions represent the type of change to a location value.\n */\nvar Action;\n(function (Action) {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Action[\"Pop\"] = \"POP\";\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Action[\"Push\"] = \"PUSH\";\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Action[\"Replace\"] = \"REPLACE\";\n})(Action || (Action = {}));\nconst PopStateEventType = \"popstate\";\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nfunction createMemoryHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    initialEntries = [\"/\"],\n    initialIndex,\n    v5Compat = false\n  } = options;\n  let entries; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) => createMemoryLocation(entry, typeof entry === \"string\" ? null : entry.state, index === 0 ? \"default\" : undefined));\n  let index = clampIndex(initialIndex == null ? entries.length - 1 : initialIndex);\n  let action = Action.Pop;\n  let listener = null;\n  function clampIndex(n) {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation() {\n    return entries[index];\n  }\n  function createMemoryLocation(to, state, key) {\n    if (state === void 0) {\n      state = null;\n    }\n    let location = createLocation(entries ? getCurrentLocation().pathname : \"/\", to, state, key);\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in memory history: \" + JSON.stringify(to));\n    return location;\n  }\n  function createHref(to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  let history = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\"\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 1\n        });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta: 0\n        });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({\n          action,\n          location: nextLocation,\n          delta\n        });\n      }\n    },\n    listen(fn) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    }\n  };\n  return history;\n}\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nfunction createBrowserHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createBrowserLocation(window, globalHistory) {\n    let {\n      pathname,\n      search,\n      hash\n    } = window.location;\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createBrowserHref(window, to) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n  return getUrlBasedHistory(createBrowserLocation, createBrowserHref, null, options);\n}\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nfunction createHashHistory(options) {\n  if (options === void 0) {\n    options = {};\n  }\n  function createHashLocation(window, globalHistory) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\"\n    } = parsePath(window.location.hash.substr(1));\n    return createLocation(\"\", {\n      pathname,\n      search,\n      hash\n    },\n    // state defaults to `null` because `window.history.state` does\n    globalHistory.state && globalHistory.state.usr || null, globalHistory.state && globalHistory.state.key || \"default\");\n  }\n  function createHashHref(window, to) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n  function validateHashLocation(location, to) {\n    warning(location.pathname.charAt(0) === \"/\", \"relative pathnames are not supported in hash history.push(\" + JSON.stringify(to) + \")\");\n  }\n  return getUrlBasedHistory(createHashLocation, createHashHref, validateHashLocation, options);\n}\nfunction invariant(value, message) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\nfunction warning(cond, message) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location, index) {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index\n  };\n}\n/**\n * Creates a Location object with a unique key from the given Path\n */\nfunction createLocation(current, to, state, key) {\n  if (state === void 0) {\n    state = null;\n  }\n  let location = _extends({\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\"\n  }, typeof to === \"string\" ? parsePath(to) : to, {\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: to && to.key || key || createKey()\n  });\n  return location;\n}\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nfunction createPath(_ref) {\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\"\n  } = _ref;\n  if (search && search !== \"?\") pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\") pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nfunction parsePath(path) {\n  let parsedPath = {};\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n  return parsedPath;\n}\nfunction getUrlBasedHistory(getLocation, createHref, validateLocation, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  let {\n    window = document.defaultView,\n    v5Compat = false\n  } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener = null;\n  let index = getIndex();\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState(_extends({}, globalHistory.state, {\n      idx: index\n    }), \"\");\n  }\n  function getIndex() {\n    let state = globalHistory.state || {\n      idx: null\n    };\n    return state.idx;\n  }\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({\n        action,\n        location: history.location,\n        delta\n      });\n    }\n  }\n  function push(to, state) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 1\n      });\n    }\n  }\n  function replace(to, state) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n    if (v5Compat && listener) {\n      listener({\n        action,\n        location: history.location,\n        delta: 0\n      });\n    }\n  }\n  function createURL(to) {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base = window.location.origin !== \"null\" ? window.location.origin : window.location.href;\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(base, \"No window.location.(origin|href) available to create URL for href: \" + href);\n    return new URL(href, base);\n  }\n  let history = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    }\n  };\n  return history;\n}\n//#endregion\n\nvar ResultType;\n(function (ResultType) {\n  ResultType[\"data\"] = \"data\";\n  ResultType[\"deferred\"] = \"deferred\";\n  ResultType[\"redirect\"] = \"redirect\";\n  ResultType[\"error\"] = \"error\";\n})(ResultType || (ResultType = {}));\nconst immutableRouteKeys = new Set([\"lazy\", \"caseSensitive\", \"path\", \"id\", \"index\", \"children\"]);\nfunction isIndexRoute(route) {\n  return route.index === true;\n}\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties, parentPath, manifest) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  if (manifest === void 0) {\n    manifest = {};\n  }\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(route.index !== true || !route.children, \"Cannot specify children on an index route\");\n    invariant(!manifest[id], \"Found a route id collision on id \\\"\" + id + \"\\\".  Route \" + \"id's must be globally unique within Data Router usages\");\n    if (isIndexRoute(route)) {\n      let indexRoute = _extends({}, route, mapRouteProperties(route), {\n        id\n      });\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute = _extends({}, route, mapRouteProperties(route), {\n        id,\n        children: undefined\n      });\n      manifest[id] = pathOrLayoutRoute;\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(route.children, mapRouteProperties, treePath, manifest);\n      }\n      return pathOrLayoutRoute;\n    }\n  });\n}\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nfunction matchRoutes(routes, locationArg, basename) {\n  if (basename === void 0) {\n    basename = \"/\";\n  }\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n  if (pathname == null) {\n    return null;\n  }\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch(branches[i],\n    // Incoming pathnames are generally encoded from either window.location\n    // or from router.navigate, but we want to match against the unencoded\n    // paths in the route definitions.  Memory router locations won't be\n    // encoded here but there also shouldn't be anything to decode so this\n    // should be a safe operation.  This avoids needing matchRoutes to be\n    // history-aware.\n    safelyDecodeURI(pathname));\n  }\n  return matches;\n}\nfunction flattenRoutes(routes, branches, parentsMeta, parentPath) {\n  if (branches === void 0) {\n    branches = [];\n  }\n  if (parentsMeta === void 0) {\n    parentsMeta = [];\n  }\n  if (parentPath === void 0) {\n    parentPath = \"\";\n  }\n  let flattenRoute = (route, index, relativePath) => {\n    let meta = {\n      relativePath: relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route\n    };\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(meta.relativePath.startsWith(parentPath), \"Absolute route path \\\"\" + meta.relativePath + \"\\\" nested under path \" + (\"\\\"\" + parentPath + \"\\\" is not valid. An absolute child route path \") + \"must start with the combined path of all its parent routes.\");\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n      // Our types know better, but runtime JS may not!\n      // @ts-expect-error\n      route.index !== true, \"Index routes must not have child routes. Please remove \" + (\"all child routes from route path \\\"\" + path + \"\\\".\"));\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta\n    });\n  };\n  routes.forEach((route, index) => {\n    var _route$path;\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !((_route$path = route.path) != null && _route$path.includes(\"?\"))) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n  return branches;\n}\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path) {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n  let [first, ...rest] = segments;\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n  let result = [];\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(...restExploded.map(subpath => subpath === \"\" ? required : [required, subpath].join(\"/\")));\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map(exploded => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded);\n}\nfunction rankRouteBranches(branches) {\n  branches.sort((a, b) => a.score !== b.score ? b.score - a.score // Higher score first\n  : compareIndexes(a.routesMeta.map(meta => meta.childrenIndex), b.routesMeta.map(meta => meta.childrenIndex)));\n}\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = s => s === \"*\";\nfunction computeScore(path, index) {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n  return segments.filter(s => !isSplat(s)).reduce((score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue), initialScore);\n}\nfunction compareIndexes(a, b) {\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n  return siblings ?\n  // If two routes are siblings, we should try to match the earlier sibling\n  // first. This allows people to have fine-grained control over the matching\n  // behavior by simply putting routes with identical paths in the order they\n  // want them tried.\n  a[a.length - 1] - b[b.length - 1] :\n  // Otherwise, it doesn't really make sense to rank non-siblings by index,\n  // so they sort equally.\n  0;\n}\nfunction matchRouteBranch(branch, pathname) {\n  let {\n    routesMeta\n  } = branch;\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath({\n      path: meta.relativePath,\n      caseSensitive: meta.caseSensitive,\n      end\n    }, remainingPathname);\n    if (!match) return null;\n    Object.assign(matchedParams, match.params);\n    let route = meta.route;\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(joinPaths([matchedPathname, match.pathnameBase])),\n      route\n    });\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n  return matches;\n}\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nfunction generatePath(originalPath, params) {\n  if (params === void 0) {\n    params = {};\n  }\n  let path = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(false, \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n    path = path.replace(/\\*$/, \"/*\");\n  }\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n  const stringify = p => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\n    const isLastSegment = index === array.length - 1;\n    // only apply the splat if it's the last segment\n    if (isLastSegment && segment === \"*\") {\n      const star = \"*\";\n      // Apply the splat\n      return stringify(params[star]);\n    }\n    const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n    if (keyMatch) {\n      const [, key, optional] = keyMatch;\n      let param = params[key];\n      invariant(optional === \"?\" || param != null, \"Missing \\\":\" + key + \"\\\" param\");\n      return stringify(param);\n    }\n    // Remove any optional markers from optional static segments\n    return segment.replace(/\\?$/g, \"\");\n  })\n  // Remove empty segments\n  .filter(segment => !!segment);\n  return prefix + segments.join(\"/\");\n}\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nfunction matchPath(pattern, pathname) {\n  if (typeof pattern === \"string\") {\n    pattern = {\n      path: pattern,\n      caseSensitive: false,\n      end: true\n    };\n  }\n  let [matcher, paramNames] = compilePath(pattern.path, pattern.caseSensitive, pattern.end);\n  let match = pathname.match(matcher);\n  if (!match) return null;\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params = paramNames.reduce((memo, paramName, index) => {\n    // We need to compute the pathnameBase here using the raw splat value\n    // instead of using params[\"*\"] later because it will be decoded then\n    if (paramName === \"*\") {\n      let splatValue = captureGroups[index] || \"\";\n      pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\n    }\n    memo[paramName] = safelyDecodeURIComponent(captureGroups[index] || \"\", paramName);\n    return memo;\n  }, {});\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern\n  };\n}\nfunction compilePath(path, caseSensitive, end) {\n  if (caseSensitive === void 0) {\n    caseSensitive = false;\n  }\n  if (end === void 0) {\n    end = true;\n  }\n  warning(path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"), \"Route path \\\"\" + path + \"\\\" will be treated as if it were \" + (\"\\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\" because the `*` character must \") + \"always follow a `/` in the pattern. To get rid of this warning, \" + (\"please change the route path to \\\"\" + path.replace(/\\*$/, \"/*\") + \"\\\".\"));\n  let paramNames = [];\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n  .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n  .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n  .replace(/\\/:(\\w+)/g, (_, paramName) => {\n    paramNames.push(paramName);\n    return \"/([^\\\\/]+)\";\n  });\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" // Already matched the initial /, just match the rest\n    : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else ;\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n  return [matcher, paramNames];\n}\nfunction safelyDecodeURI(value) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(false, \"The URL path \\\"\" + value + \"\\\" could not be decoded because it is is a \" + \"malformed URL segment. This is probably due to a bad percent \" + (\"encoding (\" + error + \").\"));\n    return value;\n  }\n}\nfunction safelyDecodeURIComponent(value, paramName) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(false, \"The value for the URL param \\\"\" + paramName + \"\\\" will not be decoded because\" + (\" the string \\\"\" + value + \"\\\" is a malformed URL segment. This is probably\") + (\" due to a bad percent encoding (\" + error + \").\"));\n    return value;\n  }\n}\n/**\n * @private\n */\nfunction stripBasename(pathname, basename) {\n  if (basename === \"/\") return pathname;\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n  return pathname.slice(startIndex) || \"/\";\n}\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nfunction resolvePath(to, fromPathname) {\n  if (fromPathname === void 0) {\n    fromPathname = \"/\";\n  }\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\"\n  } = typeof to === \"string\" ? parsePath(to) : to;\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash)\n  };\n}\nfunction resolvePathname(relativePath, fromPathname) {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n  relativeSegments.forEach(segment => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\nfunction getInvalidPathError(char, field, dest, path) {\n  return \"Cannot include a '\" + char + \"' character in a manually specified \" + (\"`to.\" + field + \"` field [\" + JSON.stringify(path) + \"].  Please separate it out to the \") + (\"`to.\" + dest + \"` field. Alternatively you may provide the full path as \") + \"a string in <Link to=\\\"...\\\"> and the router will parse it for you.\";\n}\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nfunction getPathContributingMatches(matches) {\n  return matches.filter((match, index) => index === 0 || match.route.path && match.route.path.length > 0);\n}\n/**\n * @private\n */\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative) {\n  if (isPathRelative === void 0) {\n    isPathRelative = false;\n  }\n  let to;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = _extends({}, toArg);\n    invariant(!to.pathname || !to.pathname.includes(\"?\"), getInvalidPathError(\"?\", \"pathname\", \"search\", to));\n    invariant(!to.pathname || !to.pathname.includes(\"#\"), getInvalidPathError(\"#\", \"pathname\", \"hash\", to));\n    invariant(!to.search || !to.search.includes(\"#\"), getInvalidPathError(\"#\", \"search\", \"hash\", to));\n  }\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n  let from;\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n      to.pathname = toSegments.join(\"/\");\n    }\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n  let path = resolvePath(to, from);\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\n    path.pathname += \"/\";\n  }\n  return path;\n}\n/**\n * @private\n */\nfunction getToPathname(to) {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || to.pathname === \"\" ? \"/\" : typeof to === \"string\" ? parsePath(to).pathname : to.pathname;\n}\n/**\n * @private\n */\nconst joinPaths = paths => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n/**\n * @private\n */\nconst normalizePathname = pathname => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n/**\n * @private\n */\nconst normalizeSearch = search => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\n/**\n * @private\n */\nconst normalizeHash = hash => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nconst json = function json(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  return new Response(JSON.stringify(data), _extends({}, responseInit, {\n    headers\n  }));\n};\nclass AbortedDeferredError extends Error {}\nclass DeferredData {\n  constructor(data, responseInit) {\n    this.pendingKeysSet = new Set();\n    this.subscribers = new Set();\n    this.deferredKeys = [];\n    invariant(data && typeof data === \"object\" && !Array.isArray(data), \"defer() only accepts plain objects\");\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject;\n    this.abortPromise = new Promise((_, r) => reject = r);\n    this.controller = new AbortController();\n    let onAbort = () => reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () => this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n    this.data = Object.entries(data).reduce((acc, _ref) => {\n      let [key, value] = _ref;\n      return Object.assign(acc, {\n        [key]: this.trackPromise(key, value)\n      });\n    }, {});\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n    this.init = responseInit;\n  }\n  trackPromise(key, value) {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise = Promise.race([value, this.abortPromise]).then(data => this.onSettle(promise, key, undefined, data), error => this.onSettle(promise, key, error));\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n    Object.defineProperty(promise, \"_tracked\", {\n      get: () => true\n    });\n    return promise;\n  }\n  onSettle(promise, key, error, data) {\n    if (this.controller.signal.aborted && error instanceof AbortedDeferredError) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      return Promise.reject(error);\n    }\n    this.pendingKeysSet.delete(key);\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\"Deferred data for key \\\"\" + key + \"\\\" resolved/rejected with `undefined`, \" + \"you must resolve/reject with a value or `null`.\");\n      Object.defineProperty(promise, \"_error\", {\n        get: () => undefinedError\n      });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", {\n        get: () => error\n      });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n    Object.defineProperty(promise, \"_data\", {\n      get: () => data\n    });\n    this.emit(false, key);\n    return data;\n  }\n  emit(aborted, settledKey) {\n    this.subscribers.forEach(subscriber => subscriber(aborted, settledKey));\n  }\n  subscribe(fn) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n  async resolveData(signal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise(resolve => {\n        this.subscribe(aborted => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n  get unwrappedData() {\n    invariant(this.data !== null && this.done, \"Can only unwrap data on initialized and settled deferreds\");\n    return Object.entries(this.data).reduce((acc, _ref2) => {\n      let [key, value] = _ref2;\n      return Object.assign(acc, {\n        [key]: unwrapTrackedPromise(value)\n      });\n    }, {});\n  }\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\nfunction isTrackedPromise(value) {\n  return value instanceof Promise && value._tracked === true;\n}\nfunction unwrapTrackedPromise(value) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\nconst defer = function defer(data, init) {\n  if (init === void 0) {\n    init = {};\n  }\n  let responseInit = typeof init === \"number\" ? {\n    status: init\n  } : init;\n  return new DeferredData(data, responseInit);\n};\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nconst redirect = function redirect(url, init) {\n  if (init === void 0) {\n    init = 302;\n  }\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = {\n      status: responseInit\n    };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n  return new Response(null, _extends({}, responseInit, {\n    headers\n  }));\n};\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nclass ErrorResponse {\n  constructor(status, statusText, data, internal) {\n    if (internal === void 0) {\n      internal = false;\n    }\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nfunction isRouteErrorResponse(error) {\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\n}\n\nconst validMutationMethodsArr = [\"post\", \"put\", \"patch\", \"delete\"];\nconst validMutationMethods = new Set(validMutationMethodsArr);\nconst validRequestMethodsArr = [\"get\", ...validMutationMethodsArr];\nconst validRequestMethods = new Set(validRequestMethodsArr);\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\nconst IDLE_NAVIGATION = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_FETCHER = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined\n};\nconst IDLE_BLOCKER = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined\n};\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\nconst defaultMapRouteProperties = route => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\n});\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a router and listen to history POP navigations\n */\nfunction createRouter(init) {\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : undefined;\n  const isBrowser = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n  invariant(init.routes.length > 0, \"You must provide a non-empty routes array to createRouter\");\n  let mapRouteProperties;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  // Routes keyed by ID\n  let manifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(init.routes, mapRouteProperties, undefined, manifest);\n  let inFlightDataRoutes;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future = _extends({\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false\n  }, init.future);\n  // Cleanup function for history\n  let unlistenHistory = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors = null;\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname\n    });\n    let {\n      matches,\n      route\n    } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = {\n      [route.id]: error\n    };\n  }\n  let initialized =\n  // All initialMatches need to be loaded before we're ready.  If we have lazy\n  // functions around still then we'll need to run them in initialize()\n  !initialMatches.some(m => m.route.lazy) && (\n  // And we have to either have no loaders or have been provided hydrationData\n  !initialMatches.some(m => m.route.loader) || init.hydrationData != null);\n  let router;\n  let state = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map()\n  };\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction = Action.Pop;\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n  // AbortController for the active navigation\n  let pendingNavigationController;\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes = [];\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads = [];\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map();\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map();\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set();\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map();\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map();\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map();\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(_ref => {\n      let {\n        action: historyAction,\n        location,\n        delta\n      } = _ref;\n      // Ignore this event if it was just us resetting the URL from a\n      // blocked POP navigation\n      if (ignoreNextHistoryUpdate) {\n        ignoreNextHistoryUpdate = false;\n        return;\n      }\n      warning(blockerFunctions.size === 0 || delta != null, \"You are trying to use a blocker on a POP navigation to a location \" + \"that was not created by @remix-run/router. This will fail silently in \" + \"production. This can happen if you are navigating outside the router \" + \"via `window.history.pushState`/`window.location.hash` instead of using \" + \"router navigation APIs.  This can also happen if you are using \" + \"createHashRouter and the user manually changes the URL.\");\n      let blockerKey = shouldBlockNavigation({\n        currentLocation: state.location,\n        nextLocation: location,\n        historyAction\n      });\n      if (blockerKey && delta != null) {\n        // Restore the URL to match the current UI, but don't update router state\n        ignoreNextHistoryUpdate = true;\n        init.history.go(delta * -1);\n        // Put the blocker into a blocked state\n        updateBlocker(blockerKey, {\n          state: \"blocked\",\n          location,\n          proceed() {\n            updateBlocker(blockerKey, {\n              state: \"proceeding\",\n              proceed: undefined,\n              reset: undefined,\n              location\n            });\n            // Re-do the same POP navigation we just blocked\n            init.history.go(delta);\n          },\n          reset() {\n            let blockers = new Map(state.blockers);\n            blockers.set(blockerKey, IDLE_BLOCKER);\n            updateState({\n              blockers\n            });\n          }\n        });\n        return;\n      }\n      return startNavigation(historyAction, location);\n    });\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(Action.Pop, state.location);\n    }\n    return router;\n  }\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n  // Subscribe to state updates for the router\n  function subscribe(fn) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n  // Update our state and notify the calling context of the change\n  function updateState(newState) {\n    state = _extends({}, state, newState);\n    subscribers.forEach(subscriber => subscriber(state));\n  }\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(location, newState) {\n    var _location$state, _location$state2;\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && ((_location$state = location.state) == null ? void 0 : _location$state._isRedirect) !== true;\n    let actionData;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData ? mergeLoaderData(state.loaderData, newState.loaderData, newState.matches || [], newState.errors) : state.loaderData;\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && ((_location$state2 = location.state) == null ? void 0 : _location$state2._isRedirect) !== true;\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n    if (isUninterruptedRevalidation) ; else if (pendingAction === Action.Pop) ; else if (pendingAction === Action.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === Action.Replace) {\n      init.history.replace(location, location.state);\n    }\n    updateState(_extends({}, newState, {\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(location, newState.matches || state.matches),\n      preventScrollReset,\n      blockers\n    }));\n    // Reset stateful navigation vars\n    pendingAction = Action.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(to, opts) {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, to, opts == null ? void 0 : opts.fromRouteId, opts == null ? void 0 : opts.relative);\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, false, normalizedPath, opts);\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = _extends({}, nextLocation, init.history.encodeLocation(nextLocation));\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n    let historyAction = Action.Push;\n    if (userReplace === true) {\n      historyAction = Action.Replace;\n    } else if (userReplace === false) ; else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = Action.Replace;\n    }\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : undefined;\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction\n    });\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey, IDLE_BLOCKER);\n          updateState({\n            blockers\n          });\n        }\n      });\n      return;\n    }\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace\n    });\n  }\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({\n      revalidation: \"loading\"\n    });\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true\n      });\n      return;\n    }\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(pendingAction || state.historyAction, state.navigation.location, {\n      overrideNavigation: state.navigation\n    });\n  }\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(historyAction, location, opts) {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error\n        }\n      });\n      return;\n    }\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\n      completeNavigation(location, {\n        matches\n      });\n      return;\n    }\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(init.history, location, pendingNavigationController.signal, opts && opts.submission);\n    let pendingActionData;\n    let pendingError;\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError\n      };\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(request, location, opts.submission, matches, {\n        replace: opts.replace\n      });\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n      // Create a GET request for the loaders\n      request = new Request(request.url, {\n        signal: request.signal\n      });\n    }\n    // Call loaders\n    let {\n      shortCircuited,\n      loaderData,\n      errors\n    } = await handleLoaders(request, location, matches, loadingNavigation, opts && opts.submission, opts && opts.fetcherSubmission, opts && opts.replace, pendingActionData, pendingError);\n    if (shortCircuited) {\n      return;\n    }\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n    completeNavigation(location, _extends({\n      matches\n    }, pendingActionData ? {\n      actionData: pendingActionData\n    } : {}, {\n      loaderData,\n      errors\n    }));\n  }\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(request, location, submission, matches, opts) {\n    if (opts === void 0) {\n      opts = {};\n    }\n    interruptActiveLoads();\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({\n      navigation\n    });\n    // Call our action and get the result\n    let result;\n    let actionMatch = getTargetMatch(matches, location);\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id\n        })\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename);\n      if (request.signal.aborted) {\n        return {\n          shortCircuited: true\n        };\n      }\n    }\n    if (isRedirectResult(result)) {\n      let replace;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace = result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, {\n        submission,\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = Action.Push;\n      }\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: {\n          [boundaryMatch.route.id]: result.error\n        }\n      };\n    }\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    return {\n      pendingActionData: {\n        [actionMatch.route.id]: result.data\n      }\n    };\n  }\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(request, location, matches, overrideNavigation, submission, fetcherSubmission, replace, pendingActionData, pendingError) {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, activeSubmission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError);\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(routeId => !(matches && matches.some(m => m.route.id === routeId)) || matchesToLoad && matchesToLoad.some(m => m.route.id === routeId));\n    pendingNavigationLoadId = ++incrementingLoadId;\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, _extends({\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null\n      }, pendingActionData ? {\n        actionData: pendingActionData\n      } : {}, updatedFetchers ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      return {\n        shortCircuited: true\n      };\n    }\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach(rf => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(undefined, fetcher ? fetcher.data : undefined);\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState(_extends({\n        navigation: loadingNavigation\n      }, actionData ? Object.keys(actionData).length === 0 ? {\n        actionData: null\n      } : {\n        actionData\n      } : {}, revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n    }\n    revalidatingFetchers.forEach(rf => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(f => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, request);\n    if (request.signal.aborted) {\n      return {\n        shortCircuited: true\n      };\n    }\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    }\n    revalidatingFetchers.forEach(rf => fetchControllers.delete(rf.key));\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, {\n        replace\n      });\n      return {\n        shortCircuited: true\n      };\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, matches, matchesToLoad, loaderResults, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe(aborted => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n    return _extends({\n      loaderData,\n      errors\n    }, shouldUpdateFetchers ? {\n      fetchers: new Map(state.fetchers)\n    } : {});\n  }\n  function getFetcher(key) {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(key, routeId, href, opts) {\n    if (isServer) {\n      throw new Error(\"router.fetch() was called during the server render, but it shouldn't be. \" + \"You are likely calling a useFetcher() method in the body of your component. \" + \"Try moving it to a useEffect or a callback.\");\n    }\n    if (fetchControllers.has(key)) abortFetcher(key);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(state.location, state.matches, basename, future.v7_prependBasename, href, routeId, opts == null ? void 0 : opts.relative);\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n    if (!matches) {\n      setFetcherError(key, routeId, getInternalRouterError(404, {\n        pathname: normalizedPath\n      }));\n      return;\n    }\n    let {\n      path,\n      submission,\n      error\n    } = normalizeNavigateOptions(future.v7_normalizeFormMethod, true, normalizedPath, opts);\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    let match = getTargetMatch(matches, path);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, {\n      routeId,\n      path\n    });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, submission) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal, submission);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\"action\", fetchRequest, match, requestMatches, manifest, mapRouteProperties, basename);\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return startRedirectNavigation(state, actionResult, {\n          submission,\n          isFetchActionRedirect: true\n        });\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n    }\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(init.history, nextLocation, abortController.signal);\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(init.history, state, matches, submission, nextLocation, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, {\n      [match.route.id]: actionResult.data\n    }, undefined // No need to send through errors since we short circuit above\n    );\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers.filter(rf => rf.key !== key).forEach(rf => {\n      let staleKey = rf.key;\n      let existingFetcher = state.fetchers.get(staleKey);\n      let revalidatingFetcher = getLoadingFetcher(undefined, existingFetcher ? existingFetcher.data : undefined);\n      state.fetchers.set(staleKey, revalidatingFetcher);\n      if (fetchControllers.has(staleKey)) {\n        abortFetcher(staleKey);\n      }\n      if (rf.controller) {\n        fetchControllers.set(staleKey, rf.controller);\n      }\n    });\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach(rf => abortFetcher(rf.key));\n    abortController.signal.addEventListener(\"abort\", abortPendingFetchRevalidations);\n    let {\n      results,\n      loaderResults,\n      fetcherResults\n    } = await callLoadersAndMaybeResolveData(state.matches, matches, matchesToLoad, revalidatingFetchers, revalidationRequest);\n    if (abortController.signal.aborted) {\n      return;\n    }\n    abortController.signal.removeEventListener(\"abort\", abortPendingFetchRevalidations);\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach(r => fetchControllers.delete(r.key));\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey = revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n    // Process and commit output from loaders\n    let {\n      loaderData,\n      errors\n    } = processLoaderData(state, state.matches, matchesToLoad, loaderResults, undefined, revalidatingFetchers, fetcherResults, activeDeferreds);\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers)\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState(_extends({\n        errors,\n        loaderData: mergeLoaderData(state.loaderData, loaderData, matches, errors)\n      }, didAbortFetchLoads || revalidatingFetchers.length > 0 ? {\n        fetchers: new Map(state.fetchers)\n      } : {}));\n      isRevalidationRequired = false;\n    }\n  }\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(key, routeId, path, match, matches, submission) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(submission, existingFetcher ? existingFetcher.data : undefined);\n    state.fetchers.set(key, loadingFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(init.history, path, abortController.signal);\n    fetchControllers.set(key, abortController);\n    let originatingLoadId = incrementingLoadId;\n    let result = await callLoaderOrAction(\"loader\", fetchRequest, match, matches, manifest, mapRouteProperties, basename);\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result = (await resolveDeferredData(result, fetchRequest.signal, true)) || result;\n    }\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({\n          fetchers: new Map(state.fetchers)\n        });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error\n        }\n      });\n      return;\n    }\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(state, redirect, _temp) {\n    let {\n      submission,\n      replace,\n      isFetchActionRedirect\n    } = _temp === void 0 ? {} : _temp;\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n    let redirectLocation = createLocation(state.location, redirect.location, // TODO: This can be removed once we get rid of useTransition in Remix v2\n    _extends({\n      _isRedirect: true\n    }, isFetchActionRedirect ? {\n      _isFetchActionRedirect: true\n    } : {}));\n    invariant(redirectLocation, \"Expected a location on the redirect navigation\");\n    // Check if this an absolute external redirect that goes to a new origin\n    if (ABSOLUTE_URL_REGEX.test(redirect.location) && isBrowser) {\n      let url = init.history.createURL(redirect.location);\n      let isDifferentBasename = stripBasename(url.pathname, basename) == null;\n      if (routerWindow.location.origin !== url.origin || isDifferentBasename) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n    let redirectHistoryAction = replace === true ? Action.Replace : Action.Push;\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let activeSubmission = submission || getSubmissionFromNavigation(state.navigation);\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (redirectPreserveMethodStatusCodes.has(redirect.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: _extends({}, activeSubmission, {\n          formAction: redirect.location\n        }),\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: getLoadingNavigation(redirectLocation),\n        fetcherSubmission: activeSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    } else {\n      // If we have a submission, we will preserve it through the redirect navigation\n      let overrideNavigation = getLoadingNavigation(redirectLocation, activeSubmission);\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset\n      });\n    }\n  }\n  async function callLoadersAndMaybeResolveData(currentMatches, matches, matchesToLoad, fetchersToLoad, request) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename)), ...fetchersToLoad.map(f => {\n      if (f.matches && f.match && f.controller) {\n        return callLoaderOrAction(\"loader\", createClientSideRequest(init.history, f.path, f.controller.signal), f.match, f.matches, manifest, mapRouteProperties, basename);\n      } else {\n        let error = {\n          type: ResultType.error,\n          error: getInternalRouterError(404, {\n            pathname: f.path\n          })\n        };\n        return error;\n      }\n    })]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n    await Promise.all([resolveDeferredResults(currentMatches, matchesToLoad, loaderResults, loaderResults.map(() => request.signal), false, state.loaderData), resolveDeferredResults(currentMatches, fetchersToLoad.map(f => f.match), fetcherResults, fetchersToLoad.map(f => f.controller ? f.controller.signal : null), true)]);\n    return {\n      results,\n      loaderResults,\n      fetcherResults\n    };\n  }\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n  function setFetcherError(key, routeId, error) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error\n      },\n      fetchers: new Map(state.fetchers)\n    });\n  }\n  function deleteFetcher(key) {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n  function abortFetcher(key) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, \"Expected fetch controller: \" + key);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n  function markFetchersDone(keys) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  function markFetchRedirectsDone() {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, \"Expected fetcher: \" + key);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n  function abortStaleFetchLoads(landedId) {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, \"Expected fetcher: \" + key);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n  function getBlocker(key, fn) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n    return blocker;\n  }\n  function deleteBlocker(key) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key, newBlocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\", \"Invalid blocker state transition: \" + blocker.state + \" -> \" + newBlocker.state);\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({\n      blockers\n    });\n  }\n  function shouldBlockNavigation(_ref2) {\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = _ref2;\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({\n      currentLocation,\n      nextLocation,\n      historyAction\n    })) {\n      return blockerKey;\n    }\n  }\n  function cancelActiveDeferreds(predicate) {\n    let cancelledRouteIds = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(positions, getPosition, getKey) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({\n          restoreScrollPosition: y\n        });\n      }\n    }\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n  function getScrollKey(location, matches) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(location, matches.map(m => createUseMatchesMatch(m, state.loaderData)));\n      return key || location.key;\n    }\n    return location.key;\n  }\n  function saveScrollPosition(location, matches) {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n  function getSavedScrollPosition(location, matches) {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n  function _internalSetRoutes(newRoutes) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(newRoutes, mapRouteProperties, undefined, manifest);\n  }\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: to => init.history.createHref(to),\n    encodeLocation: to => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes\n  };\n  return router;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\nconst UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\nfunction createStaticHandler(routes, opts) {\n  invariant(routes.length > 0, \"You must provide a non-empty routes array to createStaticHandler\");\n  let manifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties;\n  if (opts != null && opts.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts != null && opts.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = route => ({\n      hasErrorBoundary: detectErrorBoundary(route)\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n  let dataRoutes = convertRoutesToDataRoutes(routes, mapRouteProperties, undefined, manifest);\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(request, _temp2) {\n    let {\n      requestContext\n    } = _temp2 === void 0 ? {} : _temp2;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, {\n        method\n      });\n      let {\n        matches: methodNotAllowedMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n      let {\n        matches: notFoundMatches,\n        route\n      } = getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return _extends({\n      location,\n      basename\n    }, result);\n  }\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(request, _temp3) {\n    let {\n      routeId,\n      requestContext\n    } = _temp3 === void 0 ? {} : _temp3;\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, {\n        method\n      });\n    } else if (!matches) {\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let match = routeId ? matches.find(m => m.route.id === routeId) : getTargetMatch(matches, location);\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, {\n        pathname: location.pathname\n      });\n    }\n    let result = await queryImpl(request, location, matches, requestContext, match);\n    if (isResponse(result)) {\n      return result;\n    }\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n    if (result.loaderData) {\n      var _result$activeDeferre;\n      let data = Object.values(result.loaderData)[0];\n      if ((_result$activeDeferre = result.activeDeferreds) != null && _result$activeDeferre[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n    return undefined;\n  }\n  async function queryImpl(request, location, matches, requestContext, routeMatch) {\n    invariant(request.signal, \"query()/queryRoute() requests must contain an AbortController signal\");\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(request, matches, routeMatch || getTargetMatch(matches, location), requestContext, routeMatch != null);\n        return result;\n      }\n      let result = await loadRouteData(request, matches, requestContext, routeMatch);\n      return isResponse(result) ? result : _extends({}, result, {\n        actionData: null,\n        actionHeaders: {}\n      });\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error && !isRedirectResponse(e.response)) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n  async function submit(request, matches, actionMatch, requestContext, isRouteRequest) {\n    let result;\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    } else {\n      result = await callLoaderOrAction(\"action\", request, actionMatch, matches, manifest, mapRouteProperties, basename, {\n        isStaticRequest: true,\n        isRouteRequest,\n        requestContext\n      });\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(method + \"() call aborted\");\n      }\n    }\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location\n        }\n      });\n    }\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, {\n        type: \"defer-action\"\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error\n      };\n    }\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: {\n          [actionMatch.route.id]: result.data\n        },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(request, matches, requestContext, undefined, {\n        [boundaryMatch.route.id]: result.error\n      });\n      // action status codes take precedence over loader status codes\n      return _extends({}, context, {\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : 500,\n        actionData: null,\n        actionHeaders: _extends({}, result.headers ? {\n          [actionMatch.route.id]: result.headers\n        } : {})\n      });\n    }\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n    return _extends({}, context, result.statusCode ? {\n      statusCode: result.statusCode\n    } : {}, {\n      actionData: {\n        [actionMatch.route.id]: result.data\n      },\n      actionHeaders: _extends({}, result.headers ? {\n        [actionMatch.route.id]: result.headers\n      } : {})\n    });\n  }\n  async function loadRouteData(request, matches, requestContext, routeMatch, pendingActionError) {\n    let isRouteRequest = routeMatch != null;\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (isRouteRequest && !(routeMatch != null && routeMatch.route.loader) && !(routeMatch != null && routeMatch.route.lazy)) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch == null ? void 0 : routeMatch.route.id\n      });\n    }\n    let requestMatches = routeMatch ? [routeMatch] : getLoaderMatchesUntilBoundary(matches, Object.keys(pendingActionError || {})[0]);\n    let matchesToLoad = requestMatches.filter(m => m.route.loader || m.route.lazy);\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce((acc, m) => Object.assign(acc, {\n          [m.route.id]: null\n        }), {}),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null\n      };\n    }\n    let results = await Promise.all([...matchesToLoad.map(match => callLoaderOrAction(\"loader\", request, match, matches, manifest, mapRouteProperties, basename, {\n      isStaticRequest: true,\n      isRouteRequest,\n      requestContext\n    }))]);\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(method + \"() call aborted\");\n    }\n    // Process and commit output from loaders\n    let activeDeferreds = new Map();\n    let context = processRouteLoaderData(matches, matchesToLoad, results, pendingActionError, activeDeferreds);\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set(matchesToLoad.map(match => match.route.id));\n    matches.forEach(match => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n    return _extends({}, context, {\n      matches,\n      activeDeferreds: activeDeferreds.size > 0 ? Object.fromEntries(activeDeferreds.entries()) : null\n    });\n  }\n  return {\n    dataRoutes,\n    query,\n    queryRoute\n  };\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nfunction getStaticContextFromError(routes, context, error) {\n  let newContext = _extends({}, context, {\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error\n    }\n  });\n  return newContext;\n}\nfunction isSubmissionNavigation(opts) {\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== undefined);\n}\nfunction normalizeTo(location, matches, basename, prependBasename, to, fromRouteId, relative) {\n  let contextualMatches;\n  let activeRouteMatch;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n  // Resolve the relative path\n  let path = resolveTo(to ? to : \".\", getPathContributingMatches(contextualMatches).map(m => m.pathnameBase), stripBasename(location.pathname, basename) || location.pathname, relative === \"path\");\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n  // Add an ?index param for matched index routes if we don't already have one\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch && activeRouteMatch.route.index && !hasNakedIndexQuery(path.search)) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(normalizeFormMethod, isFetcher, path, opts) {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return {\n      path\n    };\n  }\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, {\n        method: opts.formMethod\n      })\n    };\n  }\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, {\n      type: \"invalid-body\"\n    })\n  });\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod ? rawFormMethod.toUpperCase() : rawFormMethod.toLowerCase();\n  let formAction = stripHashFromPath(path);\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ?\n      // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n      Array.from(opts.body.entries()).reduce((acc, _ref3) => {\n        let [name, value] = _ref3;\n        return \"\" + acc + name + \"=\" + value + \"\\n\";\n      }, \"\") : String(opts.body);\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text\n        }\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n      try {\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined\n          }\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n  invariant(typeof FormData === \"function\", \"FormData is not available in this environment\");\n  let searchParams;\n  let formData;\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n  let submission = {\n    formMethod,\n    formAction,\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined\n  };\n  if (isMutationMethod(submission.formMethod)) {\n    return {\n      path,\n      submission\n    };\n  }\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = \"?\" + searchParams;\n  return {\n    path: createPath(parsedPath),\n    submission\n  };\n}\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex(m => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\nfunction getMatchesToLoad(history, state, matches, submission, location, isRevalidationRequired, cancelledDeferredRoutes, cancelledFetcherLoads, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionData, pendingError) {\n  let actionResult = pendingError ? Object.values(pendingError)[0] : pendingActionData ? Object.values(pendingActionData)[0] : undefined;\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n    // Always call the loader on new route instances and pending defer cancellations\n    if (isNewLoader(state.loaderData, state.matches[index], match) || cancelledDeferredRoutes.some(id => id === match.route.id)) {\n      return true;\n    }\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n    return shouldRevalidateLoader(match, _extends({\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params\n    }, submission, {\n      actionResult,\n      defaultShouldRevalidate:\n      // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n      isRevalidationRequired ||\n      // Clicked the same link, resubmitted a GET form\n      currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search ||\n      // Search params affect all loaders\n      currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\n    }));\n  });\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some(m => m.route.id === f.routeId)) {\n      return;\n    }\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null\n      });\n      return;\n    }\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === undefined) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, _extends({\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params\n      }, submission, {\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired\n      }));\n    }\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController()\n      });\n    }\n  });\n  return [navigationMatches, revalidatingFetchers];\n}\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\n  let isNew =\n  // [a] -> [a, b]\n  !currentMatch ||\n  // [a, b] -> [a, c]\n  match.route.id !== currentMatch.route.id;\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\nfunction isNewRouteInstance(currentMatch, match) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\n  );\n}\nfunction shouldRevalidateLoader(loaderMatch, arg) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n  return arg.defaultShouldRevalidate;\n}\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(route, mapRouteProperties, manifest) {\n  if (!route.lazy) {\n    return;\n  }\n  let lazyRoute = await route.lazy();\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\n    let isPropertyStaticallyDefined = staticRouteValue !== undefined &&\n    // This property isn't static since it should always be updated based\n    // on the route updates\n    lazyRouteProperty !== \"hasErrorBoundary\";\n    warning(!isPropertyStaticallyDefined, \"Route \\\"\" + routeToUpdate.id + \"\\\" has a static property \\\"\" + lazyRouteProperty + \"\\\" \" + \"defined but its lazy function is also returning a value for this property. \" + (\"The lazy route property \\\"\" + lazyRouteProperty + \"\\\" will be ignored.\"));\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\n    }\n  }\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, _extends({}, mapRouteProperties(routeToUpdate), {\n    lazy: undefined\n  }));\n}\nasync function callLoaderOrAction(type, request, match, matches, manifest, mapRouteProperties, basename, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  let resultType;\n  let result;\n  let onReject;\n  let runHandler = handler => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject;\n    let abortPromise = new Promise((_, r) => reject = r);\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([handler({\n      request,\n      params: match.params,\n      context: opts.requestContext\n    }), abortPromise]);\n  };\n  try {\n    let handler = match.route[type];\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([runHandler(handler), loadLazyRouteModule(match.route, mapRouteProperties, manifest)]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return {\n            type: ResultType.data,\n            data: undefined\n          };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n    invariant(result !== undefined, \"You defined \" + (type === \"action\" ? \"an action\" : \"a loader\") + \" for route \" + (\"\\\"\" + match.route.id + \"\\\" but didn't return anything from your `\" + type + \"` \") + \"function. Please return a value or `null`.\");\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n  if (isResponse(result)) {\n    let status = result.status;\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(location, \"Redirects returned/thrown from loaders/actions must have a Location header\");\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(new URL(request.url), matches.slice(0, matches.indexOf(match) + 1), basename, true, location);\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\") ? new URL(currentUrl.protocol + location) : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null\n      };\n    }\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      // eslint-disable-next-line no-throw-literal\n      throw {\n        type: resultType || ResultType.data,\n        response: result\n      };\n    }\n    let data;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers\n      };\n    }\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers\n    };\n  }\n  if (resultType === ResultType.error) {\n    return {\n      type: resultType,\n      error: result\n    };\n  }\n  if (isDeferredData(result)) {\n    var _result$init, _result$init2;\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: (_result$init = result.init) == null ? void 0 : _result$init.status,\n      headers: ((_result$init2 = result.init) == null ? void 0 : _result$init2.headers) && new Headers(result.init.headers)\n    };\n  }\n  return {\n    type: ResultType.data,\n    data: result\n  };\n}\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(history, location, signal, submission) {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init = {\n    signal\n  };\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let {\n      formMethod,\n      formEncType\n    } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({\n        \"Content-Type\": formEncType\n      });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n  return new Request(url, init);\n}\nfunction convertFormDataToSearchParams(formData) {\n  let searchParams = new URLSearchParams();\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n  return searchParams;\n}\nfunction convertSearchParamsToFormData(searchParams) {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\nfunction processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds) {\n  // Fill in loaderData/errors from our loaders\n  let loaderData = {};\n  let errors = null;\n  let statusCode;\n  let foundError = false;\n  let loaderHeaders = {};\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(!isRedirectResult(result), \"Cannot handle redirect results in processLoaderData\");\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n      errors = errors || {};\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (result.statusCode != null && result.statusCode !== 200 && !foundError) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders\n  };\n}\nfunction processLoaderData(state, matches, matchesToLoad, results, pendingError, revalidatingFetchers, fetcherResults, activeDeferreds) {\n  let {\n    loaderData,\n    errors\n  } = processRouteLoaderData(matches, matchesToLoad, results, pendingError, activeDeferreds);\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let {\n      key,\n      match,\n      controller\n    } = revalidatingFetchers[index];\n    invariant(fetcherResults !== undefined && fetcherResults[index] !== undefined, \"Did not find corresponding fetcher result\");\n    let result = fetcherResults[index];\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match == null ? void 0 : match.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = _extends({}, errors, {\n          [boundaryMatch.route.id]: result.error\n        });\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n  return {\n    loaderData,\n    errors\n  };\n}\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\n  let mergedLoaderData = _extends({}, newLoaderData);\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(matches, routeId) {\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex(m => m.route.id === routeId) + 1) : [...matches];\n  return eligibleMatches.reverse().find(m => m.route.hasErrorBoundary === true) || matches[0];\n}\nfunction getShortCircuitMatches(routes) {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find(r => r.index || !r.path || r.path === \"/\") || {\n    id: \"__shim-error-route__\"\n  };\n  return {\n    matches: [{\n      params: {},\n      pathname: \"\",\n      pathnameBase: \"\",\n      route\n    }],\n    route\n  };\n}\nfunction getInternalRouterError(status, _temp4) {\n  let {\n    pathname,\n    routeId,\n    method,\n    type\n  } = _temp4 === void 0 ? {} : _temp4;\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide a `loader` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = \"Route \\\"\" + routeId + \"\\\" does not match URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = \"No route matches URL \\\"\" + pathname + \"\\\"\";\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage = \"You made a \" + method.toUpperCase() + \" request to \\\"\" + pathname + \"\\\" but \" + (\"did not provide an `action` for route \\\"\" + routeId + \"\\\", \") + \"so there is no way to handle the request.\";\n    } else if (method) {\n      errorMessage = \"Invalid request method \\\"\" + method.toUpperCase() + \"\\\"\";\n    }\n  }\n  return new ErrorResponse(status || 500, statusText, new Error(errorMessage), true);\n}\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(results) {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return {\n        result,\n        idx: i\n      };\n    }\n  }\n}\nfunction stripHashFromPath(path) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath(_extends({}, parsedPath, {\n    hash: \"\"\n  }));\n}\nfunction isHashChangeOnly(a, b) {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\nfunction isDeferredResult(result) {\n  return result.type === ResultType.deferred;\n}\nfunction isErrorResult(result) {\n  return result.type === ResultType.error;\n}\nfunction isRedirectResult(result) {\n  return (result && result.type) === ResultType.redirect;\n}\nfunction isDeferredData(value) {\n  let deferred = value;\n  return deferred && typeof deferred === \"object\" && typeof deferred.data === \"object\" && typeof deferred.subscribe === \"function\" && typeof deferred.cancel === \"function\" && typeof deferred.resolveData === \"function\";\n}\nfunction isResponse(value) {\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\n}\nfunction isRedirectResponse(result) {\n  if (!isResponse(result)) {\n    return false;\n  }\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\nfunction isQueryRouteResponse(obj) {\n  return obj && isResponse(obj.response) && (obj.type === ResultType.data || ResultType.error);\n}\nfunction isValidMethod(method) {\n  return validRequestMethods.has(method.toLowerCase());\n}\nfunction isMutationMethod(method) {\n  return validMutationMethods.has(method.toLowerCase());\n}\nasync function resolveDeferredResults(currentMatches, matchesToLoad, results, signals, isFetcher, currentLoaderData) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n    let currentMatch = currentMatches.find(m => m.route.id === match.route.id);\n    let isRevalidatingLoader = currentMatch != null && !isNewRouteInstance(currentMatch, match) && (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(signal, \"Expected an AbortSignal for revalidating fetcher deferred result\");\n      await resolveDeferredData(result, signal, isFetcher).then(result => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\nasync function resolveDeferredData(result, signal, unwrap) {\n  if (unwrap === void 0) {\n    unwrap = false;\n  }\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e\n      };\n    }\n  }\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data\n  };\n}\nfunction hasNakedIndexQuery(search) {\n  return new URLSearchParams(search).getAll(\"index\").some(v => v === \"\");\n}\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(match, loaderData) {\n  let {\n    route,\n    pathname,\n    params\n  } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle\n  };\n}\nfunction getTargetMatch(matches, location) {\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\nfunction getSubmissionFromNavigation(navigation) {\n  let {\n    formMethod,\n    formAction,\n    formEncType,\n    text,\n    formData,\n    json\n  } = navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined\n    };\n  }\n}\nfunction getLoadingNavigation(location, submission) {\n  if (submission) {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text\n    };\n    return navigation;\n  } else {\n    let navigation = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined\n    };\n    return navigation;\n  }\n}\nfunction getSubmittingNavigation(location, submission) {\n  let navigation = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text\n  };\n  return navigation;\n}\nfunction getLoadingFetcher(submission, data) {\n  if (submission) {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n      \" _hasFetcherDoneAnything \": true\n    };\n    return fetcher;\n  } else {\n    let fetcher = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n      \" _hasFetcherDoneAnything \": true\n    };\n    return fetcher;\n  }\n}\nfunction getSubmittingFetcher(submission, existingFetcher) {\n  let fetcher = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n    \" _hasFetcherDoneAnything \": true\n  };\n  return fetcher;\n}\nfunction getDoneFetcher(data) {\n  let fetcher = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n    \" _hasFetcherDoneAnything \": true\n  };\n  return fetcher;\n}\n//#endregion\n\nexport { AbortedDeferredError, Action, ErrorResponse, IDLE_BLOCKER, IDLE_FETCHER, IDLE_NAVIGATION, UNSAFE_DEFERRED_SYMBOL, DeferredData as UNSAFE_DeferredData, convertRoutesToDataRoutes as UNSAFE_convertRoutesToDataRoutes, getPathContributingMatches as UNSAFE_getPathContributingMatches, invariant as UNSAFE_invariant, warning as UNSAFE_warning, createBrowserHistory, createHashHistory, createMemoryHistory, createPath, createRouter, createStaticHandler, defer, generatePath, getStaticContextFromError, getToPathname, isDeferredData, isRouteErrorResponse, joinPaths, json, matchPath, matchRoutes, normalizePathname, parsePath, redirect, resolvePath, resolveTo, stripBasename };\n//# sourceMappingURL=router.js.map\n","/**\n * React Router v6.14.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_invariant, joinPaths, matchPath, UNSAFE_getPathContributingMatches, UNSAFE_warning, resolveTo, parsePath, matchRoutes, Action, stripBasename, IDLE_BLOCKER, isRouteErrorResponse, createMemoryHistory, AbortedDeferredError, createRouter } from '@remix-run/router';\nexport { AbortedDeferredError, Action as NavigationType, createPath, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, resolvePath } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nconst DataRouterContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterContext.displayName = \"DataRouter\";\n}\nconst DataRouterStateContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\nconst AwaitContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  AwaitContext.displayName = \"Await\";\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\n\nconst NavigationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  NavigationContext.displayName = \"Navigation\";\n}\nconst LocationContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  LocationContext.displayName = \"Location\";\n}\nconst RouteContext = /*#__PURE__*/React.createContext({\n  outlet: null,\n  matches: [],\n  isDataRoute: false\n});\nif (process.env.NODE_ENV !== \"production\") {\n  RouteContext.displayName = \"Route\";\n}\nconst RouteErrorContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== \"production\") {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nfunction useHref(to, _temp) {\n  let {\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useHref() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    hash,\n    pathname,\n    search\n  } = useResolvedPath(to, {\n    relative\n  });\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n  return navigator.createHref({\n    pathname: joinedPathname,\n    search,\n    hash\n  });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nfunction useInRouterContext() {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nfunction useLocation() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useLocation() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nfunction useNavigationType() {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nfunction useMatch(pattern) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useMatch() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    pathname\n  } = useLocation();\n  return React.useMemo(() => matchPath(pattern, pathname), [pathname, pattern]);\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\n\nconst navigateEffectWarning = \"You should call navigate() in a React.useEffect(), not when \" + \"your component is first rendered.\";\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(cb) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nfunction useNavigate() {\n  let {\n    isDataRoute\n  } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\nfunction useNavigateUnstable() {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useNavigate() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let {\n    basename,\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our history listener yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      navigator.go(to);\n      return;\n    }\n    let path = resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, options.relative === \"path\");\n\n    // If we're operating within a basename, prepend it to the pathname prior\n    // to handing off to history (but only if we're not in a data router,\n    // otherwise it'll prepend the basename inside of the router).\n    // If this is a root navigation, then we navigate to the raw basename\n    // which allows the basename to have full control over the presence of a\n    // trailing slash on root links\n    if (dataRouterContext == null && basename !== \"/\") {\n      path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n    }\n    (!!options.replace ? navigator.replace : navigator.push)(path, options.state, options);\n  }, [basename, navigator, routePathnamesJson, locationPathname, dataRouterContext]);\n  return navigate;\n}\nconst OutletContext = /*#__PURE__*/React.createContext(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nfunction useOutletContext() {\n  return React.useContext(OutletContext);\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nfunction useOutlet(context) {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return /*#__PURE__*/React.createElement(OutletContext.Provider, {\n      value: context\n    }, outlet);\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nfunction useParams() {\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? routeMatch.params : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nfunction useResolvedPath(to, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let routePathnamesJson = JSON.stringify(UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase));\n  return React.useMemo(() => resolveTo(to, JSON.parse(routePathnamesJson), locationPathname, relative === \"path\"), [to, routePathnamesJson, locationPathname, relative]);\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nfunction useRoutes(routes, locationArg) {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nfunction useRoutesImpl(routes, locationArg, dataRouterState) {\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of the\n  // router loaded. We can help them understand how to avoid that.\n  \"useRoutes() may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  let {\n    navigator\n  } = React.useContext(NavigationContext);\n  let {\n    matches: parentMatches\n  } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n  if (process.env.NODE_ENV !== \"production\") {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = parentRoute && parentRoute.path || \"\";\n    warningOnce(parentPathname, !parentRoute || parentPath.endsWith(\"*\"), \"You rendered descendant <Routes> (or called `useRoutes()`) at \" + (\"\\\"\" + parentPathname + \"\\\" (under <Route path=\\\"\" + parentPath + \"\\\">) but the \") + \"parent route path has no trailing \\\"*\\\". This means if you navigate \" + \"deeper, the parent won't match anymore and therefore the child \" + \"routes will never render.\\n\\n\" + (\"Please change the parent <Route path=\\\"\" + parentPath + \"\\\"> to <Route \") + (\"path=\\\"\" + (parentPath === \"/\" ? \"*\" : parentPath + \"/*\") + \"\\\">.\"));\n  }\n  let locationFromContext = useLocation();\n  let location;\n  if (locationArg) {\n    var _parsedLocationArg$pa;\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n    !(parentPathnameBase === \"/\" || ((_parsedLocationArg$pa = parsedLocationArg.pathname) == null ? void 0 : _parsedLocationArg$pa.startsWith(parentPathnameBase))) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"When overriding the location using `<Routes location>` or `useRoutes(routes, location)`, \" + \"the location pathname must begin with the portion of the URL pathname that was \" + (\"matched by all parent routes. The current pathname base is \\\"\" + parentPathnameBase + \"\\\" \") + (\"but pathname \\\"\" + parsedLocationArg.pathname + \"\\\" was given in the `location` prop.\")) : UNSAFE_invariant(false) : void 0;\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n  let pathname = location.pathname || \"/\";\n  let remainingPathname = parentPathnameBase === \"/\" ? pathname : pathname.slice(parentPathnameBase.length) || \"/\";\n  let matches = matchRoutes(routes, {\n    pathname: remainingPathname\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(parentRoute || matches != null, \"No routes matched location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \") : void 0;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(matches == null || matches[matches.length - 1].route.element !== undefined || matches[matches.length - 1].route.Component !== undefined, \"Matched leaf route at location \\\"\" + location.pathname + location.search + location.hash + \"\\\" \" + \"does not have an element or Component. This means it will render an <Outlet /> with a \" + \"null value by default resulting in an \\\"empty\\\" page.\") : void 0;\n  }\n  let renderedMatches = _renderMatches(matches && matches.map(match => Object.assign({}, match, {\n    params: Object.assign({}, parentParams, match.params),\n    pathname: joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathname).pathname : match.pathname]),\n    pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([parentPathnameBase,\n    // Re-encode pathnames that were decoded inside matchRoutes\n    navigator.encodeLocation ? navigator.encodeLocation(match.pathnameBase).pathname : match.pathnameBase])\n  })), parentMatches, dataRouterState);\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return /*#__PURE__*/React.createElement(LocationContext.Provider, {\n      value: {\n        location: _extends({\n          pathname: \"/\",\n          search: \"\",\n          hash: \"\",\n          state: null,\n          key: \"default\"\n        }, location),\n        navigationType: Action.Pop\n      }\n    }, renderedMatches);\n  }\n  return renderedMatches;\n}\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error) ? error.status + \" \" + error.statusText : error instanceof Error ? error.message : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = {\n    padding: \"0.5rem\",\n    backgroundColor: lightgrey\n  };\n  let codeStyles = {\n    padding: \"2px 4px\",\n    backgroundColor: lightgrey\n  };\n  let devInfo = null;\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(\"Error handled by React Router default ErrorBoundary:\", error);\n    devInfo = /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", null, \"\\uD83D\\uDCBF Hey developer \\uD83D\\uDC4B\"), /*#__PURE__*/React.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"ErrorBoundary\"), \" or\", \" \", /*#__PURE__*/React.createElement(\"code\", {\n      style: codeStyles\n    }, \"errorElement\"), \" prop on your route.\"));\n  }\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", null, \"Unexpected Application Error!\"), /*#__PURE__*/React.createElement(\"h3\", {\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, message), stack ? /*#__PURE__*/React.createElement(\"pre\", {\n    style: preStyles\n  }, stack) : null, devInfo);\n}\nconst defaultErrorElement = /*#__PURE__*/React.createElement(DefaultErrorComponent, null);\nclass RenderErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error: error\n    };\n  }\n  static getDerivedStateFromProps(props, state) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"React Router caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    return this.state.error ? /*#__PURE__*/React.createElement(RouteContext.Provider, {\n      value: this.props.routeContext\n    }, /*#__PURE__*/React.createElement(RouteErrorContext.Provider, {\n      value: this.state.error,\n      children: this.props.component\n    })) : this.props.children;\n  }\n}\nfunction RenderedRoute(_ref) {\n  let {\n    routeContext,\n    match,\n    children\n  } = _ref;\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n  return /*#__PURE__*/React.createElement(RouteContext.Provider, {\n    value: routeContext\n  }, children);\n}\nfunction _renderMatches(matches, parentMatches, dataRouterState) {\n  var _dataRouterState2;\n  if (parentMatches === void 0) {\n    parentMatches = [];\n  }\n  if (dataRouterState === void 0) {\n    dataRouterState = null;\n  }\n  if (matches == null) {\n    var _dataRouterState;\n    if ((_dataRouterState = dataRouterState) != null && _dataRouterState.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches;\n    } else {\n      return null;\n    }\n  }\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = (_dataRouterState2 = dataRouterState) == null ? void 0 : _dataRouterState2.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(m => m.route.id && (errors == null ? void 0 : errors[m.route.id]));\n    !(errorIndex >= 0) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"Could not find a matching route for errors on route IDs: \" + Object.keys(errors).join(\",\")) : UNSAFE_invariant(false) : void 0;\n    renderedMatches = renderedMatches.slice(0, Math.min(renderedMatches.length, errorIndex + 1));\n  }\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors == null ? void 0 : errors[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = /*#__PURE__*/React.createElement(match.route.Component, null);\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return /*#__PURE__*/React.createElement(RenderedRoute, {\n        match: match,\n        routeContext: {\n          outlet,\n          matches,\n          isDataRoute: dataRouterState != null\n        },\n        children: children\n      });\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /*#__PURE__*/React.createElement(RenderErrorBoundary, {\n      location: dataRouterState.location,\n      revalidation: dataRouterState.revalidation,\n      component: errorElement,\n      error: error,\n      children: getChildren(),\n      routeContext: {\n        outlet: null,\n        matches,\n        isDataRoute: true\n      }\n    }) : getChildren();\n  }, null);\n}\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterHook[\"UseNavigateStable\"] = \"useNavigate\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseBlocker\"] = \"useBlocker\";\n  DataRouterStateHook[\"UseLoaderData\"] = \"useLoaderData\";\n  DataRouterStateHook[\"UseActionData\"] = \"useActionData\";\n  DataRouterStateHook[\"UseRouteError\"] = \"useRouteError\";\n  DataRouterStateHook[\"UseNavigation\"] = \"useNavigation\";\n  DataRouterStateHook[\"UseRouteLoaderData\"] = \"useRouteLoaderData\";\n  DataRouterStateHook[\"UseMatches\"] = \"useMatches\";\n  DataRouterStateHook[\"UseRevalidator\"] = \"useRevalidator\";\n  DataRouterStateHook[\"UseNavigateStable\"] = \"useNavigate\";\n  DataRouterStateHook[\"UseRouteId\"] = \"useRouteId\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\nfunction useRouteContext(hookName) {\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  !thisRoute.route.id ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, hookName + \" can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nfunction useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nfunction useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nfunction useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return {\n    revalidate: dataRouterContext.router.revalidate,\n    state: state.revalidation\n  };\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nfunction useMatches() {\n  let {\n    matches,\n    loaderData\n  } = useDataRouterState(DataRouterStateHook.UseMatches);\n  return React.useMemo(() => matches.map(match => {\n    let {\n      pathname,\n      params\n    } = match;\n    // Note: This structure matches that created by createUseMatchesMatch\n    // in the @remix-run/router , so if you change this please also change\n    // that :)  Eventually we'll DRY this up\n    return {\n      id: match.route.id,\n      pathname,\n      params,\n      data: loaderData[match.route.id],\n      handle: match.route.handle\n    };\n  }), [matches, loaderData]);\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nfunction useLoaderData() {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\"You cannot `useLoaderData` in an errorElement (routeId: \" + routeId + \")\");\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nfunction useRouteLoaderData(routeId) {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nfunction useActionData() {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n  let route = React.useContext(RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useActionData must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  return Object.values((state == null ? void 0 : state.actionData) || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nfunction useRouteError() {\n  var _state$errors;\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return (_state$errors = state.errors) == null ? void 0 : _state$errors[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nfunction useAsyncValue() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nfunction useAsyncError() {\n  let value = React.useContext(AwaitContext);\n  return value == null ? void 0 : value._error;\n}\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nfunction useBlocker(shouldBlock) {\n  let {\n    router,\n    basename\n  } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback(arg => {\n    if (typeof shouldBlock !== \"function\") {\n      return !!shouldBlock;\n    }\n    if (basename === \"/\") {\n      return shouldBlock(arg);\n    }\n\n    // If they provided us a function and we've got an active basename, strip\n    // it from the locations we expose to the user to match the behavior of\n    // useLocation\n    let {\n      currentLocation,\n      nextLocation,\n      historyAction\n    } = arg;\n    return shouldBlock({\n      currentLocation: _extends({}, currentLocation, {\n        pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\n      }),\n      nextLocation: _extends({}, nextLocation, {\n        pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\n      }),\n      historyAction\n    });\n  }, [basename, shouldBlock]);\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n  let navigate = React.useCallback(function (to, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(activeRef.current, navigateEffectWarning) : void 0;\n\n    // Short circuit here since if this happens on first render the navigate\n    // is useless because we haven't wired up our router subscriber yet\n    if (!activeRef.current) return;\n    if (typeof to === \"number\") {\n      router.navigate(to);\n    } else {\n      router.navigate(to, _extends({\n        fromRouteId: id\n      }, options));\n    }\n  }, [router, id]);\n  return navigate;\n}\nconst alreadyWarned = {};\nfunction warningOnce(key, cond, message) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, message) : void 0;\n  }\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nfunction RouterProvider(_ref) {\n  let {\n    fallbackElement,\n    router,\n    future\n  } = _ref;\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n  let navigator = React.useMemo(() => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: n => router.navigate(n),\n      push: (to, state, opts) => router.navigate(to, {\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      }),\n      replace: (to, state, opts) => router.navigate(to, {\n        replace: true,\n        state,\n        preventScrollReset: opts == null ? void 0 : opts.preventScrollReset\n      })\n    };\n  }, [router]);\n  let basename = router.basename || \"/\";\n  let dataRouterContext = React.useMemo(() => ({\n    router,\n    navigator,\n    static: false,\n    basename\n  }), [router, navigator, basename]);\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataRouterContext.Provider, {\n    value: dataRouterContext\n  }, /*#__PURE__*/React.createElement(DataRouterStateContext.Provider, {\n    value: state\n  }, /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    location: state.location,\n    navigationType: state.historyAction,\n    navigator: navigator\n  }, state.initialized ? /*#__PURE__*/React.createElement(DataRoutes, {\n    routes: router.routes,\n    state: state\n  }) : fallbackElement))), null);\n}\nfunction DataRoutes(_ref2) {\n  let {\n    routes,\n    state\n  } = _ref2;\n  return useRoutesImpl(routes, undefined, state);\n}\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nfunction MemoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    initialEntries,\n    initialIndex,\n    future\n  } = _ref3;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nfunction Navigate(_ref4) {\n  let {\n    to,\n    replace,\n    state,\n    relative\n  } = _ref4;\n  !useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, // TODO: This error is probably because they somehow have 2 versions of\n  // the router loaded. We can help them understand how to avoid that.\n  \"<Navigate> may be used only in the context of a <Router> component.\") : UNSAFE_invariant(false) : void 0;\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(!React.useContext(NavigationContext).static, \"<Navigate> must not be used on the initial render in a <StaticRouter>. \" + \"This is a no-op, but you should modify your code so the <Navigate> is \" + \"only ever rendered in response to some user interaction or state change.\") : void 0;\n  let {\n    matches\n  } = React.useContext(RouteContext);\n  let {\n    pathname: locationPathname\n  } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(to, UNSAFE_getPathContributingMatches(matches).map(match => match.pathnameBase), locationPathname, relative === \"path\");\n  let jsonPath = JSON.stringify(path);\n  React.useEffect(() => navigate(JSON.parse(jsonPath), {\n    replace,\n    state,\n    relative\n  }), [navigate, jsonPath, relative, replace, state]);\n  return null;\n}\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nfunction Outlet(props) {\n  return useOutlet(props.context);\n}\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nfunction Route(_props) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"A <Route> is only ever to be used as the child of <Routes> element, \" + \"never rendered directly. Please wrap your <Route> in a <Routes>.\") : UNSAFE_invariant(false) ;\n}\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nfunction Router(_ref5) {\n  let {\n    basename: basenameProp = \"/\",\n    children = null,\n    location: locationProp,\n    navigationType = Action.Pop,\n    navigator,\n    static: staticProp = false\n  } = _ref5;\n  !!useInRouterContext() ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"You cannot render a <Router> inside another <Router>.\" + \" You should never have more than one in your app.\") : UNSAFE_invariant(false) : void 0;\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(() => ({\n    basename,\n    navigator,\n    static: staticProp\n  }), [basename, navigator, staticProp]);\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\"\n  } = locationProp;\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n    if (trailingPathname == null) {\n      return null;\n    }\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key\n      },\n      navigationType\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(locationContext != null, \"<Router basename=\\\"\" + basename + \"\\\"> is not able to match the URL \" + (\"\\\"\" + pathname + search + hash + \"\\\" because it does not start with the \") + \"basename, so the <Router> won't render anything.\") : void 0;\n  if (locationContext == null) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(NavigationContext.Provider, {\n    value: navigationContext\n  }, /*#__PURE__*/React.createElement(LocationContext.Provider, {\n    children: children,\n    value: locationContext\n  }));\n}\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nfunction Routes(_ref6) {\n  let {\n    children,\n    location\n  } = _ref6;\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nfunction Await(_ref7) {\n  let {\n    children,\n    errorElement,\n    resolve\n  } = _ref7;\n  return /*#__PURE__*/React.createElement(AwaitErrorBoundary, {\n    resolve: resolve,\n    errorElement: errorElement\n  }, /*#__PURE__*/React.createElement(ResolveAwait, null, children));\n}\nvar AwaitRenderStatus;\n(function (AwaitRenderStatus) {\n  AwaitRenderStatus[AwaitRenderStatus[\"pending\"] = 0] = \"pending\";\n  AwaitRenderStatus[AwaitRenderStatus[\"success\"] = 1] = \"success\";\n  AwaitRenderStatus[AwaitRenderStatus[\"error\"] = 2] = \"error\";\n})(AwaitRenderStatus || (AwaitRenderStatus = {}));\nconst neverSettledPromise = new Promise(() => {});\nclass AwaitErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null\n    };\n  }\n  static getDerivedStateFromError(error) {\n    return {\n      error\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    console.error(\"<Await> caught the following error during render\", error, errorInfo);\n  }\n  render() {\n    let {\n      children,\n      errorElement,\n      resolve\n    } = this.props;\n    let promise = null;\n    let status = AwaitRenderStatus.pending;\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_data\", {\n        get: () => resolve\n      });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", {\n        get: () => true\n      });\n      Object.defineProperty(promise, \"_error\", {\n        get: () => renderError\n      });\n    } else if (resolve._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status = promise._error !== undefined ? AwaitRenderStatus.error : promise._data !== undefined ? AwaitRenderStatus.success : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", {\n        get: () => true\n      });\n      promise = resolve.then(data => Object.defineProperty(resolve, \"_data\", {\n        get: () => data\n      }), error => Object.defineProperty(resolve, \"_error\", {\n        get: () => error\n      }));\n    }\n    if (status === AwaitRenderStatus.error && promise._error instanceof AbortedDeferredError) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: errorElement\n      });\n    }\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return /*#__PURE__*/React.createElement(AwaitContext.Provider, {\n        value: promise,\n        children: children\n      });\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait(_ref8) {\n  let {\n    children\n  } = _ref8;\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, toRender);\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nfunction createRoutesFromChildren(children, parentPath) {\n  if (parentPath === void 0) {\n    parentPath = [];\n  }\n  let routes = [];\n  React.Children.forEach(children, (element, index) => {\n    if (! /*#__PURE__*/React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n    let treePath = [...parentPath, index];\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(routes, createRoutesFromChildren(element.props.children, treePath));\n      return;\n    }\n    !(element.type === Route) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"[\" + (typeof element.type === \"string\" ? element.type : element.type.name) + \"] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>\") : UNSAFE_invariant(false) : void 0;\n    !(!element.props.index || !element.props.children) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"An index route cannot have child routes.\") : UNSAFE_invariant(false) : void 0;\n    let route = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary: element.props.ErrorBoundary != null || element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy\n    };\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(element.props.children, treePath);\n    }\n    routes.push(route);\n  });\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nfunction renderMatches(matches) {\n  return _renderMatches(matches);\n}\n\nfunction mapRouteProperties(route) {\n  let updates = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null\n  };\n  if (route.Component) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.element) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `Component` and `element` on your route - \" + \"`Component` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      element: /*#__PURE__*/React.createElement(route.Component),\n      Component: undefined\n    });\n  }\n  if (route.ErrorBoundary) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (route.errorElement) {\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" + \"`ErrorBoundary` will be used.\") : void 0;\n      }\n    }\n    Object.assign(updates, {\n      errorElement: /*#__PURE__*/React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined\n    });\n  }\n  return updates;\n}\nfunction createMemoryRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createMemoryHistory({\n      initialEntries: opts == null ? void 0 : opts.initialEntries,\n      initialIndex: opts == null ? void 0 : opts.initialIndex\n    }),\n    hydrationData: opts == null ? void 0 : opts.hydrationData,\n    routes,\n    mapRouteProperties\n  }).initialize();\n}\n\nexport { Await, MemoryRouter, Navigate, Outlet, Route, Router, RouterProvider, Routes, DataRouterContext as UNSAFE_DataRouterContext, DataRouterStateContext as UNSAFE_DataRouterStateContext, LocationContext as UNSAFE_LocationContext, NavigationContext as UNSAFE_NavigationContext, RouteContext as UNSAFE_RouteContext, mapRouteProperties as UNSAFE_mapRouteProperties, useRouteId as UNSAFE_useRouteId, useRoutesImpl as UNSAFE_useRoutesImpl, createMemoryRouter, createRoutesFromChildren, createRoutesFromChildren as createRoutesFromElements, renderMatches, useBlocker as unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes };\n//# sourceMappingURL=index.js.map\n","/**\n * React Router DOM v6.14.2\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport * as React from 'react';\nimport { UNSAFE_mapRouteProperties, Router, UNSAFE_NavigationContext, useHref, useResolvedPath, useLocation, UNSAFE_DataRouterStateContext, useNavigate, createPath, UNSAFE_useRouteId, UNSAFE_RouteContext, useMatches, useNavigation, unstable_useBlocker, UNSAFE_DataRouterContext } from 'react-router';\nexport { AbortedDeferredError, Await, MemoryRouter, Navigate, NavigationType, Outlet, Route, Router, RouterProvider, Routes, UNSAFE_DataRouterContext, UNSAFE_DataRouterStateContext, UNSAFE_LocationContext, UNSAFE_NavigationContext, UNSAFE_RouteContext, UNSAFE_useRouteId, createMemoryRouter, createPath, createRoutesFromChildren, createRoutesFromElements, defer, generatePath, isRouteErrorResponse, json, matchPath, matchRoutes, parsePath, redirect, renderMatches, resolvePath, unstable_useBlocker, useActionData, useAsyncError, useAsyncValue, useHref, useInRouterContext, useLoaderData, useLocation, useMatch, useMatches, useNavigate, useNavigation, useNavigationType, useOutlet, useOutletContext, useParams, useResolvedPath, useRevalidator, useRouteError, useRouteLoaderData, useRoutes } from 'react-router';\nimport { stripBasename, UNSAFE_warning, createRouter, createBrowserHistory, createHashHistory, ErrorResponse, UNSAFE_invariant, joinPaths } from '@remix-run/router';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nconst defaultMethod = \"get\";\nconst defaultEncType = \"application/x-www-form-urlencoded\";\nfunction isHtmlElement(object) {\n  return object != null && typeof object.tagName === \"string\";\n}\nfunction isButtonElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\nfunction isFormElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\nfunction isInputElement(object) {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\nfunction shouldProcessLinkClick(event, target) {\n  return event.button === 0 && (\n  // Ignore everything but left clicks\n  !target || target === \"_self\") &&\n  // Let browser handle \"target=_blank\" etc.\n  !isModifiedEvent(event) // Ignore clicks with modifier keys\n  ;\n}\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nfunction createSearchParams(init) {\n  if (init === void 0) {\n    init = \"\";\n  }\n  return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n    let value = init[key];\n    return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n  }, []));\n}\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\n  let searchParams = createSearchParams(locationSearch);\n  if (defaultSearchParams) {\n    for (let key of defaultSearchParams.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach(value => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n  }\n  return searchParams;\n}\n// One-time check for submitter support\nlet _formDataSupportsSubmitter = null;\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(document.createElement(\"form\"),\n      // @ts-expect-error if FormData supports the submitter parameter, this will throw\n      0);\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\nconst supportedFormEncTypes = new Set([\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"]);\nfunction getFormEncType(encType) {\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\n    process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"\\\"\" + encType + \"\\\" is not a valid `encType` for `<Form>`/`<fetcher.Form>` \" + (\"and will default to \\\"\" + defaultEncType + \"\\\"\")) : void 0;\n    return null;\n  }\n  return encType;\n}\nfunction getFormSubmissionInfo(target, basename) {\n  let method;\n  let action;\n  let encType;\n  let formData;\n  let body;\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n    formData = new FormData(target);\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\n    let form = target.form;\n    if (form == null) {\n      throw new Error(\"Cannot submit a <button> or <input type=\\\"submit\\\"> without a <form>\");\n    }\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let {\n        name,\n        type,\n        value\n      } = target;\n      if (type === \"image\") {\n        let prefix = name ? name + \".\" : \"\";\n        formData.append(prefix + \"x\", \"0\");\n        formData.append(prefix + \"y\", \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\"Cannot submit element that is not <form>, <button>, or \" + \"<input type=\\\"submit|image\\\">\");\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n  return {\n    action,\n    method: method.toLowerCase(),\n    encType,\n    formData,\n    body\n  };\n}\n\nconst _excluded = [\"onClick\", \"relative\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\", \"preventScrollReset\"],\n  _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"],\n  _excluded3 = [\"reloadDocument\", \"replace\", \"state\", \"method\", \"action\", \"onSubmit\", \"submit\", \"relative\", \"preventScrollReset\"];\nfunction createBrowserRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createBrowserHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction createHashRouter(routes, opts) {\n  return createRouter({\n    basename: opts == null ? void 0 : opts.basename,\n    future: _extends({}, opts == null ? void 0 : opts.future, {\n      v7_prependBasename: true\n    }),\n    history: createHashHistory({\n      window: opts == null ? void 0 : opts.window\n    }),\n    hydrationData: (opts == null ? void 0 : opts.hydrationData) || parseHydrationData(),\n    routes,\n    mapRouteProperties: UNSAFE_mapRouteProperties\n  }).initialize();\n}\nfunction parseHydrationData() {\n  var _window;\n  let state = (_window = window) == null ? void 0 : _window.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = _extends({}, state, {\n      errors: deserializeErrors(state.errors)\n    });\n  }\n  return state;\n}\nfunction deserializeErrors(errors) {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(val.status, val.statusText, val.data, val.internal === true);\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nfunction BrowserRouter(_ref) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nfunction HashRouter(_ref2) {\n  let {\n    basename,\n    children,\n    future,\n    window\n  } = _ref2;\n  let historyRef = React.useRef();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({\n      window,\n      v5Compat: true\n    });\n  }\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter(_ref3) {\n  let {\n    basename,\n    children,\n    future,\n    history\n  } = _ref3;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location\n  });\n  let {\n    v7_startTransition\n  } = future || {};\n  let setState = React.useCallback(newState => {\n    v7_startTransition && startTransitionImpl ? startTransitionImpl(() => setStateImpl(newState)) : setStateImpl(newState);\n  }, [setStateImpl, v7_startTransition]);\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n  return /*#__PURE__*/React.createElement(Router, {\n    basename: basename,\n    children: children,\n    location: state.location,\n    navigationType: state.action,\n    navigator: history\n  });\n}\nif (process.env.NODE_ENV !== \"production\") {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n  let {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset\n    } = _ref4,\n    rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  // Rendered into <a href> for absolute URLs\n  let absoluteHref;\n  let isExternal = false;\n  if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n    // Render the absolute href server- and client-side\n    absoluteHref = to;\n    // Only check for external origins client-side\n    if (isBrowser) {\n      try {\n        let currentUrl = new URL(window.location.href);\n        let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\n        let path = stripBasename(targetUrl.pathname, basename);\n        if (targetUrl.origin === currentUrl.origin && path != null) {\n          // Strip the protocol/origin/basename for same-origin absolute URLs\n          to = path + targetUrl.search + targetUrl.hash;\n        } else {\n          isExternal = true;\n        }\n      } catch (e) {\n        // We can't do external URL detection without a valid URL\n        process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(false, \"<Link to=\\\"\" + to + \"\\\"> contains an invalid URL which will probably break \" + \"when clicked - please update to a valid URL path.\") : void 0;\n      }\n    }\n  }\n  // Rendered into <a href> for relative URLs\n  let href = useHref(to, {\n    relative\n  });\n  let internalOnClick = useLinkClickHandler(to, {\n    replace,\n    state,\n    target,\n    preventScrollReset,\n    relative\n  });\n  function handleClick(event) {\n    if (onClick) onClick(event);\n    if (!event.defaultPrevented) {\n      internalOnClick(event);\n    }\n  }\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/anchor-has-content\n    React.createElement(\"a\", _extends({}, rest, {\n      href: absoluteHref || href,\n      onClick: isExternal || reloadDocument ? onClick : handleClick,\n      ref: ref,\n      target: target\n    }))\n  );\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Link.displayName = \"Link\";\n}\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n  let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children\n    } = _ref5,\n    rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n  let path = useResolvedPath(to, {\n    relative: rest.relative\n  });\n  let location = useLocation();\n  let routerState = React.useContext(UNSAFE_DataRouterStateContext);\n  let {\n    navigator\n  } = React.useContext(UNSAFE_NavigationContext);\n  let toPathname = navigator.encodeLocation ? navigator.encodeLocation(path).pathname : path.pathname;\n  let locationPathname = location.pathname;\n  let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\n  if (!caseSensitive) {\n    locationPathname = locationPathname.toLowerCase();\n    nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\n    toPathname = toPathname.toLowerCase();\n  }\n  let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n  let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\n  let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n  let className;\n  if (typeof classNameProp === \"function\") {\n    className = classNameProp({\n      isActive,\n      isPending\n    });\n  } else {\n    // If the className prop is not a function, we use a default `active`\n    // class for <NavLink />s that are active. In v5 `active` was the default\n    // value for `activeClassName`, but we are removing that API and can still\n    // use the old default behavior for a cleaner upgrade path and keep the\n    // simple styling rules working as they currently do.\n    className = [classNameProp, isActive ? \"active\" : null, isPending ? \"pending\" : null].filter(Boolean).join(\" \");\n  }\n  let style = typeof styleProp === \"function\" ? styleProp({\n    isActive,\n    isPending\n  }) : styleProp;\n  return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n    \"aria-current\": ariaCurrent,\n    className: className,\n    ref: ref,\n    style: style,\n    to: to\n  }), typeof children === \"function\" ? children({\n    isActive,\n    isPending\n  }) : children);\n});\nif (process.env.NODE_ENV !== \"production\") {\n  NavLink.displayName = \"NavLink\";\n}\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nconst Form = /*#__PURE__*/React.forwardRef((props, ref) => {\n  let submit = useSubmit();\n  return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n    submit: submit,\n    ref: ref\n  }));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  Form.displayName = \"Form\";\n}\nconst FormImpl = /*#__PURE__*/React.forwardRef((_ref6, forwardedRef) => {\n  let {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset\n    } = _ref6,\n    props = _objectWithoutPropertiesLoose(_ref6, _excluded3);\n  let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n  let formAction = useFormAction(action, {\n    relative\n  });\n  let submitHandler = event => {\n    onSubmit && onSubmit(event);\n    if (event.defaultPrevented) return;\n    event.preventDefault();\n    let submitter = event.nativeEvent.submitter;\n    let submitMethod = (submitter == null ? void 0 : submitter.getAttribute(\"formmethod\")) || method;\n    submit(submitter || event.currentTarget, {\n      method: submitMethod,\n      replace,\n      state,\n      relative,\n      preventScrollReset\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"form\", _extends({\n    ref: forwardedRef,\n    method: formMethod,\n    action: formAction,\n    onSubmit: reloadDocument ? onSubmit : submitHandler\n  }, props));\n});\nif (process.env.NODE_ENV !== \"production\") {\n  FormImpl.displayName = \"FormImpl\";\n}\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nfunction ScrollRestoration(_ref7) {\n  let {\n    getKey,\n    storageKey\n  } = _ref7;\n  useScrollRestoration({\n    getKey,\n    storageKey\n  });\n  return null;\n}\nif (process.env.NODE_ENV !== \"production\") {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\nvar DataRouterHook;\n(function (DataRouterHook) {\n  DataRouterHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n  DataRouterHook[\"UseSubmit\"] = \"useSubmit\";\n  DataRouterHook[\"UseSubmitFetcher\"] = \"useSubmitFetcher\";\n  DataRouterHook[\"UseFetcher\"] = \"useFetcher\";\n})(DataRouterHook || (DataRouterHook = {}));\nvar DataRouterStateHook;\n(function (DataRouterStateHook) {\n  DataRouterStateHook[\"UseFetchers\"] = \"useFetchers\";\n  DataRouterStateHook[\"UseScrollRestoration\"] = \"useScrollRestoration\";\n})(DataRouterStateHook || (DataRouterStateHook = {}));\nfunction getDataRouterConsoleError(hookName) {\n  return hookName + \" must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.\";\n}\nfunction useDataRouterContext(hookName) {\n  let ctx = React.useContext(UNSAFE_DataRouterContext);\n  !ctx ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return ctx;\n}\nfunction useDataRouterState(hookName) {\n  let state = React.useContext(UNSAFE_DataRouterStateContext);\n  !state ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, getDataRouterConsoleError(hookName)) : UNSAFE_invariant(false) : void 0;\n  return state;\n}\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nfunction useLinkClickHandler(to, _temp) {\n  let {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative\n  } = _temp === void 0 ? {} : _temp;\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, {\n    relative\n  });\n  return React.useCallback(event => {\n    if (shouldProcessLinkClick(event, target)) {\n      event.preventDefault();\n      // If the URL hasn't changed, a regular <a> will do a replace instead of\n      // a push, so do the same here unless the replace prop is explicitly set\n      let replace = replaceProp !== undefined ? replaceProp : createPath(location) === createPath(path);\n      navigate(to, {\n        replace,\n        state,\n        preventScrollReset,\n        relative\n      });\n    }\n  }, [location, navigate, path, replaceProp, state, target, to, preventScrollReset, relative]);\n}\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nfunction useSearchParams(defaultInit) {\n  process.env.NODE_ENV !== \"production\" ? UNSAFE_warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\") : void 0;\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n  let location = useLocation();\n  let searchParams = React.useMemo(() =>\n  // Only merge in the defaults if we haven't yet called setSearchParams.\n  // Once we call that we want those to take precedence, otherwise you can't\n  // remove a param with setSearchParams({}) if it has an initial value\n  getSearchParamsForLocation(location.search, hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current), [location.search]);\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n    const newSearchParams = createSearchParams(typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit);\n    hasSetSearchParamsRef.current = true;\n    navigate(\"?\" + newSearchParams, navigateOptions);\n  }, [navigate, searchParams]);\n  return [searchParams, setSearchParams];\n}\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\"You are calling submit during the server render. \" + \"Try calling submit within a `useEffect` or callback instead.\");\n  }\n}\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nfunction useSubmit() {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let currentRouteId = UNSAFE_useRouteId();\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    router.navigate(options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType,\n      replace: options.replace,\n      state: options.state,\n      fromRouteId: currentRouteId\n    });\n  }, [router, basename, currentRouteId]);\n}\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(fetcherKey, fetcherRouteId) {\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  return React.useCallback(function (target, options) {\n    if (options === void 0) {\n      options = {};\n    }\n    validateClientSideSubmission();\n    let {\n      action,\n      method,\n      encType,\n      formData,\n      body\n    } = getFormSubmissionInfo(target, basename);\n    !(fetcherRouteId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for useFetcher()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n      preventScrollReset: options.preventScrollReset,\n      formData,\n      body,\n      formMethod: options.method || method,\n      formEncType: options.encType || encType\n    });\n  }, [router, basename, fetcherKey, fetcherRouteId]);\n}\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nfunction useFormAction(action, _temp2) {\n  let {\n    relative\n  } = _temp2 === void 0 ? {} : _temp2;\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let routeContext = React.useContext(UNSAFE_RouteContext);\n  !routeContext ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFormAction must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = _extends({}, useResolvedPath(action ? action : \".\", {\n    relative\n  }));\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params and the hash of the resolved\n  // URL. This is the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to these directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    // or hash\n    path.search = location.search;\n    path.hash = location.hash;\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? \"?\" + params.toString() : \"\";\n    }\n  }\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\n  }\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n  return createPath(path);\n}\nfunction createFetcherForm(fetcherKey, routeId) {\n  let FetcherForm = /*#__PURE__*/React.forwardRef((props, ref) => {\n    let submit = useSubmitFetcher(fetcherKey, routeId);\n    return /*#__PURE__*/React.createElement(FormImpl, _extends({}, props, {\n      ref: ref,\n      submit: submit\n    }));\n  });\n  if (process.env.NODE_ENV !== \"production\") {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\nlet fetcherId = 0;\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nfunction useFetcher() {\n  var _route$matches;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseFetcher);\n  let route = React.useContext(UNSAFE_RouteContext);\n  !route ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher must be used inside a RouteContext\") : UNSAFE_invariant(false) : void 0;\n  let routeId = (_route$matches = route.matches[route.matches.length - 1]) == null ? void 0 : _route$matches.route.id;\n  !(routeId != null) ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"useFetcher can only be used on routes that contain a unique \\\"id\\\"\") : UNSAFE_invariant(false) : void 0;\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.Form()\") : UNSAFE_invariant(false) : void 0;\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => href => {\n    !router ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No router available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    !routeId ? process.env.NODE_ENV !== \"production\" ? UNSAFE_invariant(false, \"No routeId available for fetcher.load()\") : UNSAFE_invariant(false) : void 0;\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n  let fetcher = router.getFetcher(fetcherKey);\n  let fetcherWithComponents = React.useMemo(() => _extends({\n    Form,\n    submit,\n    load\n  }, fetcher), [fetcher, Form, submit, load]);\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(\"No router available to clean up from useFetcher()\");\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n  return fetcherWithComponents;\n}\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nfunction useFetchers() {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions = {};\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration(_temp3) {\n  let {\n    getKey,\n    storageKey\n  } = _temp3 === void 0 ? {} : _temp3;\n  let {\n    router\n  } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let {\n    restoreScrollPosition,\n    preventScrollReset\n  } = useDataRouterState(DataRouterStateHook.UseScrollRestoration);\n  let {\n    basename\n  } = React.useContext(UNSAFE_NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n  // Save positions on pagehide\n  usePageHide(React.useCallback(() => {\n    if (navigation.state === \"idle\") {\n      let key = (getKey ? getKey(location, matches) : null) || location.key;\n      savedScrollPositions[key] = window.scrollY;\n    }\n    sessionStorage.setItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY, JSON.stringify(savedScrollPositions));\n    window.history.scrollRestoration = \"auto\";\n  }, [storageKey, getKey, navigation.state, location, matches]));\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(storageKey || SCROLL_RESTORATION_STORAGE_KEY);\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename = getKey && basename !== \"/\" ? (location, matches) => getKey( // Strip the basename to match useLocation()\n      _extends({}, location, {\n        pathname: stripBasename(location.pathname, basename) || location.pathname\n      }), matches) : getKey;\n      let disableScrollRestoration = router == null ? void 0 : router.enableScrollRestoration(savedScrollPositions, () => window.scrollY, getKeyWithoutBasename);\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(decodeURIComponent(location.hash.slice(1)));\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction useBeforeUnload(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(callback, options) {\n  let {\n    capture\n  } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? {\n      capture\n    } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt(_ref8) {\n  let {\n    when,\n    message\n  } = _ref8;\n  let blocker = unstable_useBlocker(when);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n}\n//#endregion\n\nexport { BrowserRouter, Form, HashRouter, Link, NavLink, ScrollRestoration, useScrollRestoration as UNSAFE_useScrollRestoration, createBrowserRouter, createHashRouter, createSearchParams, HistoryRouter as unstable_HistoryRouter, usePrompt as unstable_usePrompt, useBeforeUnload, useFetcher, useFetchers, useFormAction, useLinkClickHandler, useSearchParams, useSubmit };\n//# sourceMappingURL=index.js.map\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactRouterDom = require(\"react-router-dom\");\n\nvar _excluded = [\"children\", \"onClick\", \"replace\", \"to\", \"state\", \"activeClassName\", \"className\", \"activeStyle\", \"style\", \"isActive\"];\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\nvar LinkContainer = function LinkContainer(_ref) {\n  var children = _ref.children,\n      onClick = _ref.onClick,\n      replace = _ref.replace,\n      to = _ref.to,\n      state = _ref.state,\n      activeClassName = _ref.activeClassName,\n      className = _ref.className,\n      activeStyle = _ref.activeStyle,\n      style = _ref.style,\n      getIsActive = _ref.isActive,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var path = _typeof(to) === 'object' ? to.pathname || '' : to;\n  var navigate = (0, _reactRouterDom.useNavigate)();\n  var href = (0, _reactRouterDom.useHref)(typeof to === 'string' ? {\n    pathname: to\n  } : to);\n  var match = (0, _reactRouterDom.useMatch)(path);\n  var location = (0, _reactRouterDom.useLocation)();\n\n  var child = _react[\"default\"].Children.only(children);\n\n  var isActive = !!(getIsActive ? typeof getIsActive === 'function' ? getIsActive(match, location) : getIsActive : match);\n\n  var handleClick = function handleClick(event) {\n    if (children.props.onClick) {\n      children.props.onClick(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n\n    if (!event.defaultPrevented && // onClick prevented default\n    event.button === 0 && // ignore right clicks\n    !isModifiedEvent(event) // ignore clicks with modifier keys\n    ) {\n      event.preventDefault();\n      navigate(to, {\n        replace: replace,\n        state: state\n      });\n    }\n  };\n\n  return /*#__PURE__*/_react[\"default\"].cloneElement(child, _objectSpread(_objectSpread({}, props), {}, {\n    className: [className, child.props.className, isActive ? activeClassName : null].join(' ').trim(),\n    style: isActive ? _objectSpread(_objectSpread({}, style), activeStyle) : style,\n    href: href,\n    onClick: handleClick\n  }));\n};\n\nLinkContainer.propTypes = {\n  children: _propTypes[\"default\"].element.isRequired,\n  onClick: _propTypes[\"default\"].func,\n  replace: _propTypes[\"default\"].bool,\n  to: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].object]).isRequired,\n  state: _propTypes[\"default\"].object,\n  className: _propTypes[\"default\"].string,\n  activeClassName: _propTypes[\"default\"].string,\n  style: _propTypes[\"default\"].objectOf(_propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number])),\n  activeStyle: _propTypes[\"default\"].objectOf(_propTypes[\"default\"].oneOfType([_propTypes[\"default\"].string, _propTypes[\"default\"].number])),\n  isActive: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].func, _propTypes[\"default\"].bool])\n};\nLinkContainer.defaultProps = {\n  replace: false,\n  activeClassName: 'active',\n  onClick: null,\n  className: null,\n  style: null,\n  activeStyle: null,\n  isActive: null\n};\nvar _default = LinkContainer;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"LinkContainer\", {\n  enumerable: true,\n  get: function get() {\n    return _LinkContainer[\"default\"];\n  }\n});\n\nvar _LinkContainer = _interopRequireDefault(require(\"./LinkContainer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }"],"names":["_extends","target","i","source","key","Action","PopStateEventType","createMemoryHistory","options","initialEntries","initialIndex","v5Compat","entries","entry","index","createMemoryLocation","clampIndex","action","listener","n","getCurrentLocation","to","state","location","createLocation","warning","createHref","createPath","path","parsePath","nextLocation","delta","nextIndex","fn","createBrowserHistory","createBrowserLocation","window","globalHistory","pathname","search","hash","createBrowserHref","getUrlBasedHistory","createHashHistory","createHashLocation","createHashHref","base","href","url","hashIndex","validateHashLocation","invariant","value","message","cond","createKey","getHistoryState","current","_ref","parsedPath","searchIndex","getLocation","validateLocation","getIndex","handlePop","history","push","historyState","error","replace","createURL","ResultType","immutableRouteKeys","isIndexRoute","route","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","treePath","id","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","meta","joinPaths","routesMeta","computeScore","_route$path","exploded","explodeOptionalSegments","segments","first","rest","isOptional","required","restExploded","result","subpath","a","b","compareIndexes","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","s","initialScore","score","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","normalizePathname","generatePath","originalPath","params","prefix","stringify","p","array","keyMatch","optional","param","pattern","matcher","paramNames","compilePath","pathnameBase","captureGroups","memo","paramName","splatValue","safelyDecodeURIComponent","caseSensitive","regexpSource","_","startIndex","nextChar","resolvePath","fromPathname","toPathname","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","from","routePathnameIndex","toSegments","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","headers","AbortedDeferredError","DeferredData","reject","r","onAbort","acc","promise","undefinedError","aborted","settledKey","subscriber","v","k","signal","resolve","_ref2","unwrapTrackedPromise","isTrackedPromise","defer","redirect","ErrorResponse","status","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","IDLE_FETCHER","IDLE_BLOCKER","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","createRouter","routerWindow","isBrowser","isServer","detectErrorBoundary","dataRoutes","inFlightDataRoutes","future","unlistenHistory","subscribers","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","initialMatches","initialErrors","getInternalRouterError","getShortCircuitMatches","initialized","m","router","pendingAction","pendingPreventScrollReset","pendingNavigationController","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","initialize","historyAction","blockerKey","shouldBlockNavigation","updateBlocker","blockers","updateState","startNavigation","dispose","deleteFetcher","deleteBlocker","subscribe","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","actionData","loaderData","mergeLoaderData","preventScrollReset","getSavedScrollPosition","navigate","opts","normalizedPath","normalizeTo","submission","normalizeNavigateOptions","currentLocation","userReplace","revalidate","interruptActiveLoads","saveScrollPosition","routesToUse","loadingNavigation","notFoundMatches","cancelActiveDeferreds","isHashChangeOnly","request","createClientSideRequest","pendingActionData","pendingError","findNearestBoundary","actionOutput","handleAction","getLoadingNavigation","shortCircuited","errors","handleLoaders","navigation","getSubmittingNavigation","actionMatch","getTargetMatch","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","boundaryMatch","isDeferredResult","overrideNavigation","fetcherSubmission","activeSubmission","getSubmissionFromNavigation","matchesToLoad","revalidatingFetchers","getMatchesToLoad","routeId","updatedFetchers","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","getLoadingFetcher","abortFetcher","abortPendingFetchRevalidations","f","results","loaderResults","fetcherResults","callLoadersAndMaybeResolveData","findRedirect","fetcherKey","processLoaderData","deferredData","didAbortFetchLoads","abortStaleFetchLoads","shouldUpdateFetchers","getFetcher","fetch","setFetcherError","handleFetcherAction","handleFetcherLoader","requestMatches","existingFetcher","getSubmittingFetcher","abortController","fetchRequest","originatingLoadId","actionResult","doneFetcher","getDoneFetcher","loadingFetcher","revalidationRequest","loadId","loadFetcher","staleKey","resolveDeferredData","_temp","isFetchActionRedirect","redirectLocation","isDifferentBasename","redirectHistoryAction","currentMatches","fetchersToLoad","resolveDeferredResults","controller","markFetchersDone","keys","doneKeys","landedId","yeetedKeys","getBlocker","blocker","newBlocker","blockerFunction","predicate","cancelledRouteIds","dfd","enableScrollRestoration","positions","getPosition","getKey","y","getScrollKey","createUseMatchesMatch","_internalSetRoutes","newRoutes","isSubmissionNavigation","prependBasename","fromRouteId","relative","contextualMatches","activeRouteMatch","hasNakedIndexQuery","normalizeFormMethod","isFetcher","isValidMethod","getInvalidBodyError","rawFormMethod","formMethod","formAction","stripHashFromPath","text","_ref3","name","searchParams","formData","convertFormDataToSearchParams","convertSearchParamsToFormData","getLoaderMatchesUntilBoundary","boundaryId","boundaryMatches","currentUrl","nextUrl","navigationMatches","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","isNewRouteInstance","fetcherMatches","fetcherMatch","shouldRevalidate","currentLoaderData","currentMatch","isNew","isMissingData","currentPath","loaderMatch","arg","routeChoice","loadLazyRouteModule","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","isPropertyStaticallyDefined","type","resultType","onReject","runHandler","handler","abortPromise","e","isResponse","isSameBasename","contentType","isDeferredData","_result$init","_result$init2","formEncType","processRouteLoaderData","statusCode","foundError","loaderHeaders","newLoaderData","mergedLoaderData","_temp4","method","errorMessage","deferred","signals","isRevalidatingLoader","unwrap","pathMatches","DataRouterContext","React.createContext","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","RouteErrorContext","useHref","useInRouterContext","UNSAFE_invariant","navigator","React.useContext","useResolvedPath","joinedPathname","useLocation","useNavigationType","useMatch","React.useMemo","useIsomorphicLayoutEffect","cb","React.useLayoutEffect","useNavigate","isDataRoute","useNavigateStable","useNavigateUnstable","dataRouterContext","routePathnamesJson","UNSAFE_getPathContributingMatches","activeRef","React.useRef","React.useCallback","OutletContext","useOutletContext","useOutlet","context","outlet","React.createElement","useParams","routeMatch","_temp2","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","preStyles","React.Fragment","defaultErrorElement","RenderErrorBoundary","React.Component","props","errorInfo","RenderedRoute","routeContext","children","_dataRouterState2","_dataRouterState","errorIndex","errorElement","getChildren","DataRouterHook","DataRouterStateHook","useDataRouterContext","hookName","ctx","useDataRouterState","useRouteContext","useCurrentRouteId","thisRoute","useRouteId","useNavigation","useRevalidator","useMatches","useLoaderData","useRouteLoaderData","useActionData","_state$errors","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","setBlockerKey","React.useState","React.useEffect","START_TRANSITION","startTransitionImpl","React","RouterProvider","fallbackElement","setStateImpl","v7_startTransition","setState","Router","DataRoutes","MemoryRouter","historyRef","Navigate","_ref4","jsonPath","Outlet","Route","_props","_ref5","basenameProp","locationProp","navigationType","staticProp","navigationContext","locationContext","trailingPathname","Routes","_ref6","createRoutesFromChildren","Await","_ref7","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","renderError","_ref8","toRender","React.Children","element","React.isValidElement","renderMatches","updates","createMemoryRouter","_objectWithoutPropertiesLoose","excluded","sourceKeys","defaultMethod","defaultEncType","isHtmlElement","object","isButtonElement","isFormElement","isInputElement","isModifiedEvent","event","shouldProcessLinkClick","createSearchParams","getSearchParamsForLocation","locationSearch","defaultSearchParams","_formDataSupportsSubmitter","isFormDataSubmitterSupported","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","body","attr","form","_excluded","_excluded2","_excluded3","createBrowserRouter","parseHydrationData","UNSAFE_mapRouteProperties","createHashRouter","_window","deserializeErrors","serialized","val","ErrorConstructor","BrowserRouter","HashRouter","HistoryRouter","Link","React.forwardRef","ref","onClick","reloadDocument","UNSAFE_NavigationContext","absoluteHref","isExternal","targetUrl","internalOnClick","useLinkClickHandler","handleClick","NavLink","ariaCurrentProp","classNameProp","styleProp","routerState","UNSAFE_DataRouterStateContext","nextLocationPathname","isActive","isPending","ariaCurrent","className","style","Form","submit","useSubmit","FormImpl","forwardedRef","onSubmit","useFormAction","submitHandler","submitter","submitMethod","ScrollRestoration","storageKey","useScrollRestoration","UNSAFE_DataRouterContext","replaceProp","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","currentRouteId","UNSAFE_useRouteId","useSubmitFetcher","fetcherRouteId","UNSAFE_RouteContext","createFetcherForm","fetcherId","useFetcher","_route$matches","load","fetcherWithComponents","useFetchers","SCROLL_RESTORATION_STORAGE_KEY","_temp3","restoreScrollPosition","usePageHide","sessionPositions","getKeyWithoutBasename","disableScrollRestoration","el","useBeforeUnload","callback","capture","usePrompt","when","unstable_useBlocker","exports","_react","_interopRequireDefault","require$$0","_propTypes","require$$1","_reactRouterDom","require$$2","obj","ownKeys","enumerableOnly","symbols","sym","_objectSpread","_defineProperty","_typeof","_objectWithoutProperties","sourceSymbolKeys","LinkContainer","activeClassName","activeStyle","getIsActive","child","_default","_LinkContainer"],"mappings":"gEAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAUA,SAASA,GAAW,CAClBA,OAAAA,EAAW,OAAO,OAAS,OAAO,OAAO,KAAI,EAAK,SAAUC,EAAQ,CAClE,QAASC,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACzC,IAAIC,EAAS,UAAUD,CAAC,EACxB,QAASE,KAAOD,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQC,CAAG,IAClDH,EAAOG,CAAG,EAAID,EAAOC,CAAG,EAG7B,CACD,OAAOH,CACX,EACSD,EAAS,MAAM,KAAM,SAAS,CACvC,CAQA,IAAIK,GACH,SAAUA,EAAQ,CAQjBA,EAAO,IAAS,MAMhBA,EAAO,KAAU,OAKjBA,EAAO,QAAa,SACtB,GAAGA,IAAWA,EAAS,CAAE,EAAC,EAC1B,MAAMC,GAAoB,WAK1B,SAASC,GAAoBC,EAAS,CAChCA,IAAY,SACdA,EAAU,CAAA,GAEZ,GAAI,CACF,eAAAC,EAAiB,CAAC,GAAG,EACrB,aAAAC,EACA,SAAAC,EAAW,EACZ,EAAGH,EACAI,EACJA,EAAUH,EAAe,IAAI,CAACI,EAAOC,IAAUC,EAAqBF,EAAO,OAAOA,GAAU,SAAW,KAAOA,EAAM,MAAOC,IAAU,EAAI,UAAY,MAAS,CAAC,EAC/J,IAAIA,EAAQE,EAAWN,GAAuBE,EAAQ,OAAS,CAAgB,EAC3EK,EAASZ,EAAO,IAChBa,EAAW,KACf,SAASF,EAAWG,EAAG,CACrB,OAAO,KAAK,IAAI,KAAK,IAAIA,EAAG,CAAC,EAAGP,EAAQ,OAAS,CAAC,CACnD,CACD,SAASQ,GAAqB,CAC5B,OAAOR,EAAQE,CAAK,CACrB,CACD,SAASC,EAAqBM,EAAIC,EAAOlB,EAAK,CACxCkB,IAAU,SACZA,EAAQ,MAEV,IAAIC,EAAWC,GAAeZ,EAAUQ,EAAoB,EAAC,SAAW,IAAKC,EAAIC,EAAOlB,CAAG,EAC3F,OAAAqB,GAAQF,EAAS,SAAS,OAAO,CAAC,IAAM,IAAK,2DAA6D,KAAK,UAAUF,CAAE,CAAC,EACrHE,CACR,CACD,SAASG,EAAWL,EAAI,CACtB,OAAO,OAAOA,GAAO,SAAWA,EAAKM,GAAWN,CAAE,CACnD,CAoED,MAnEc,CACZ,IAAI,OAAQ,CACV,OAAOP,CACR,EACD,IAAI,QAAS,CACX,OAAOG,CACR,EACD,IAAI,UAAW,CACb,OAAOG,EAAkB,CAC1B,EACD,WAAAM,EACA,UAAUL,EAAI,CACZ,OAAO,IAAI,IAAIK,EAAWL,CAAE,EAAG,kBAAkB,CAClD,EACD,eAAeA,EAAI,CACjB,IAAIO,EAAO,OAAOP,GAAO,SAAWQ,GAAUR,CAAE,EAAIA,EACpD,MAAO,CACL,SAAUO,EAAK,UAAY,GAC3B,OAAQA,EAAK,QAAU,GACvB,KAAMA,EAAK,MAAQ,EAC3B,CACK,EACD,KAAKP,EAAIC,EAAO,CACdL,EAASZ,EAAO,KAChB,IAAIyB,EAAef,EAAqBM,EAAIC,CAAK,EACjDR,GAAS,EACTF,EAAQ,OAAOE,EAAOF,EAAQ,OAAQkB,CAAY,EAC9CnB,GAAYO,GACdA,EAAS,CACP,OAAAD,EACA,SAAUa,EACV,MAAO,CACjB,CAAS,CAEJ,EACD,QAAQT,EAAIC,EAAO,CACjBL,EAASZ,EAAO,QAChB,IAAIyB,EAAef,EAAqBM,EAAIC,CAAK,EACjDV,EAAQE,CAAK,EAAIgB,EACbnB,GAAYO,GACdA,EAAS,CACP,OAAAD,EACA,SAAUa,EACV,MAAO,CACjB,CAAS,CAEJ,EACD,GAAGC,EAAO,CACRd,EAASZ,EAAO,IAChB,IAAI2B,EAAYhB,EAAWF,EAAQiB,CAAK,EACpCD,EAAelB,EAAQoB,CAAS,EACpClB,EAAQkB,EACJd,GACFA,EAAS,CACP,OAAAD,EACA,SAAUa,EACV,MAAAC,CACV,CAAS,CAEJ,EACD,OAAOE,EAAI,CACT,OAAAf,EAAWe,EACJ,IAAM,CACXf,EAAW,IACnB,CACK,CACL,CAEA,CAQA,SAASgB,GAAqB1B,EAAS,CACjCA,IAAY,SACdA,EAAU,CAAA,GAEZ,SAAS2B,EAAsBC,EAAQC,EAAe,CACpD,GAAI,CACF,SAAAC,EACA,OAAAC,EACA,KAAAC,CACN,EAAQJ,EAAO,SACX,OAAOZ,GAAe,GAAI,CACxB,SAAAc,EACA,OAAAC,EACA,KAAAC,CACD,EAEDH,EAAc,OAASA,EAAc,MAAM,KAAO,KAAMA,EAAc,OAASA,EAAc,MAAM,KAAO,SAAS,CACpH,CACD,SAASI,EAAkBL,EAAQf,EAAI,CACrC,OAAO,OAAOA,GAAO,SAAWA,EAAKM,GAAWN,CAAE,CACnD,CACD,OAAOqB,GAAmBP,EAAuBM,EAAmB,KAAMjC,CAAO,CACnF,CASA,SAASmC,GAAkBnC,EAAS,CAC9BA,IAAY,SACdA,EAAU,CAAA,GAEZ,SAASoC,EAAmBR,EAAQC,EAAe,CACjD,GAAI,CACF,SAAAC,EAAW,IACX,OAAAC,EAAS,GACT,KAAAC,EAAO,EACb,EAAQX,GAAUO,EAAO,SAAS,KAAK,OAAO,CAAC,CAAC,EAC5C,OAAOZ,GAAe,GAAI,CACxB,SAAAc,EACA,OAAAC,EACA,KAAAC,CACD,EAEDH,EAAc,OAASA,EAAc,MAAM,KAAO,KAAMA,EAAc,OAASA,EAAc,MAAM,KAAO,SAAS,CACpH,CACD,SAASQ,EAAeT,EAAQf,EAAI,CAClC,IAAIyB,EAAOV,EAAO,SAAS,cAAc,MAAM,EAC3CW,EAAO,GACX,GAAID,GAAQA,EAAK,aAAa,MAAM,EAAG,CACrC,IAAIE,EAAMZ,EAAO,SAAS,KACtBa,EAAYD,EAAI,QAAQ,GAAG,EAC/BD,EAAOE,IAAc,GAAKD,EAAMA,EAAI,MAAM,EAAGC,CAAS,CACvD,CACD,OAAOF,EAAO,KAAO,OAAO1B,GAAO,SAAWA,EAAKM,GAAWN,CAAE,EACjE,CACD,SAAS6B,EAAqB3B,EAAUF,EAAI,CAC1CI,GAAQF,EAAS,SAAS,OAAO,CAAC,IAAM,IAAK,6DAA+D,KAAK,UAAUF,CAAE,EAAI,GAAG,CACrI,CACD,OAAOqB,GAAmBE,EAAoBC,EAAgBK,EAAsB1C,CAAO,CAC7F,CACA,SAAS2C,EAAUC,EAAOC,EAAS,CACjC,GAAID,IAAU,IAASA,IAAU,MAAQ,OAAOA,EAAU,IACxD,MAAM,IAAI,MAAMC,CAAO,CAE3B,CACA,SAAS5B,GAAQ6B,EAAMD,EAAS,CAC9B,GAAI,CAACC,EAAM,CAEL,OAAO,QAAY,KAAa,QAAQ,KAAKD,CAAO,EACxD,GAAI,CAMF,MAAM,IAAI,MAAMA,CAAO,CAE7B,MAAgB,CAAE,CACf,CACH,CACA,SAASE,IAAY,CACnB,OAAO,KAAK,OAAM,EAAG,SAAS,EAAE,EAAE,OAAO,EAAG,CAAC,CAC/C,CAIA,SAASC,GAAgBjC,EAAUT,EAAO,CACxC,MAAO,CACL,IAAKS,EAAS,MACd,IAAKA,EAAS,IACd,IAAKT,CACT,CACA,CAIA,SAASU,GAAeiC,EAASpC,EAAIC,EAAOlB,EAAK,CAC/C,OAAIkB,IAAU,SACZA,EAAQ,MAEKtB,EAAS,CACtB,SAAU,OAAOyD,GAAY,SAAWA,EAAUA,EAAQ,SAC1D,OAAQ,GACR,KAAM,EACV,EAAK,OAAOpC,GAAO,SAAWQ,GAAUR,CAAE,EAAIA,EAAI,CAC9C,MAAAC,EAKA,IAAKD,GAAMA,EAAG,KAAOjB,GAAOmD,GAAW,CAC3C,CAAG,CAEH,CAIA,SAAS5B,GAAW+B,EAAM,CACxB,GAAI,CACF,SAAApB,EAAW,IACX,OAAAC,EAAS,GACT,KAAAC,EAAO,EACR,EAAGkB,EACJ,OAAInB,GAAUA,IAAW,MAAKD,GAAYC,EAAO,OAAO,CAAC,IAAM,IAAMA,EAAS,IAAMA,GAChFC,GAAQA,IAAS,MAAKF,GAAYE,EAAK,OAAO,CAAC,IAAM,IAAMA,EAAO,IAAMA,GACrEF,CACT,CAIA,SAAST,GAAUD,EAAM,CACvB,IAAI+B,EAAa,CAAA,EACjB,GAAI/B,EAAM,CACR,IAAIqB,EAAYrB,EAAK,QAAQ,GAAG,EAC5BqB,GAAa,IACfU,EAAW,KAAO/B,EAAK,OAAOqB,CAAS,EACvCrB,EAAOA,EAAK,OAAO,EAAGqB,CAAS,GAEjC,IAAIW,EAAchC,EAAK,QAAQ,GAAG,EAC9BgC,GAAe,IACjBD,EAAW,OAAS/B,EAAK,OAAOgC,CAAW,EAC3ChC,EAAOA,EAAK,OAAO,EAAGgC,CAAW,GAE/BhC,IACF+B,EAAW,SAAW/B,EAEzB,CACD,OAAO+B,CACT,CACA,SAASjB,GAAmBmB,EAAanC,EAAYoC,EAAkBtD,EAAS,CAC1EA,IAAY,SACdA,EAAU,CAAA,GAEZ,GAAI,CACF,OAAA4B,EAAS,SAAS,YAClB,SAAAzB,EAAW,EACZ,EAAGH,EACA6B,EAAgBD,EAAO,QACvBnB,EAASZ,EAAO,IAChBa,EAAW,KACXJ,EAAQiD,IAIRjD,GAAS,OACXA,EAAQ,EACRuB,EAAc,aAAarC,EAAS,CAAA,EAAIqC,EAAc,MAAO,CAC3D,IAAKvB,CACX,CAAK,EAAG,EAAE,GAER,SAASiD,GAAW,CAIlB,OAHY1B,EAAc,OAAS,CACjC,IAAK,IACX,GACiB,GACd,CACD,SAAS2B,GAAY,CACnB/C,EAASZ,EAAO,IAChB,IAAI2B,EAAY+B,IACZhC,EAAQC,GAAa,KAAO,KAAOA,EAAYlB,EACnDA,EAAQkB,EACJd,GACFA,EAAS,CACP,OAAAD,EACA,SAAUgD,EAAQ,SAClB,MAAAlC,CACR,CAAO,CAEJ,CACD,SAASmC,EAAK7C,EAAIC,EAAO,CACvBL,EAASZ,EAAO,KAChB,IAAIkB,EAAWC,GAAeyC,EAAQ,SAAU5C,EAAIC,CAAK,EACrDwC,GAAkBA,EAAiBvC,EAAUF,CAAE,EACnDP,EAAQiD,EAAU,EAAG,EACrB,IAAII,EAAeX,GAAgBjC,EAAUT,CAAK,EAC9CkC,EAAMiB,EAAQ,WAAW1C,CAAQ,EAErC,GAAI,CACFc,EAAc,UAAU8B,EAAc,GAAInB,CAAG,CAC9C,OAAQoB,EAAO,CAKd,GAAIA,aAAiB,cAAgBA,EAAM,OAAS,iBAClD,MAAMA,EAIRhC,EAAO,SAAS,OAAOY,CAAG,CAC3B,CACGrC,GAAYO,GACdA,EAAS,CACP,OAAAD,EACA,SAAUgD,EAAQ,SAClB,MAAO,CACf,CAAO,CAEJ,CACD,SAASI,EAAQhD,EAAIC,EAAO,CAC1BL,EAASZ,EAAO,QAChB,IAAIkB,EAAWC,GAAeyC,EAAQ,SAAU5C,EAAIC,CAAK,EACrDwC,GAAkBA,EAAiBvC,EAAUF,CAAE,EACnDP,EAAQiD,EAAQ,EAChB,IAAII,EAAeX,GAAgBjC,EAAUT,CAAK,EAC9CkC,EAAMiB,EAAQ,WAAW1C,CAAQ,EACrCc,EAAc,aAAa8B,EAAc,GAAInB,CAAG,EAC5CrC,GAAYO,GACdA,EAAS,CACP,OAAAD,EACA,SAAUgD,EAAQ,SAClB,MAAO,CACf,CAAO,CAEJ,CACD,SAASK,EAAUjD,EAAI,CAIrB,IAAIyB,EAAOV,EAAO,SAAS,SAAW,OAASA,EAAO,SAAS,OAASA,EAAO,SAAS,KACpFW,EAAO,OAAO1B,GAAO,SAAWA,EAAKM,GAAWN,CAAE,EACtD,OAAA8B,EAAUL,EAAM,sEAAwEC,CAAI,EACrF,IAAI,IAAIA,EAAMD,CAAI,CAC1B,CACD,IAAImB,EAAU,CACZ,IAAI,QAAS,CACX,OAAOhD,CACR,EACD,IAAI,UAAW,CACb,OAAO4C,EAAYzB,EAAQC,CAAa,CACzC,EACD,OAAOJ,EAAI,CACT,GAAIf,EACF,MAAM,IAAI,MAAM,4CAA4C,EAE9D,OAAAkB,EAAO,iBAAiB9B,GAAmB0D,CAAS,EACpD9C,EAAWe,EACJ,IAAM,CACXG,EAAO,oBAAoB9B,GAAmB0D,CAAS,EACvD9C,EAAW,IACnB,CACK,EACD,WAAWG,EAAI,CACb,OAAOK,EAAWU,EAAQf,CAAE,CAC7B,EACD,UAAAiD,EACA,eAAejD,EAAI,CAEjB,IAAI2B,EAAMsB,EAAUjD,CAAE,EACtB,MAAO,CACL,SAAU2B,EAAI,SACd,OAAQA,EAAI,OACZ,KAAMA,EAAI,IAClB,CACK,EACD,KAAAkB,EACA,QAAAG,EACA,GAAGlD,EAAG,CACJ,OAAOkB,EAAc,GAAGlB,CAAC,CAC1B,CACL,EACE,OAAO8C,CACT,CAGA,IAAIM,GACH,SAAUA,EAAY,CACrBA,EAAW,KAAU,OACrBA,EAAW,SAAc,WACzBA,EAAW,SAAc,WACzBA,EAAW,MAAW,OACxB,GAAGA,IAAeA,EAAa,CAAE,EAAC,EAClC,MAAMC,GAAqB,IAAI,IAAI,CAAC,OAAQ,gBAAiB,OAAQ,KAAM,QAAS,UAAU,CAAC,EAC/F,SAASC,GAAaC,EAAO,CAC3B,OAAOA,EAAM,QAAU,EACzB,CAGA,SAASC,GAA0BC,EAAQC,EAAoBC,EAAYC,EAAU,CACnF,OAAID,IAAe,SACjBA,EAAa,CAAA,GAEXC,IAAa,SACfA,EAAW,CAAA,GAENH,EAAO,IAAI,CAACF,EAAO5D,IAAU,CAClC,IAAIkE,EAAW,CAAC,GAAGF,EAAYhE,CAAK,EAChCmE,EAAK,OAAOP,EAAM,IAAO,SAAWA,EAAM,GAAKM,EAAS,KAAK,GAAG,EAGpE,GAFA7B,EAAUuB,EAAM,QAAU,IAAQ,CAACA,EAAM,SAAU,2CAA2C,EAC9FvB,EAAU,CAAC4B,EAASE,CAAE,EAAG,qCAAwCA,EAAK,kEAAwE,EAC1IR,GAAaC,CAAK,EAAG,CACvB,IAAIQ,EAAalF,EAAS,CAAA,EAAI0E,EAAOG,EAAmBH,CAAK,EAAG,CAC9D,GAAAO,CACR,CAAO,EACD,OAAAF,EAASE,CAAE,EAAIC,EACRA,CACb,KAAW,CACL,IAAIC,EAAoBnF,EAAS,CAAA,EAAI0E,EAAOG,EAAmBH,CAAK,EAAG,CACrE,GAAAO,EACA,SAAU,MAClB,CAAO,EACD,OAAAF,EAASE,CAAE,EAAIE,EACXT,EAAM,WACRS,EAAkB,SAAWR,GAA0BD,EAAM,SAAUG,EAAoBG,EAAUD,CAAQ,GAExGI,CACR,CACL,CAAG,CACH,CAMA,SAASC,GAAYR,EAAQS,EAAaC,EAAU,CAC9CA,IAAa,SACfA,EAAW,KAEb,IAAI/D,EAAW,OAAO8D,GAAgB,SAAWxD,GAAUwD,CAAW,EAAIA,EACtE/C,EAAWiD,GAAchE,EAAS,UAAY,IAAK+D,CAAQ,EAC/D,GAAIhD,GAAY,KACd,OAAO,KAET,IAAIkD,EAAWC,GAAcb,CAAM,EACnCc,GAAkBF,CAAQ,EAC1B,IAAIG,EAAU,KACd,QAASzF,EAAI,EAAGyF,GAAW,MAAQzF,EAAIsF,EAAS,OAAQ,EAAEtF,EACxDyF,EAAUC,GAAiBJ,EAAStF,CAAC,EAOrC2F,GAAgBvD,CAAQ,CAAC,EAE3B,OAAOqD,CACT,CACA,SAASF,GAAcb,EAAQY,EAAUM,EAAahB,EAAY,CAC5DU,IAAa,SACfA,EAAW,CAAA,GAETM,IAAgB,SAClBA,EAAc,CAAA,GAEZhB,IAAe,SACjBA,EAAa,IAEf,IAAIiB,EAAe,CAACrB,EAAO5D,EAAOkF,IAAiB,CACjD,IAAIC,EAAO,CACT,aAAcD,IAAiB,OAAYtB,EAAM,MAAQ,GAAKsB,EAC9D,cAAetB,EAAM,gBAAkB,GACvC,cAAe5D,EACf,MAAA4D,CACN,EACQuB,EAAK,aAAa,WAAW,GAAG,IAClC9C,EAAU8C,EAAK,aAAa,WAAWnB,CAAU,EAAG,wBAA2BmB,EAAK,aAAe,wBAA2B,IAAOnB,EAAa,iDAAoD,6DAA6D,EACnQmB,EAAK,aAAeA,EAAK,aAAa,MAAMnB,EAAW,MAAM,GAE/D,IAAIlD,EAAOsE,GAAU,CAACpB,EAAYmB,EAAK,YAAY,CAAC,EAChDE,EAAaL,EAAY,OAAOG,CAAI,EAIpCvB,EAAM,UAAYA,EAAM,SAAS,OAAS,IAC5CvB,EAGAuB,EAAM,QAAU,GAAM,2DAA6D,qCAAwC9C,EAAO,KAAM,EACxI6D,GAAcf,EAAM,SAAUc,EAAUW,EAAYvE,CAAI,GAItD,EAAA8C,EAAM,MAAQ,MAAQ,CAACA,EAAM,QAGjCc,EAAS,KAAK,CACZ,KAAA5D,EACA,MAAOwE,GAAaxE,EAAM8C,EAAM,KAAK,EACrC,WAAAyB,CACN,CAAK,CACL,EACE,OAAAvB,EAAO,QAAQ,CAACF,EAAO5D,IAAU,CAC/B,IAAIuF,EAEJ,GAAI3B,EAAM,OAAS,IAAM,GAAG2B,EAAc3B,EAAM,OAAS,MAAQ2B,EAAY,SAAS,GAAG,GACvFN,EAAarB,EAAO5D,CAAK,MAEzB,SAASwF,KAAYC,GAAwB7B,EAAM,IAAI,EACrDqB,EAAarB,EAAO5D,EAAOwF,CAAQ,CAG3C,CAAG,EACMd,CACT,CAeA,SAASe,GAAwB3E,EAAM,CACrC,IAAI4E,EAAW5E,EAAK,MAAM,GAAG,EAC7B,GAAI4E,EAAS,SAAW,EAAG,MAAO,CAAA,EAClC,GAAI,CAACC,EAAO,GAAGC,CAAI,EAAIF,EAEnBG,EAAaF,EAAM,SAAS,GAAG,EAE/BG,EAAWH,EAAM,QAAQ,MAAO,EAAE,EACtC,GAAIC,EAAK,SAAW,EAGlB,OAAOC,EAAa,CAACC,EAAU,EAAE,EAAI,CAACA,CAAQ,EAEhD,IAAIC,EAAeN,GAAwBG,EAAK,KAAK,GAAG,CAAC,EACrDI,EAAS,CAAA,EAQb,OAAAA,EAAO,KAAK,GAAGD,EAAa,IAAIE,GAAWA,IAAY,GAAKH,EAAW,CAACA,EAAUG,CAAO,EAAE,KAAK,GAAG,CAAC,CAAC,EAEjGJ,GACFG,EAAO,KAAK,GAAGD,CAAY,EAGtBC,EAAO,IAAIR,GAAY1E,EAAK,WAAW,GAAG,GAAK0E,IAAa,GAAK,IAAMA,CAAQ,CACxF,CACA,SAASZ,GAAkBF,EAAU,CACnCA,EAAS,KAAK,CAACwB,EAAGC,IAAMD,EAAE,QAAUC,EAAE,MAAQA,EAAE,MAAQD,EAAE,MACxDE,GAAeF,EAAE,WAAW,IAAIf,GAAQA,EAAK,aAAa,EAAGgB,EAAE,WAAW,IAAIhB,GAAQA,EAAK,aAAa,CAAC,CAAC,CAC9G,CACA,MAAMkB,GAAU,SACVC,GAAsB,EACtBC,GAAkB,EAClBC,GAAoB,EACpBC,GAAqB,GACrBC,GAAe,GACfC,GAAUC,GAAKA,IAAM,IAC3B,SAAStB,GAAaxE,EAAMd,EAAO,CACjC,IAAI0F,EAAW5E,EAAK,MAAM,GAAG,EACzB+F,EAAenB,EAAS,OAC5B,OAAIA,EAAS,KAAKiB,EAAO,IACvBE,GAAgBH,IAEd1G,IACF6G,GAAgBN,IAEXb,EAAS,OAAOkB,GAAK,CAACD,GAAQC,CAAC,CAAC,EAAE,OAAO,CAACE,EAAOC,IAAYD,GAAST,GAAQ,KAAKU,CAAO,EAAIT,GAAsBS,IAAY,GAAKP,GAAoBC,IAAqBI,CAAY,CACnM,CACA,SAAST,GAAeF,EAAGC,EAAG,CAE5B,OADeD,EAAE,SAAWC,EAAE,QAAUD,EAAE,MAAM,EAAG,EAAE,EAAE,MAAM,CAAC,EAAG9G,IAAM,IAAM+G,EAAE/G,CAAC,CAAC,EAMjF8G,EAAEA,EAAE,OAAS,CAAC,EAAIC,EAAEA,EAAE,OAAS,CAAC,EAGhC,CACF,CACA,SAASrB,GAAiBkC,EAAQxF,EAAU,CAC1C,GAAI,CACF,WAAA6D,CACD,EAAG2B,EACAC,EAAgB,CAAA,EAChBC,EAAkB,IAClBrC,EAAU,CAAA,EACd,QAAS,EAAI,EAAG,EAAIQ,EAAW,OAAQ,EAAE,EAAG,CAC1C,IAAIF,EAAOE,EAAW,CAAC,EACnB8B,EAAM,IAAM9B,EAAW,OAAS,EAChC+B,EAAoBF,IAAoB,IAAM1F,EAAWA,EAAS,MAAM0F,EAAgB,MAAM,GAAK,IACnGG,EAAQC,GAAU,CACpB,KAAMnC,EAAK,aACX,cAAeA,EAAK,cACpB,IAAAgC,CACD,EAAEC,CAAiB,EACpB,GAAI,CAACC,EAAO,OAAO,KACnB,OAAO,OAAOJ,EAAeI,EAAM,MAAM,EACzC,IAAIzD,EAAQuB,EAAK,MACjBN,EAAQ,KAAK,CAEX,OAAQoC,EACR,SAAU7B,GAAU,CAAC8B,EAAiBG,EAAM,QAAQ,CAAC,EACrD,aAAcE,GAAkBnC,GAAU,CAAC8B,EAAiBG,EAAM,YAAY,CAAC,CAAC,EAChF,MAAAzD,CACN,CAAK,EACGyD,EAAM,eAAiB,MACzBH,EAAkB9B,GAAU,CAAC8B,EAAiBG,EAAM,YAAY,CAAC,EAEpE,CACD,OAAOxC,CACT,CAMA,SAAS2C,GAAaC,EAAcC,EAAQ,CACtCA,IAAW,SACbA,EAAS,CAAA,GAEX,IAAI5G,EAAO2G,EACP3G,EAAK,SAAS,GAAG,GAAKA,IAAS,KAAO,CAACA,EAAK,SAAS,IAAI,IAC3DH,GAAQ,GAAO,eAAkBG,EAAO,oCAAuC,IAAOA,EAAK,QAAQ,MAAO,IAAI,EAAI,qCAAwC,oEAAsE,oCAAuCA,EAAK,QAAQ,MAAO,IAAI,EAAI,KAAM,EACzSA,EAAOA,EAAK,QAAQ,MAAO,IAAI,GAGjC,MAAM6G,EAAS7G,EAAK,WAAW,GAAG,EAAI,IAAM,GACtC8G,EAAYC,GAAKA,GAAK,KAAO,GAAK,OAAOA,GAAM,SAAWA,EAAI,OAAOA,CAAC,EACtEnC,EAAW5E,EAAK,MAAM,KAAK,EAAE,IAAI,CAACiG,EAAS/G,EAAO8H,IAAU,CAGhE,GAFsB9H,IAAU8H,EAAM,OAAS,GAE1Bf,IAAY,IAG/B,OAAOa,EAAUF,EAFJ,GAEe,CAAC,EAE/B,MAAMK,EAAWhB,EAAQ,MAAM,eAAe,EAC9C,GAAIgB,EAAU,CACZ,KAAM,EAAGzI,EAAK0I,CAAQ,EAAID,EAC1B,IAAIE,EAAQP,EAAOpI,CAAG,EACtB,OAAA+C,EAAU2F,IAAa,KAAOC,GAAS,KAAM,aAAgB3I,EAAM,SAAU,EACtEsI,EAAUK,CAAK,CACvB,CAED,OAAOlB,EAAQ,QAAQ,OAAQ,EAAE,CACrC,CAAG,EAEA,OAAOA,GAAW,CAAC,CAACA,CAAO,EAC5B,OAAOY,EAASjC,EAAS,KAAK,GAAG,CACnC,CAOA,SAAS4B,GAAUY,EAAS1G,EAAU,CAChC,OAAO0G,GAAY,WACrBA,EAAU,CACR,KAAMA,EACN,cAAe,GACf,IAAK,EACX,GAEE,GAAI,CAACC,EAASC,CAAU,EAAIC,GAAYH,EAAQ,KAAMA,EAAQ,cAAeA,EAAQ,GAAG,EACpFb,EAAQ7F,EAAS,MAAM2G,CAAO,EAClC,GAAI,CAACd,EAAO,OAAO,KACnB,IAAIH,EAAkBG,EAAM,CAAC,EACzBiB,EAAepB,EAAgB,QAAQ,UAAW,IAAI,EACtDqB,EAAgBlB,EAAM,MAAM,CAAC,EAWjC,MAAO,CACL,OAXWe,EAAW,OAAO,CAACI,EAAMC,EAAWzI,IAAU,CAGzD,GAAIyI,IAAc,IAAK,CACrB,IAAIC,EAAaH,EAAcvI,CAAK,GAAK,GACzCsI,EAAepB,EAAgB,MAAM,EAAGA,EAAgB,OAASwB,EAAW,MAAM,EAAE,QAAQ,UAAW,IAAI,CAC5G,CACD,OAAAF,EAAKC,CAAS,EAAIE,GAAyBJ,EAAcvI,CAAK,GAAK,GAAIyI,CAAS,EACzED,CACR,EAAE,CAAE,CAAA,EAGH,SAAUtB,EACV,aAAAoB,EACA,QAAAJ,CACJ,CACA,CACA,SAASG,GAAYvH,EAAM8H,EAAezB,EAAK,CACzCyB,IAAkB,SACpBA,EAAgB,IAEdzB,IAAQ,SACVA,EAAM,IAERxG,GAAQG,IAAS,KAAO,CAACA,EAAK,SAAS,GAAG,GAAKA,EAAK,SAAS,IAAI,EAAG,eAAkBA,EAAO,oCAAuC,IAAOA,EAAK,QAAQ,MAAO,IAAI,EAAI,qCAAwC,oEAAsE,oCAAuCA,EAAK,QAAQ,MAAO,IAAI,EAAI,KAAM,EAC9V,IAAIsH,EAAa,CAAA,EACbS,EAAe,IAAM/H,EAAK,QAAQ,UAAW,EAAE,EAClD,QAAQ,OAAQ,GAAG,EACnB,QAAQ,sBAAuB,MAAM,EACrC,QAAQ,YAAa,CAACgI,EAAGL,KACxBL,EAAW,KAAKK,CAAS,EAClB,aACR,EACD,OAAI3H,EAAK,SAAS,GAAG,GACnBsH,EAAW,KAAK,GAAG,EACnBS,GAAgB/H,IAAS,KAAOA,IAAS,KAAO,QAC9C,qBACOqG,EAET0B,GAAgB,QACP/H,IAAS,IAAMA,IAAS,MAQjC+H,GAAgB,iBAGX,CADO,IAAI,OAAOA,EAAcD,EAAgB,OAAY,GAAG,EACrDR,CAAU,CAC7B,CACA,SAASrD,GAAgBzC,EAAO,CAC9B,GAAI,CACF,OAAO,UAAUA,CAAK,CACvB,OAAQgB,EAAO,CACd,OAAA3C,GAAQ,GAAO,iBAAoB2B,EAAQ,2GAAmH,aAAegB,EAAQ,KAAK,EACnLhB,CACR,CACH,CACA,SAASqG,GAAyBrG,EAAOmG,EAAW,CAClD,GAAI,CACF,OAAO,mBAAmBnG,CAAK,CAChC,OAAQgB,EAAO,CACd,OAAA3C,GAAQ,GAAO,gCAAmC8H,EAAY,iCAAoC,gBAAmBnG,EAAQ,mDAAsD,mCAAqCgB,EAAQ,KAAK,EAC9NhB,CACR,CACH,CAIA,SAASmC,GAAcjD,EAAUgD,EAAU,CACzC,GAAIA,IAAa,IAAK,OAAOhD,EAC7B,GAAI,CAACA,EAAS,YAAa,EAAC,WAAWgD,EAAS,YAAW,CAAE,EAC3D,OAAO,KAIT,IAAIuE,EAAavE,EAAS,SAAS,GAAG,EAAIA,EAAS,OAAS,EAAIA,EAAS,OACrEwE,EAAWxH,EAAS,OAAOuH,CAAU,EACzC,OAAIC,GAAYA,IAAa,IAEpB,KAEFxH,EAAS,MAAMuH,CAAU,GAAK,GACvC,CAMA,SAASE,GAAY1I,EAAI2I,EAAc,CACjCA,IAAiB,SACnBA,EAAe,KAEjB,GAAI,CACF,SAAUC,EACV,OAAA1H,EAAS,GACT,KAAAC,EAAO,EACX,EAAM,OAAOnB,GAAO,SAAWQ,GAAUR,CAAE,EAAIA,EAE7C,MAAO,CACL,SAFa4I,EAAaA,EAAW,WAAW,GAAG,EAAIA,EAAaC,GAAgBD,EAAYD,CAAY,EAAIA,EAGhH,OAAQG,GAAgB5H,CAAM,EAC9B,KAAM6H,GAAc5H,CAAI,CAC5B,CACA,CACA,SAAS0H,GAAgBlE,EAAcgE,EAAc,CACnD,IAAIxD,EAAWwD,EAAa,QAAQ,OAAQ,EAAE,EAAE,MAAM,GAAG,EAEzD,OADuBhE,EAAa,MAAM,GAAG,EAC5B,QAAQ6B,GAAW,CAC9BA,IAAY,KAEVrB,EAAS,OAAS,GAAGA,EAAS,IAAG,EAC5BqB,IAAY,KACrBrB,EAAS,KAAKqB,CAAO,CAE3B,CAAG,EACMrB,EAAS,OAAS,EAAIA,EAAS,KAAK,GAAG,EAAI,GACpD,CACA,SAAS6D,GAAoBC,EAAMC,EAAOC,EAAM5I,EAAM,CACpD,MAAO,qBAAuB0I,EAAO,wCAA0C,OAASC,EAAQ,YAAc,KAAK,UAAU3I,CAAI,EAAI,uCAAyC,OAAS4I,EAAO,4DAA8D,mEAC9P,CAwBA,SAASC,GAA2B9E,EAAS,CAC3C,OAAOA,EAAQ,OAAO,CAACwC,EAAOrH,IAAUA,IAAU,GAAKqH,EAAM,MAAM,MAAQA,EAAM,MAAM,KAAK,OAAS,CAAC,CACxG,CAIA,SAASuC,GAAUC,EAAOC,EAAgBC,EAAkBC,EAAgB,CACtEA,IAAmB,SACrBA,EAAiB,IAEnB,IAAIzJ,EACA,OAAOsJ,GAAU,SACnBtJ,EAAKQ,GAAU8I,CAAK,GAEpBtJ,EAAKrB,EAAS,GAAI2K,CAAK,EACvBxH,EAAU,CAAC9B,EAAG,UAAY,CAACA,EAAG,SAAS,SAAS,GAAG,EAAGgJ,GAAoB,IAAK,WAAY,SAAUhJ,CAAE,CAAC,EACxG8B,EAAU,CAAC9B,EAAG,UAAY,CAACA,EAAG,SAAS,SAAS,GAAG,EAAGgJ,GAAoB,IAAK,WAAY,OAAQhJ,CAAE,CAAC,EACtG8B,EAAU,CAAC9B,EAAG,QAAU,CAACA,EAAG,OAAO,SAAS,GAAG,EAAGgJ,GAAoB,IAAK,SAAU,OAAQhJ,CAAE,CAAC,GAElG,IAAI0J,EAAcJ,IAAU,IAAMtJ,EAAG,WAAa,GAC9C4I,EAAac,EAAc,IAAM1J,EAAG,SACpC2J,EAUJ,GAAIF,GAAkBb,GAAc,KAClCe,EAAOH,MACF,CACL,IAAII,EAAqBL,EAAe,OAAS,EACjD,GAAIX,EAAW,WAAW,IAAI,EAAG,CAC/B,IAAIiB,EAAajB,EAAW,MAAM,GAAG,EAIrC,KAAOiB,EAAW,CAAC,IAAM,MACvBA,EAAW,MAAK,EAChBD,GAAsB,EAExB5J,EAAG,SAAW6J,EAAW,KAAK,GAAG,CAClC,CAGDF,EAAOC,GAAsB,EAAIL,EAAeK,CAAkB,EAAI,GACvE,CACD,IAAIrJ,EAAOmI,GAAY1I,EAAI2J,CAAI,EAE3BG,EAA2BlB,GAAcA,IAAe,KAAOA,EAAW,SAAS,GAAG,EAEtFmB,GAA2BL,GAAed,IAAe,MAAQY,EAAiB,SAAS,GAAG,EAClG,MAAI,CAACjJ,EAAK,SAAS,SAAS,GAAG,IAAMuJ,GAA4BC,KAC/DxJ,EAAK,UAAY,KAEZA,CACT,CAWA,MAAMsE,GAAYmF,GAASA,EAAM,KAAK,GAAG,EAAE,QAAQ,SAAU,GAAG,EAI1DhD,GAAoB/F,GAAYA,EAAS,QAAQ,OAAQ,EAAE,EAAE,QAAQ,OAAQ,GAAG,EAIhF6H,GAAkB5H,GAAU,CAACA,GAAUA,IAAW,IAAM,GAAKA,EAAO,WAAW,GAAG,EAAIA,EAAS,IAAMA,EAIrG6H,GAAgB5H,GAAQ,CAACA,GAAQA,IAAS,IAAM,GAAKA,EAAK,WAAW,GAAG,EAAIA,EAAO,IAAMA,EAKzF8I,GAAO,SAAcC,EAAMC,EAAM,CACjCA,IAAS,SACXA,EAAO,CAAA,GAET,IAAIC,EAAe,OAAOD,GAAS,SAAW,CAC5C,OAAQA,CACT,EAAGA,EACAE,EAAU,IAAI,QAAQD,EAAa,OAAO,EAC9C,OAAKC,EAAQ,IAAI,cAAc,GAC7BA,EAAQ,IAAI,eAAgB,iCAAiC,EAExD,IAAI,SAAS,KAAK,UAAUH,CAAI,EAAGvL,EAAS,CAAE,EAAEyL,EAAc,CACnE,QAAAC,CACD,CAAA,CAAC,CACJ,EACA,MAAMC,WAA6B,KAAM,CAAE,CAC3C,MAAMC,EAAa,CACjB,YAAYL,EAAME,EAAc,CAC9B,KAAK,eAAiB,IAAI,IAC1B,KAAK,YAAc,IAAI,IACvB,KAAK,aAAe,GACpBtI,EAAUoI,GAAQ,OAAOA,GAAS,UAAY,CAAC,MAAM,QAAQA,CAAI,EAAG,oCAAoC,EAGxG,IAAIM,EACJ,KAAK,aAAe,IAAI,QAAQ,CAACjC,EAAGkC,IAAMD,EAASC,CAAC,EACpD,KAAK,WAAa,IAAI,gBACtB,IAAIC,EAAU,IAAMF,EAAO,IAAIF,GAAqB,uBAAuB,CAAC,EAC5E,KAAK,oBAAsB,IAAM,KAAK,WAAW,OAAO,oBAAoB,QAASI,CAAO,EAC5F,KAAK,WAAW,OAAO,iBAAiB,QAASA,CAAO,EACxD,KAAK,KAAO,OAAO,QAAQR,CAAI,EAAE,OAAO,CAACS,EAAKtI,IAAS,CACrD,GAAI,CAACtD,EAAKgD,CAAK,EAAIM,EACnB,OAAO,OAAO,OAAOsI,EAAK,CACxB,CAAC5L,CAAG,EAAG,KAAK,aAAaA,EAAKgD,CAAK,CAC3C,CAAO,CACF,EAAE,CAAE,CAAA,EACD,KAAK,MAEP,KAAK,oBAAmB,EAE1B,KAAK,KAAOqI,CACb,CACD,aAAarL,EAAKgD,EAAO,CACvB,GAAI,EAAEA,aAAiB,SACrB,OAAOA,EAET,KAAK,aAAa,KAAKhD,CAAG,EAC1B,KAAK,eAAe,IAAIA,CAAG,EAG3B,IAAI6L,EAAU,QAAQ,KAAK,CAAC7I,EAAO,KAAK,YAAY,CAAC,EAAE,KAAKmI,GAAQ,KAAK,SAASU,EAAS7L,EAAK,OAAWmL,CAAI,EAAGnH,GAAS,KAAK,SAAS6H,EAAS7L,EAAKgE,CAAK,CAAC,EAG7J,OAAA6H,EAAQ,MAAM,IAAM,CAAA,CAAE,EACtB,OAAO,eAAeA,EAAS,WAAY,CACzC,IAAK,IAAM,EACjB,CAAK,EACMA,CACR,CACD,SAASA,EAAS7L,EAAKgE,EAAOmH,EAAM,CAClC,GAAI,KAAK,WAAW,OAAO,SAAWnH,aAAiBuH,GACrD,YAAK,oBAAmB,EACxB,OAAO,eAAeM,EAAS,SAAU,CACvC,IAAK,IAAM7H,CACnB,CAAO,EACM,QAAQ,OAAOA,CAAK,EAS7B,GAPA,KAAK,eAAe,OAAOhE,CAAG,EAC1B,KAAK,MAEP,KAAK,oBAAmB,EAItBgE,IAAU,QAAamH,IAAS,OAAW,CAC7C,IAAIW,EAAiB,IAAI,MAAM,0BAA6B9L,EAAM,uFAA6F,EAC/J,cAAO,eAAe6L,EAAS,SAAU,CACvC,IAAK,IAAMC,CACnB,CAAO,EACD,KAAK,KAAK,GAAO9L,CAAG,EACb,QAAQ,OAAO8L,CAAc,CACrC,CACD,OAAIX,IAAS,QACX,OAAO,eAAeU,EAAS,SAAU,CACvC,IAAK,IAAM7H,CACnB,CAAO,EACD,KAAK,KAAK,GAAOhE,CAAG,EACb,QAAQ,OAAOgE,CAAK,IAE7B,OAAO,eAAe6H,EAAS,QAAS,CACtC,IAAK,IAAMV,CACjB,CAAK,EACD,KAAK,KAAK,GAAOnL,CAAG,EACbmL,EACR,CACD,KAAKY,EAASC,EAAY,CACxB,KAAK,YAAY,QAAQC,GAAcA,EAAWF,EAASC,CAAU,CAAC,CACvE,CACD,UAAUnK,EAAI,CACZ,YAAK,YAAY,IAAIA,CAAE,EAChB,IAAM,KAAK,YAAY,OAAOA,CAAE,CACxC,CACD,QAAS,CACP,KAAK,WAAW,QAChB,KAAK,eAAe,QAAQ,CAACqK,EAAGC,IAAM,KAAK,eAAe,OAAOA,CAAC,CAAC,EACnE,KAAK,KAAK,EAAI,CACf,CACD,MAAM,YAAYC,EAAQ,CACxB,IAAIL,EAAU,GACd,GAAI,CAAC,KAAK,KAAM,CACd,IAAIJ,EAAU,IAAM,KAAK,SACzBS,EAAO,iBAAiB,QAAST,CAAO,EACxCI,EAAU,MAAM,IAAI,QAAQM,GAAW,CACrC,KAAK,UAAUN,GAAW,CACxBK,EAAO,oBAAoB,QAAST,CAAO,GACvCI,GAAW,KAAK,OAClBM,EAAQN,CAAO,CAE3B,CAAS,CACT,CAAO,CACF,CACD,OAAOA,CACR,CACD,IAAI,MAAO,CACT,OAAO,KAAK,eAAe,OAAS,CACrC,CACD,IAAI,eAAgB,CAClB,OAAAhJ,EAAU,KAAK,OAAS,MAAQ,KAAK,KAAM,2DAA2D,EAC/F,OAAO,QAAQ,KAAK,IAAI,EAAE,OAAO,CAAC6I,EAAKU,IAAU,CACtD,GAAI,CAACtM,EAAKgD,CAAK,EAAIsJ,EACnB,OAAO,OAAO,OAAOV,EAAK,CACxB,CAAC5L,CAAG,EAAGuM,GAAqBvJ,CAAK,CACzC,CAAO,CACF,EAAE,CAAE,CAAA,CACN,CACD,IAAI,aAAc,CAChB,OAAO,MAAM,KAAK,KAAK,cAAc,CACtC,CACH,CACA,SAASwJ,GAAiBxJ,EAAO,CAC/B,OAAOA,aAAiB,SAAWA,EAAM,WAAa,EACxD,CACA,SAASuJ,GAAqBvJ,EAAO,CACnC,GAAI,CAACwJ,GAAiBxJ,CAAK,EACzB,OAAOA,EAET,GAAIA,EAAM,OACR,MAAMA,EAAM,OAEd,OAAOA,EAAM,KACf,CACA,MAAMyJ,GAAQ,SAAetB,EAAMC,EAAM,CACnCA,IAAS,SACXA,EAAO,CAAA,GAET,IAAIC,EAAe,OAAOD,GAAS,SAAW,CAC5C,OAAQA,CACT,EAAGA,EACJ,OAAO,IAAII,GAAaL,EAAME,CAAY,CAC5C,EAKMqB,GAAW,SAAkB9J,EAAKwI,EAAM,CACxCA,IAAS,SACXA,EAAO,KAET,IAAIC,EAAeD,EACf,OAAOC,GAAiB,SAC1BA,EAAe,CACb,OAAQA,CACd,EACa,OAAOA,EAAa,OAAW,MACxCA,EAAa,OAAS,KAExB,IAAIC,EAAU,IAAI,QAAQD,EAAa,OAAO,EAC9C,OAAAC,EAAQ,IAAI,WAAY1I,CAAG,EACpB,IAAI,SAAS,KAAMhD,EAAS,CAAA,EAAIyL,EAAc,CACnD,QAAAC,CACD,CAAA,CAAC,CACJ,EAKA,MAAMqB,EAAc,CAClB,YAAYC,EAAQC,EAAY1B,EAAM2B,EAAU,CAC1CA,IAAa,SACfA,EAAW,IAEb,KAAK,OAASF,EACd,KAAK,WAAaC,GAAc,GAChC,KAAK,SAAWC,EACZ3B,aAAgB,OAClB,KAAK,KAAOA,EAAK,WACjB,KAAK,MAAQA,GAEb,KAAK,KAAOA,CAEf,CACH,CAKA,SAAS4B,GAAqB/I,EAAO,CACnC,OAAOA,GAAS,MAAQ,OAAOA,EAAM,QAAW,UAAY,OAAOA,EAAM,YAAe,UAAY,OAAOA,EAAM,UAAa,WAAa,SAAUA,CACvJ,CAEA,MAAMgJ,GAA0B,CAAC,OAAQ,MAAO,QAAS,QAAQ,EAC3DC,GAAuB,IAAI,IAAID,EAAuB,EACtDE,GAAyB,CAAC,MAAO,GAAGF,EAAuB,EAC3DG,GAAsB,IAAI,IAAID,EAAsB,EACpDE,GAAsB,IAAI,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,GAAG,CAAC,EACvDC,GAAoC,IAAI,IAAI,CAAC,IAAK,GAAG,CAAC,EACtDC,GAAkB,CACtB,MAAO,OACP,SAAU,OACV,WAAY,OACZ,WAAY,OACZ,YAAa,OACb,SAAU,OACV,KAAM,OACN,KAAM,MACR,EACMC,GAAe,CACnB,MAAO,OACP,KAAM,OACN,WAAY,OACZ,WAAY,OACZ,YAAa,OACb,SAAU,OACV,KAAM,OACN,KAAM,MACR,EACMC,GAAe,CACnB,MAAO,YACP,QAAS,OACT,MAAO,OACP,SAAU,MACZ,EACMC,GAAqB,gCACrBC,GAA4BpJ,IAAU,CAC1C,iBAAkB,EAAQA,EAAM,gBAClC,GAQA,SAASqJ,GAAavC,EAAM,CAC1B,MAAMwC,EAAexC,EAAK,OAASA,EAAK,OAAS,OAAO,OAAW,IAAc,OAAS,OACpFyC,EAAY,OAAOD,EAAiB,KAAe,OAAOA,EAAa,SAAa,KAAe,OAAOA,EAAa,SAAS,cAAkB,IAClJE,EAAW,CAACD,EAClB9K,EAAUqI,EAAK,OAAO,OAAS,EAAG,2DAA2D,EAC7F,IAAI3G,EACJ,GAAI2G,EAAK,mBACP3G,EAAqB2G,EAAK,2BACjBA,EAAK,oBAAqB,CAEnC,IAAI2C,EAAsB3C,EAAK,oBAC/B3G,EAAqBH,IAAU,CAC7B,iBAAkByJ,EAAoBzJ,CAAK,CACjD,EACA,MACIG,EAAqBiJ,GAGvB,IAAI/I,EAAW,CAAA,EAEXqJ,EAAazJ,GAA0B6G,EAAK,OAAQ3G,EAAoB,OAAWE,CAAQ,EAC3FsJ,EACA/I,EAAWkG,EAAK,UAAY,IAE5B8C,EAAStO,EAAS,CACpB,uBAAwB,GACxB,mBAAoB,EACxB,EAAKwL,EAAK,MAAM,EAEV+C,EAAkB,KAElBC,EAAc,IAAI,IAElBC,EAAuB,KAEvBC,EAA0B,KAE1BC,EAAoB,KAOpBC,EAAwBpD,EAAK,eAAiB,KAC9CqD,EAAiBzJ,GAAYgJ,EAAY5C,EAAK,QAAQ,SAAUlG,CAAQ,EACxEwJ,EAAgB,KACpB,GAAID,GAAkB,KAAM,CAG1B,IAAIzK,EAAQ2K,GAAuB,IAAK,CACtC,SAAUvD,EAAK,QAAQ,SAAS,QACtC,CAAK,EACG,CACF,QAAA7F,EACA,MAAAjB,CACN,EAAQsK,GAAuBZ,CAAU,EACrCS,EAAiBlJ,EACjBmJ,EAAgB,CACd,CAACpK,EAAM,EAAE,EAAGN,CAClB,CACG,CACD,IAAI6K,EAGJ,CAACJ,EAAe,KAAKK,GAAKA,EAAE,MAAM,IAAI,IAEtC,CAACL,EAAe,KAAKK,GAAKA,EAAE,MAAM,MAAM,GAAK1D,EAAK,eAAiB,MAC/D2D,EACA7N,EAAQ,CACV,cAAekK,EAAK,QAAQ,OAC5B,SAAUA,EAAK,QAAQ,SACvB,QAASqD,EACT,YAAAI,EACA,WAAYvB,GAEZ,sBAAuBlC,EAAK,eAAiB,KAAO,GAAQ,KAC5D,mBAAoB,GACpB,aAAc,OACd,WAAYA,EAAK,eAAiBA,EAAK,cAAc,YAAc,CAAE,EACrE,WAAYA,EAAK,eAAiBA,EAAK,cAAc,YAAc,KACnE,OAAQA,EAAK,eAAiBA,EAAK,cAAc,QAAUsD,EAC3D,SAAU,IAAI,IACd,SAAU,IAAI,GAClB,EAGMM,EAAgB/O,EAAO,IAGvBgP,EAA4B,GAE5BC,EAGAC,EAA8B,GAK9BC,EAAyB,GAGzBC,EAA0B,CAAA,EAG1BC,GAAwB,CAAA,EAExBC,EAAmB,IAAI,IAEvBC,GAAqB,EAIrBC,GAA0B,GAE1BC,GAAiB,IAAI,IAErBC,GAAmB,IAAI,IAEvBC,GAAmB,IAAI,IAKvBC,GAAkB,IAAI,IAGtBC,GAAmB,IAAI,IAGvBC,GAA0B,GAI9B,SAASC,IAAa,CAGpB,OAAA7B,EAAkB/C,EAAK,QAAQ,OAAO9H,GAAQ,CAC5C,GAAI,CACF,OAAQ2M,EACR,SAAA9O,EACA,MAAAQ,CACD,EAAG2B,EAGJ,GAAIyM,GAAyB,CAC3BA,GAA0B,GAC1B,MACD,CACD1O,GAAQyO,GAAiB,OAAS,GAAKnO,GAAS,KAAM,4YAAqa,EAC3d,IAAIuO,EAAaC,GAAsB,CACrC,gBAAiBjP,EAAM,SACvB,aAAcC,EACd,cAAA8O,CACR,CAAO,EACD,GAAIC,GAAcvO,GAAS,KAAM,CAE/BoO,GAA0B,GAC1B3E,EAAK,QAAQ,GAAGzJ,EAAQ,EAAE,EAE1ByO,GAAcF,EAAY,CACxB,MAAO,UACP,SAAA/O,EACA,SAAU,CACRiP,GAAcF,EAAY,CACxB,MAAO,aACP,QAAS,OACT,MAAO,OACP,SAAA/O,CACd,CAAa,EAEDiK,EAAK,QAAQ,GAAGzJ,CAAK,CACtB,EACD,OAAQ,CACN,IAAI0O,EAAW,IAAI,IAAInP,EAAM,QAAQ,EACrCmP,EAAS,IAAIH,EAAY1C,EAAY,EACrC8C,EAAY,CACV,SAAAD,CACd,CAAa,CACF,CACX,CAAS,EACD,MACD,CACD,OAAOE,GAAgBN,EAAe9O,CAAQ,CACpD,CAAK,EAMID,EAAM,aACTqP,GAAgBtQ,EAAO,IAAKiB,EAAM,QAAQ,EAErC6N,CACR,CAED,SAASyB,IAAU,CACbrC,GACFA,IAEFC,EAAY,MAAK,EACjBc,GAA+BA,EAA4B,QAC3DhO,EAAM,SAAS,QAAQ,CAACsI,EAAGxJ,IAAQyQ,GAAczQ,CAAG,CAAC,EACrDkB,EAAM,SAAS,QAAQ,CAACsI,EAAGxJ,IAAQ0Q,GAAc1Q,CAAG,CAAC,CACtD,CAED,SAAS2Q,GAAU9O,EAAI,CACrB,OAAAuM,EAAY,IAAIvM,CAAE,EACX,IAAMuM,EAAY,OAAOvM,CAAE,CACnC,CAED,SAASyO,EAAYM,EAAU,CAC7B1P,EAAQtB,EAAS,CAAA,EAAIsB,EAAO0P,CAAQ,EACpCxC,EAAY,QAAQnC,GAAcA,EAAW/K,CAAK,CAAC,CACpD,CAMD,SAAS2P,GAAmB1P,EAAUyP,EAAU,CAC9C,IAAIE,EAAiBC,EAMrB,IAAIC,EAAiB9P,EAAM,YAAc,MAAQA,EAAM,WAAW,YAAc,MAAQ+P,GAAiB/P,EAAM,WAAW,UAAU,GAAKA,EAAM,WAAW,QAAU,aAAe4P,EAAkB3P,EAAS,QAAU,KAAO,OAAS2P,EAAgB,eAAiB,GACrQI,EACAN,EAAS,WACP,OAAO,KAAKA,EAAS,UAAU,EAAE,OAAS,EAC5CM,EAAaN,EAAS,WAGtBM,EAAa,KAENF,EAETE,EAAahQ,EAAM,WAGnBgQ,EAAa,KAGf,IAAIC,EAAaP,EAAS,WAAaQ,GAAgBlQ,EAAM,WAAY0P,EAAS,WAAYA,EAAS,SAAW,GAAIA,EAAS,MAAM,EAAI1P,EAAM,WAG3ImP,EAAWnP,EAAM,SACjBmP,EAAS,KAAO,IAClBA,EAAW,IAAI,IAAIA,CAAQ,EAC3BA,EAAS,QAAQ,CAAC,EAAGlE,IAAMkE,EAAS,IAAIlE,EAAGqB,EAAY,CAAC,GAI1D,IAAI6D,EAAqBpC,IAA8B,IAAQ/N,EAAM,WAAW,YAAc,MAAQ+P,GAAiB/P,EAAM,WAAW,UAAU,KAAO6P,EAAmB5P,EAAS,QAAU,KAAO,OAAS4P,EAAiB,eAAiB,GAC7O9C,IACFD,EAAaC,EACbA,EAAqB,QAEnBkB,GAAwCH,IAAkB/O,EAAO,MAAgB+O,IAAkB/O,EAAO,KAC5GmL,EAAK,QAAQ,KAAKjK,EAAUA,EAAS,KAAK,EACjC6N,IAAkB/O,EAAO,SAClCmL,EAAK,QAAQ,QAAQjK,EAAUA,EAAS,KAAK,GAE/CmP,EAAY1Q,EAAS,CAAE,EAAEgR,EAAU,CACjC,WAAAM,EACA,WAAAC,EACA,cAAenC,EACf,SAAA7N,EACA,YAAa,GACb,WAAYmM,GACZ,aAAc,OACd,sBAAuBgE,GAAuBnQ,EAAUyP,EAAS,SAAW1P,EAAM,OAAO,EACzF,mBAAAmQ,EACA,SAAAhB,CACD,CAAA,CAAC,EAEFrB,EAAgB/O,EAAO,IACvBgP,EAA4B,GAC5BE,EAA8B,GAC9BC,EAAyB,GACzBC,EAA0B,CAAA,EAC1BC,GAAwB,CAAA,CACzB,CAGD,eAAeiC,GAAStQ,EAAIuQ,EAAM,CAChC,GAAI,OAAOvQ,GAAO,SAAU,CAC1BmK,EAAK,QAAQ,GAAGnK,CAAE,EAClB,MACD,CACD,IAAIwQ,EAAiBC,GAAYxQ,EAAM,SAAUA,EAAM,QAASgE,EAAUgJ,EAAO,mBAAoBjN,EAAIuQ,GAAQ,KAAO,OAASA,EAAK,YAAaA,GAAQ,KAAO,OAASA,EAAK,QAAQ,EACpL,CACF,KAAAhQ,EACA,WAAAmQ,EACA,MAAA3N,CACN,EAAQ4N,GAAyB1D,EAAO,uBAAwB,GAAOuD,EAAgBD,CAAI,EACnFK,EAAkB3Q,EAAM,SACxBQ,EAAeN,GAAeF,EAAM,SAAUM,EAAMgQ,GAAQA,EAAK,KAAK,EAM1E9P,EAAe9B,EAAS,CAAA,EAAI8B,EAAc0J,EAAK,QAAQ,eAAe1J,CAAY,CAAC,EACnF,IAAIoQ,EAAcN,GAAQA,EAAK,SAAW,KAAOA,EAAK,QAAU,OAC5DvB,EAAgBhQ,EAAO,KACvB6R,IAAgB,GAClB7B,EAAgBhQ,EAAO,QACd6R,IAAgB,IAAkBH,GAAc,MAAQV,GAAiBU,EAAW,UAAU,GAAKA,EAAW,aAAezQ,EAAM,SAAS,SAAWA,EAAM,SAAS,SAK/K+O,EAAgBhQ,EAAO,SAEzB,IAAIoR,EAAqBG,GAAQ,uBAAwBA,EAAOA,EAAK,qBAAuB,GAAO,OAC/FtB,EAAaC,GAAsB,CACrC,gBAAA0B,EACA,aAAAnQ,EACA,cAAAuO,CACN,CAAK,EACD,GAAIC,EAAY,CAEdE,GAAcF,EAAY,CACxB,MAAO,UACP,SAAUxO,EACV,SAAU,CACR0O,GAAcF,EAAY,CACxB,MAAO,aACP,QAAS,OACT,MAAO,OACP,SAAUxO,CACtB,CAAW,EAED6P,GAAStQ,EAAIuQ,CAAI,CAClB,EACD,OAAQ,CACN,IAAInB,EAAW,IAAI,IAAInP,EAAM,QAAQ,EACrCmP,EAAS,IAAIH,EAAY1C,EAAY,EACrC8C,EAAY,CACV,SAAAD,CACZ,CAAW,CACF,CACT,CAAO,EACD,MACD,CACD,OAAO,MAAME,GAAgBN,EAAevO,EAAc,CACxD,WAAAiQ,EAGA,aAAc3N,EACd,mBAAAqN,EACA,QAASG,GAAQA,EAAK,OAC5B,CAAK,CACF,CAID,SAASO,IAAa,CAOpB,GANAC,KACA1B,EAAY,CACV,aAAc,SACpB,CAAK,EAGGpP,EAAM,WAAW,QAAU,aAM/B,IAAIA,EAAM,WAAW,QAAU,OAAQ,CACrCqP,GAAgBrP,EAAM,cAAeA,EAAM,SAAU,CACnD,+BAAgC,EACxC,CAAO,EACD,MACD,CAIDqP,GAAgBvB,GAAiB9N,EAAM,cAAeA,EAAM,WAAW,SAAU,CAC/E,mBAAoBA,EAAM,UAChC,CAAK,EACF,CAID,eAAeqP,GAAgBN,EAAe9O,EAAUqQ,EAAM,CAI5DtC,GAA+BA,EAA4B,QAC3DA,EAA8B,KAC9BF,EAAgBiB,EAChBd,GAA+BqC,GAAQA,EAAK,kCAAoC,GAGhFS,GAAmB/Q,EAAM,SAAUA,EAAM,OAAO,EAChD+N,GAA6BuC,GAAQA,EAAK,sBAAwB,GAClE,IAAIU,EAAcjE,GAAsBD,EACpCmE,EAAoBX,GAAQA,EAAK,mBACjCjM,EAAUP,GAAYkN,EAAa/Q,EAAU+D,CAAQ,EAEzD,GAAI,CAACK,EAAS,CACZ,IAAIvB,EAAQ2K,GAAuB,IAAK,CACtC,SAAUxN,EAAS,QAC3B,CAAO,EACG,CACF,QAASiR,EACT,MAAA9N,EACR,EAAUsK,GAAuBsD,CAAW,EAEtCG,KACAxB,GAAmB1P,EAAU,CAC3B,QAASiR,EACT,WAAY,CAAE,EACd,OAAQ,CACN,CAAC9N,GAAM,EAAE,EAAGN,CACb,CACT,CAAO,EACD,MACD,CAOD,GAAI9C,EAAM,aAAe,CAACkO,GAA0BkD,GAAiBpR,EAAM,SAAUC,CAAQ,GAAK,EAAEqQ,GAAQA,EAAK,YAAcP,GAAiBO,EAAK,WAAW,UAAU,GAAI,CAC5KX,GAAmB1P,EAAU,CAC3B,QAAAoE,CACR,CAAO,EACD,MACD,CAED2J,EAA8B,IAAI,gBAClC,IAAIqD,EAAUC,GAAwBpH,EAAK,QAASjK,EAAU+N,EAA4B,OAAQsC,GAAQA,EAAK,UAAU,EACrHiB,EACAC,EACJ,GAAIlB,GAAQA,EAAK,aAKfkB,EAAe,CACb,CAACC,GAAoBpN,CAAO,EAAE,MAAM,EAAE,EAAGiM,EAAK,YACtD,UACeA,GAAQA,EAAK,YAAcP,GAAiBO,EAAK,WAAW,UAAU,EAAG,CAElF,IAAIoB,EAAe,MAAMC,GAAaN,EAASpR,EAAUqQ,EAAK,WAAYjM,EAAS,CACjF,QAASiM,EAAK,OACtB,CAAO,EACD,GAAIoB,EAAa,eACf,OAEFH,EAAoBG,EAAa,kBACjCF,EAAeE,EAAa,mBAC5BT,EAAoBW,GAAqB3R,EAAUqQ,EAAK,UAAU,EAElEe,EAAU,IAAI,QAAQA,EAAQ,IAAK,CACjC,OAAQA,EAAQ,MACxB,CAAO,CACF,CAED,GAAI,CACF,eAAAQ,EACA,WAAA5B,EACA,OAAA6B,CACN,EAAQ,MAAMC,GAAcV,EAASpR,EAAUoE,EAAS4M,EAAmBX,GAAQA,EAAK,WAAYA,GAAQA,EAAK,kBAAmBA,GAAQA,EAAK,QAASiB,EAAmBC,CAAY,EACjLK,IAMJ7D,EAA8B,KAC9B2B,GAAmB1P,EAAUvB,EAAS,CACpC,QAAA2F,CACD,EAAEkN,EAAoB,CACrB,WAAYA,CACb,EAAG,GAAI,CACN,WAAAtB,EACA,OAAA6B,CACD,CAAA,CAAC,EACH,CAGD,eAAeH,GAAaN,EAASpR,EAAUwQ,EAAYpM,EAASiM,EAAM,CACpEA,IAAS,SACXA,EAAO,CAAA,GAETQ,KAEA,IAAIkB,EAAaC,GAAwBhS,EAAUwQ,CAAU,EAC7DrB,EAAY,CACV,WAAA4C,CACN,CAAK,EAED,IAAIxM,EACA0M,EAAcC,GAAe9N,EAASpE,CAAQ,EAClD,GAAI,CAACiS,EAAY,MAAM,QAAU,CAACA,EAAY,MAAM,KAClD1M,EAAS,CACP,KAAMvC,EAAW,MACjB,MAAOwK,GAAuB,IAAK,CACjC,OAAQ4D,EAAQ,OAChB,SAAUpR,EAAS,SACnB,QAASiS,EAAY,MAAM,EACrC,CAAS,CACT,UAEM1M,EAAS,MAAM4M,GAAmB,SAAUf,EAASa,EAAa7N,EAASZ,EAAUF,EAAoBS,CAAQ,EAC7GqN,EAAQ,OAAO,QACjB,MAAO,CACL,eAAgB,EAC1B,EAGI,GAAIgB,GAAiB7M,CAAM,EAAG,CAC5B,IAAIzC,EACJ,OAAIuN,GAAQA,EAAK,SAAW,KAC1BvN,EAAUuN,EAAK,QAKfvN,EAAUyC,EAAO,WAAaxF,EAAM,SAAS,SAAWA,EAAM,SAAS,OAEzE,MAAMsS,GAAwBtS,EAAOwF,EAAQ,CAC3C,WAAAiL,EACA,QAAA1N,CACR,CAAO,EACM,CACL,eAAgB,EACxB,CACK,CACD,GAAIwP,GAAc/M,CAAM,EAAG,CAGzB,IAAIgN,EAAgBf,GAAoBpN,EAAS6N,EAAY,MAAM,EAAE,EAKrE,OAAK5B,GAAQA,EAAK,WAAa,KAC7BxC,EAAgB/O,EAAO,MAElB,CAEL,kBAAmB,CAAE,EACrB,mBAAoB,CAClB,CAACyT,EAAc,MAAM,EAAE,EAAGhN,EAAO,KAClC,CACT,CACK,CACD,GAAIiN,GAAiBjN,CAAM,EACzB,MAAMiI,GAAuB,IAAK,CAChC,KAAM,cACd,CAAO,EAEH,MAAO,CACL,kBAAmB,CACjB,CAACyE,EAAY,MAAM,EAAE,EAAG1M,EAAO,IAChC,CACP,CACG,CAGD,eAAeuM,GAAcV,EAASpR,EAAUoE,EAASqO,EAAoBjC,EAAYkC,EAAmB5P,EAASwO,EAAmBC,EAAc,CAEpJ,IAAIP,EAAoByB,GAAsBd,GAAqB3R,EAAUwQ,CAAU,EAGnFmC,EAAmBnC,GAAckC,GAAqBE,GAA4B5B,CAAiB,EACnGD,EAAcjE,GAAsBD,EACpC,CAACgG,EAAeC,CAAoB,EAAIC,GAAiB9I,EAAK,QAASlK,EAAOqE,EAASuO,EAAkB3S,EAAUiO,EAAwBC,EAAyBC,GAAuBM,GAAkBD,GAAkBuC,EAAahN,EAAUuN,EAAmBC,CAAY,EAOzR,GAHAL,GAAsB8B,GAAW,EAAE5O,GAAWA,EAAQ,KAAKuJ,IAAKA,GAAE,MAAM,KAAOqF,CAAO,IAAMH,GAAiBA,EAAc,KAAKlF,IAAKA,GAAE,MAAM,KAAOqF,CAAO,CAAC,EAC5J1E,GAA0B,EAAED,GAExBwE,EAAc,SAAW,GAAKC,EAAqB,SAAW,EAAG,CACnE,IAAIG,EAAkBC,KACtB,OAAAxD,GAAmB1P,EAAUvB,EAAS,CACpC,QAAA2F,EACA,WAAY,CAAE,EAEd,OAAQmN,GAAgB,IACzB,EAAED,EAAoB,CACrB,WAAYA,CACpB,EAAU,CAAA,EAAI2B,EAAkB,CACxB,SAAU,IAAI,IAAIlT,EAAM,QAAQ,CACxC,EAAU,CAAA,CAAE,CAAC,EACA,CACL,eAAgB,EACxB,CACK,CAKD,GAAI,CAACiO,EAA6B,CAChC8E,EAAqB,QAAQK,IAAM,CACjC,IAAIC,GAAUrT,EAAM,SAAS,IAAIoT,GAAG,GAAG,EACnCE,GAAsBC,GAAkB,OAAWF,GAAUA,GAAQ,KAAO,MAAS,EACzFrT,EAAM,SAAS,IAAIoT,GAAG,IAAKE,EAAmB,CACtD,CAAO,EACD,IAAItD,EAAauB,GAAqBvR,EAAM,WAC5CoP,EAAY1Q,EAAS,CACnB,WAAYuS,CACpB,EAASjB,EAAa,OAAO,KAAKA,CAAU,EAAE,SAAW,EAAI,CACrD,WAAY,IACpB,EAAU,CACF,WAAAA,CACD,EAAG,GAAI+C,EAAqB,OAAS,EAAI,CACxC,SAAU,IAAI,IAAI/S,EAAM,QAAQ,CACxC,EAAU,CAAA,CAAE,CAAC,CACR,CACD+S,EAAqB,QAAQK,GAAM,CAC7B/E,EAAiB,IAAI+E,EAAG,GAAG,GAC7BI,GAAaJ,EAAG,GAAG,EAEjBA,EAAG,YAIL/E,EAAiB,IAAI+E,EAAG,IAAKA,EAAG,UAAU,CAElD,CAAK,EAED,IAAIK,GAAiC,IAAMV,EAAqB,QAAQW,GAAKF,GAAaE,EAAE,GAAG,CAAC,EAC5F1F,GACFA,EAA4B,OAAO,iBAAiB,QAASyF,EAA8B,EAE7F,GAAI,CACF,QAAAE,GACA,cAAAC,GACA,eAAAC,EACN,EAAQ,MAAMC,GAA+B9T,EAAM,QAASqE,EAASyO,EAAeC,EAAsB1B,CAAO,EAC7G,GAAIA,EAAQ,OAAO,QACjB,MAAO,CACL,eAAgB,EACxB,EAKQrD,GACFA,EAA4B,OAAO,oBAAoB,QAASyF,EAA8B,EAEhGV,EAAqB,QAAQK,GAAM/E,EAAiB,OAAO+E,EAAG,GAAG,CAAC,EAElE,IAAI5H,GAAWuI,GAAaJ,EAAO,EACnC,GAAInI,GAAU,CACZ,GAAIA,GAAS,KAAOsH,EAAc,OAAQ,CAIxC,IAAIkB,EAAajB,EAAqBvH,GAAS,IAAMsH,EAAc,MAAM,EAAE,IAC3ErE,GAAiB,IAAIuF,CAAU,CAChC,CACD,aAAM1B,GAAwBtS,EAAOwL,GAAS,OAAQ,CACpD,QAAAzI,CACR,CAAO,EACM,CACL,eAAgB,EACxB,CACK,CAED,GAAI,CACF,WAAAkN,GACA,OAAA6B,EACN,EAAQmC,GAAkBjU,EAAOqE,EAASyO,EAAec,GAAepC,EAAcuB,EAAsBc,GAAgBlF,EAAe,EAEvIA,GAAgB,QAAQ,CAACuF,EAAcjB,KAAY,CACjDiB,EAAa,UAAUrJ,IAAW,EAI5BA,IAAWqJ,EAAa,OAC1BvF,GAAgB,OAAOsE,EAAO,CAExC,CAAO,CACP,CAAK,EACD,IAAIC,GAAkBC,KAClBgB,GAAqBC,GAAqB7F,EAAuB,EACjE8F,GAAuBnB,IAAmBiB,IAAsBpB,EAAqB,OAAS,EAClG,OAAOrU,EAAS,CACd,WAAAuR,GACA,OAAA6B,EACD,EAAEuC,GAAuB,CACxB,SAAU,IAAI,IAAIrU,EAAM,QAAQ,CACjC,EAAG,CAAE,CAAA,CACP,CACD,SAASsU,GAAWxV,EAAK,CACvB,OAAOkB,EAAM,SAAS,IAAIlB,CAAG,GAAKuN,EACnC,CAED,SAASkI,GAAMzV,EAAKmU,EAASxR,EAAM6O,EAAM,CACvC,GAAI1D,EACF,MAAM,IAAI,MAAM,kMAA4M,EAE1NyB,EAAiB,IAAIvP,CAAG,GAAG0U,GAAa1U,CAAG,EAC/C,IAAIkS,EAAcjE,GAAsBD,EACpCyD,EAAiBC,GAAYxQ,EAAM,SAAUA,EAAM,QAASgE,EAAUgJ,EAAO,mBAAoBvL,EAAMwR,EAAS3C,GAAQ,KAAO,OAASA,EAAK,QAAQ,EACrJjM,EAAUP,GAAYkN,EAAaT,EAAgBvM,CAAQ,EAC/D,GAAI,CAACK,EAAS,CACZmQ,GAAgB1V,EAAKmU,EAASxF,GAAuB,IAAK,CACxD,SAAU8C,CACX,CAAA,CAAC,EACF,MACD,CACD,GAAI,CACF,KAAAjQ,EACA,WAAAmQ,EACA,MAAA3N,CACN,EAAQ4N,GAAyB1D,EAAO,uBAAwB,GAAMuD,EAAgBD,CAAI,EACtF,GAAIxN,EAAO,CACT0R,GAAgB1V,EAAKmU,EAASnQ,CAAK,EACnC,MACD,CACD,IAAI+D,EAAQsL,GAAe9N,EAAS/D,CAAI,EAExC,GADAyN,GAA6BuC,GAAQA,EAAK,sBAAwB,GAC9DG,GAAcV,GAAiBU,EAAW,UAAU,EAAG,CACzDgE,GAAoB3V,EAAKmU,EAAS3S,EAAMuG,EAAOxC,EAASoM,CAAU,EAClE,MACD,CAGD/B,GAAiB,IAAI5P,EAAK,CACxB,QAAAmU,EACA,KAAA3S,CACN,CAAK,EACDoU,GAAoB5V,EAAKmU,EAAS3S,EAAMuG,EAAOxC,EAASoM,CAAU,CACnE,CAGD,eAAegE,GAAoB3V,EAAKmU,EAAS3S,EAAMuG,EAAO8N,EAAgBlE,EAAY,CAGxF,GAFAK,KACApC,GAAiB,OAAO5P,CAAG,EACvB,CAAC+H,EAAM,MAAM,QAAU,CAACA,EAAM,MAAM,KAAM,CAC5C,IAAI/D,EAAQ2K,GAAuB,IAAK,CACtC,OAAQgD,EAAW,WACnB,SAAUnQ,EACV,QAAS2S,CACjB,CAAO,EACDuB,GAAgB1V,EAAKmU,EAASnQ,CAAK,EACnC,MACD,CAED,IAAI8R,EAAkB5U,EAAM,SAAS,IAAIlB,CAAG,EACxCuU,EAAUwB,GAAqBpE,EAAYmE,CAAe,EAC9D5U,EAAM,SAAS,IAAIlB,EAAKuU,CAAO,EAC/BjE,EAAY,CACV,SAAU,IAAI,IAAIpP,EAAM,QAAQ,CACtC,CAAK,EAED,IAAI8U,EAAkB,IAAI,gBACtBC,EAAezD,GAAwBpH,EAAK,QAAS5J,EAAMwU,EAAgB,OAAQrE,CAAU,EACjGpC,EAAiB,IAAIvP,EAAKgW,CAAe,EACzC,IAAIE,EAAoB1G,GACpB2G,EAAe,MAAM7C,GAAmB,SAAU2C,EAAclO,EAAO8N,EAAgBlR,EAAUF,EAAoBS,CAAQ,EACjI,GAAI+Q,EAAa,OAAO,QAAS,CAG3B1G,EAAiB,IAAIvP,CAAG,IAAMgW,GAChCzG,EAAiB,OAAOvP,CAAG,EAE7B,MACD,CACD,GAAIuT,GAAiB4C,CAAY,EAE/B,GADA5G,EAAiB,OAAOvP,CAAG,EACvByP,GAA0ByG,EAAmB,CAK/C,IAAIE,EAAcC,GAAe,MAAS,EAC1CnV,EAAM,SAAS,IAAIlB,EAAKoW,CAAW,EACnC9F,EAAY,CACV,SAAU,IAAI,IAAIpP,EAAM,QAAQ,CAC1C,CAAS,EACD,MACR,KAAa,CACLyO,GAAiB,IAAI3P,CAAG,EACxB,IAAIsW,EAAiB7B,GAAkB9C,CAAU,EACjD,OAAAzQ,EAAM,SAAS,IAAIlB,EAAKsW,CAAc,EACtChG,EAAY,CACV,SAAU,IAAI,IAAIpP,EAAM,QAAQ,CAC1C,CAAS,EACMsS,GAAwBtS,EAAOiV,EAAc,CAClD,WAAAxE,EACA,sBAAuB,EACjC,CAAS,CACF,CAGH,GAAI8B,GAAc0C,CAAY,EAAG,CAC/BT,GAAgB1V,EAAKmU,EAASgC,EAAa,KAAK,EAChD,MACD,CACD,GAAIxC,GAAiBwC,CAAY,EAC/B,MAAMxH,GAAuB,IAAK,CAChC,KAAM,cACd,CAAO,EAIH,IAAIjN,EAAeR,EAAM,WAAW,UAAYA,EAAM,SAClDqV,EAAsB/D,GAAwBpH,EAAK,QAAS1J,EAAcsU,EAAgB,MAAM,EAChG9D,GAAcjE,GAAsBD,EACpCzI,GAAUrE,EAAM,WAAW,QAAU,OAAS8D,GAAYkN,GAAahR,EAAM,WAAW,SAAUgE,CAAQ,EAAIhE,EAAM,QACxH6B,EAAUwC,GAAS,8CAA8C,EACjE,IAAIiR,GAAS,EAAEhH,GACfE,GAAe,IAAI1P,EAAKwW,EAAM,EAC9B,IAAIC,GAAchC,GAAkB9C,EAAYwE,EAAa,IAAI,EACjEjV,EAAM,SAAS,IAAIlB,EAAKyW,EAAW,EACnC,GAAI,CAACzC,GAAeC,EAAoB,EAAIC,GAAiB9I,EAAK,QAASlK,EAAOqE,GAASoM,EAAYjQ,EAAc0N,EAAwBC,EAAyBC,GAAuBM,GAAkBD,GAAkBuC,GAAahN,EAAU,CACtP,CAAC6C,EAAM,MAAM,EAAE,EAAGoO,EAAa,IACrC,EAAO,MACP,EAIIlC,GAAqB,OAAOK,GAAMA,EAAG,MAAQtU,CAAG,EAAE,QAAQsU,GAAM,CAC9D,IAAIoC,GAAWpC,EAAG,IACdwB,GAAkB5U,EAAM,SAAS,IAAIwV,EAAQ,EAC7ClC,GAAsBC,GAAkB,OAAWqB,GAAkBA,GAAgB,KAAO,MAAS,EACzG5U,EAAM,SAAS,IAAIwV,GAAUlC,EAAmB,EAC5CjF,EAAiB,IAAImH,EAAQ,GAC/BhC,GAAagC,EAAQ,EAEnBpC,EAAG,YACL/E,EAAiB,IAAImH,GAAUpC,EAAG,UAAU,CAEpD,CAAK,EACDhE,EAAY,CACV,SAAU,IAAI,IAAIpP,EAAM,QAAQ,CACtC,CAAK,EACD,IAAIyT,GAAiC,IAAMV,GAAqB,QAAQK,GAAMI,GAAaJ,EAAG,GAAG,CAAC,EAClG0B,EAAgB,OAAO,iBAAiB,QAASrB,EAA8B,EAC/E,GAAI,CACF,QAAAE,GACA,cAAAC,GACA,eAAAC,EACN,EAAQ,MAAMC,GAA+B9T,EAAM,QAASqE,GAASyO,GAAeC,GAAsBsC,CAAmB,EACzH,GAAIP,EAAgB,OAAO,QACzB,OAEFA,EAAgB,OAAO,oBAAoB,QAASrB,EAA8B,EAClFjF,GAAe,OAAO1P,CAAG,EACzBuP,EAAiB,OAAOvP,CAAG,EAC3BiU,GAAqB,QAAQvI,GAAK6D,EAAiB,OAAO7D,EAAE,GAAG,CAAC,EAChE,IAAIgB,EAAWuI,GAAaJ,EAAO,EACnC,GAAInI,EAAU,CACZ,GAAIA,EAAS,KAAOsH,GAAc,OAAQ,CAIxC,IAAIkB,EAAajB,GAAqBvH,EAAS,IAAMsH,GAAc,MAAM,EAAE,IAC3ErE,GAAiB,IAAIuF,CAAU,CAChC,CACD,OAAO1B,GAAwBtS,EAAOwL,EAAS,MAAM,CACtD,CAED,GAAI,CACF,WAAAyE,GACA,OAAA6B,EACD,EAAGmC,GAAkBjU,EAAOA,EAAM,QAAS8S,GAAec,GAAe,OAAWb,GAAsBc,GAAgBlF,EAAe,EAG1I,GAAI3O,EAAM,SAAS,IAAIlB,CAAG,EAAG,CAC3B,IAAIoW,EAAcC,GAAeF,EAAa,IAAI,EAClDjV,EAAM,SAAS,IAAIlB,EAAKoW,CAAW,CACpC,CACD,IAAIf,GAAqBC,GAAqBkB,EAAM,EAIhDtV,EAAM,WAAW,QAAU,WAAasV,GAAS/G,IACnD1M,EAAUiM,EAAe,yBAAyB,EAClDE,GAA+BA,EAA4B,QAC3D2B,GAAmB3P,EAAM,WAAW,SAAU,CAC5C,QAAAqE,GACA,WAAA4L,GACA,OAAA6B,GACA,SAAU,IAAI,IAAI9R,EAAM,QAAQ,CACxC,CAAO,IAKDoP,EAAY1Q,EAAS,CACnB,OAAAoT,GACA,WAAY5B,GAAgBlQ,EAAM,WAAYiQ,GAAY5L,GAASyN,EAAM,CAC1E,EAAEqC,IAAsBpB,GAAqB,OAAS,EAAI,CACzD,SAAU,IAAI,IAAI/S,EAAM,QAAQ,CACxC,EAAU,CAAA,CAAE,CAAC,EACPkO,EAAyB,GAE5B,CAED,eAAewG,GAAoB5V,EAAKmU,EAAS3S,EAAMuG,EAAOxC,EAASoM,EAAY,CACjF,IAAImE,EAAkB5U,EAAM,SAAS,IAAIlB,CAAG,EAExCsW,EAAiB7B,GAAkB9C,EAAYmE,EAAkBA,EAAgB,KAAO,MAAS,EACrG5U,EAAM,SAAS,IAAIlB,EAAKsW,CAAc,EACtChG,EAAY,CACV,SAAU,IAAI,IAAIpP,EAAM,QAAQ,CACtC,CAAK,EAED,IAAI8U,EAAkB,IAAI,gBACtBC,EAAezD,GAAwBpH,EAAK,QAAS5J,EAAMwU,EAAgB,MAAM,EACrFzG,EAAiB,IAAIvP,EAAKgW,CAAe,EACzC,IAAIE,EAAoB1G,GACpB9I,EAAS,MAAM4M,GAAmB,SAAU2C,EAAclO,EAAOxC,EAASZ,EAAUF,EAAoBS,CAAQ,EAapH,GARIyO,GAAiBjN,CAAM,IACzBA,EAAU,MAAMiQ,GAAoBjQ,EAAQuP,EAAa,OAAQ,EAAI,GAAMvP,GAIzE6I,EAAiB,IAAIvP,CAAG,IAAMgW,GAChCzG,EAAiB,OAAOvP,CAAG,EAEzBiW,EAAa,OAAO,QACtB,OAGF,GAAI1C,GAAiB7M,CAAM,EACzB,GAAI+I,GAA0ByG,EAAmB,CAG/C,IAAIE,EAAcC,GAAe,MAAS,EAC1CnV,EAAM,SAAS,IAAIlB,EAAKoW,CAAW,EACnC9F,EAAY,CACV,SAAU,IAAI,IAAIpP,EAAM,QAAQ,CAC1C,CAAS,EACD,MACR,KAAa,CACLyO,GAAiB,IAAI3P,CAAG,EACxB,MAAMwT,GAAwBtS,EAAOwF,CAAM,EAC3C,MACD,CAGH,GAAI+M,GAAc/M,CAAM,EAAG,CACzB,IAAIgN,EAAgBf,GAAoBzR,EAAM,QAASiT,CAAO,EAC9DjT,EAAM,SAAS,OAAOlB,CAAG,EAIzBsQ,EAAY,CACV,SAAU,IAAI,IAAIpP,EAAM,QAAQ,EAChC,OAAQ,CACN,CAACwS,EAAc,MAAM,EAAE,EAAGhN,EAAO,KAClC,CACT,CAAO,EACD,MACD,CACD3D,EAAU,CAAC4Q,GAAiBjN,CAAM,EAAG,iCAAiC,EAEtE,IAAI0P,EAAcC,GAAe3P,EAAO,IAAI,EAC5CxF,EAAM,SAAS,IAAIlB,EAAKoW,CAAW,EACnC9F,EAAY,CACV,SAAU,IAAI,IAAIpP,EAAM,QAAQ,CACtC,CAAK,CACF,CAoBD,eAAesS,GAAwBtS,EAAOwL,EAAUkK,EAAO,CAC7D,GAAI,CACF,WAAAjF,EACA,QAAA1N,EACA,sBAAA4S,CACD,EAAGD,IAAU,OAAS,CAAA,EAAKA,EACxBlK,EAAS,aACX0C,EAAyB,IAE3B,IAAI0H,EAAmB1V,GAAeF,EAAM,SAAUwL,EAAS,SAC/D9M,EAAS,CACP,YAAa,EACd,EAAEiX,EAAwB,CACzB,uBAAwB,EAC9B,EAAQ,CAAA,CAAE,CAAC,EAGP,GAFA9T,EAAU+T,EAAkB,gDAAgD,EAExErJ,GAAmB,KAAKf,EAAS,QAAQ,GAAKmB,EAAW,CAC3D,IAAIjL,EAAMwI,EAAK,QAAQ,UAAUsB,EAAS,QAAQ,EAC9CqK,EAAsB5R,GAAcvC,EAAI,SAAUsC,CAAQ,GAAK,KACnE,GAAI0I,EAAa,SAAS,SAAWhL,EAAI,QAAUmU,EAAqB,CAClE9S,EACF2J,EAAa,SAAS,QAAQlB,EAAS,QAAQ,EAE/CkB,EAAa,SAAS,OAAOlB,EAAS,QAAQ,EAEhD,MACD,CACF,CAGDwC,EAA8B,KAC9B,IAAI8H,EAAwB/S,IAAY,GAAOhE,EAAO,QAAUA,EAAO,KAGnE6T,EAAmBnC,GAAcoC,GAA4B7S,EAAM,UAAU,EAIjF,GAAImM,GAAkC,IAAIX,EAAS,MAAM,GAAKoH,GAAoB7C,GAAiB6C,EAAiB,UAAU,EAC5H,MAAMvD,GAAgByG,EAAuBF,EAAkB,CAC7D,WAAYlX,EAAS,CAAE,EAAEkU,EAAkB,CACzC,WAAYpH,EAAS,QAC/B,CAAS,EAED,mBAAoBuC,CAC5B,CAAO,UACQ4H,EAGT,MAAMtG,GAAgByG,EAAuBF,EAAkB,CAC7D,mBAAoBhE,GAAqBgE,CAAgB,EACzD,kBAAmBhD,EAEnB,mBAAoB7E,CAC5B,CAAO,MACI,CAEL,IAAI2E,EAAqBd,GAAqBgE,EAAkBhD,CAAgB,EAChF,MAAMvD,GAAgByG,EAAuBF,EAAkB,CAC7D,mBAAAlD,EAEA,mBAAoB3E,CAC5B,CAAO,CACF,CACF,CACD,eAAe+F,GAA+BiC,EAAgB1R,EAASyO,EAAekD,EAAgB3E,EAAS,CAI7G,IAAIsC,EAAU,MAAM,QAAQ,IAAI,CAAC,GAAGb,EAAc,IAAIjM,GAASuL,GAAmB,SAAUf,EAASxK,EAAOxC,EAASZ,EAAUF,EAAoBS,CAAQ,CAAC,EAAG,GAAGgS,EAAe,IAAItC,GAC/KA,EAAE,SAAWA,EAAE,OAASA,EAAE,WACrBtB,GAAmB,SAAUd,GAAwBpH,EAAK,QAASwJ,EAAE,KAAMA,EAAE,WAAW,MAAM,EAAGA,EAAE,MAAOA,EAAE,QAASjQ,EAAUF,EAAoBS,CAAQ,EAEtJ,CACV,KAAMf,EAAW,MACjB,MAAOwK,GAAuB,IAAK,CACjC,SAAUiG,EAAE,IACxB,CAAW,CACX,CAGK,CAAC,CAAC,EACCE,EAAgBD,EAAQ,MAAM,EAAGb,EAAc,MAAM,EACrDe,EAAiBF,EAAQ,MAAMb,EAAc,MAAM,EACvD,aAAM,QAAQ,IAAI,CAACmD,GAAuBF,EAAgBjD,EAAec,EAAeA,EAAc,IAAI,IAAMvC,EAAQ,MAAM,EAAG,GAAOrR,EAAM,UAAU,EAAGiW,GAAuBF,EAAgBC,EAAe,IAAItC,GAAKA,EAAE,KAAK,EAAGG,EAAgBmC,EAAe,IAAItC,GAAKA,EAAE,WAAaA,EAAE,WAAW,OAAS,IAAI,EAAG,EAAI,CAAC,CAAC,EACvT,CACL,QAAAC,EACA,cAAAC,EACA,eAAAC,CACN,CACG,CACD,SAAS/C,IAAuB,CAE9B5C,EAAyB,GAGzBC,EAAwB,KAAK,GAAGgD,GAAqB,CAAE,EAEvDzC,GAAiB,QAAQ,CAACpG,EAAGxJ,IAAQ,CAC/BuP,EAAiB,IAAIvP,CAAG,IAC1BsP,GAAsB,KAAKtP,CAAG,EAC9B0U,GAAa1U,CAAG,EAExB,CAAK,CACF,CACD,SAAS0V,GAAgB1V,EAAKmU,EAASnQ,EAAO,CAC5C,IAAI0P,EAAgBf,GAAoBzR,EAAM,QAASiT,CAAO,EAC9D1D,GAAczQ,CAAG,EACjBsQ,EAAY,CACV,OAAQ,CACN,CAACoD,EAAc,MAAM,EAAE,EAAG1P,CAC3B,EACD,SAAU,IAAI,IAAI9C,EAAM,QAAQ,CACtC,CAAK,CACF,CACD,SAASuP,GAAczQ,EAAK,CAC1B,IAAIuU,EAAUrT,EAAM,SAAS,IAAIlB,CAAG,EAIhCuP,EAAiB,IAAIvP,CAAG,GAAK,EAAEuU,GAAWA,EAAQ,QAAU,WAAa7E,GAAe,IAAI1P,CAAG,IACjG0U,GAAa1U,CAAG,EAElB4P,GAAiB,OAAO5P,CAAG,EAC3B0P,GAAe,OAAO1P,CAAG,EACzB2P,GAAiB,OAAO3P,CAAG,EAC3BkB,EAAM,SAAS,OAAOlB,CAAG,CAC1B,CACD,SAAS0U,GAAa1U,EAAK,CACzB,IAAIoX,EAAa7H,EAAiB,IAAIvP,CAAG,EACzC+C,EAAUqU,EAAY,8BAAgCpX,CAAG,EACzDoX,EAAW,MAAK,EAChB7H,EAAiB,OAAOvP,CAAG,CAC5B,CACD,SAASqX,GAAiBC,EAAM,CAC9B,QAAStX,KAAOsX,EAAM,CACpB,IAAI/C,EAAUiB,GAAWxV,CAAG,EACxBoW,EAAcC,GAAe9B,EAAQ,IAAI,EAC7CrT,EAAM,SAAS,IAAIlB,EAAKoW,CAAW,CACpC,CACF,CACD,SAAS/B,IAAyB,CAChC,IAAIkD,EAAW,CAAA,EACXnD,EAAkB,GACtB,QAASpU,KAAO2P,GAAkB,CAChC,IAAI4E,EAAUrT,EAAM,SAAS,IAAIlB,CAAG,EACpC+C,EAAUwR,EAAS,qBAAuBvU,CAAG,EACzCuU,EAAQ,QAAU,YACpB5E,GAAiB,OAAO3P,CAAG,EAC3BuX,EAAS,KAAKvX,CAAG,EACjBoU,EAAkB,GAErB,CACD,OAAAiD,GAAiBE,CAAQ,EAClBnD,CACR,CACD,SAASkB,GAAqBkC,EAAU,CACtC,IAAIC,EAAa,CAAA,EACjB,OAAS,CAACzX,EAAK6E,CAAE,IAAK6K,GACpB,GAAI7K,EAAK2S,EAAU,CACjB,IAAIjD,EAAUrT,EAAM,SAAS,IAAIlB,CAAG,EACpC+C,EAAUwR,EAAS,qBAAuBvU,CAAG,EACzCuU,EAAQ,QAAU,YACpBG,GAAa1U,CAAG,EAChB0P,GAAe,OAAO1P,CAAG,EACzByX,EAAW,KAAKzX,CAAG,EAEtB,CAEH,OAAAqX,GAAiBI,CAAU,EACpBA,EAAW,OAAS,CAC5B,CACD,SAASC,GAAW1X,EAAK6B,EAAI,CAC3B,IAAI8V,EAAUzW,EAAM,SAAS,IAAIlB,CAAG,GAAKwN,GACzC,OAAIsC,GAAiB,IAAI9P,CAAG,IAAM6B,GAChCiO,GAAiB,IAAI9P,EAAK6B,CAAE,EAEvB8V,CACR,CACD,SAASjH,GAAc1Q,EAAK,CAC1BkB,EAAM,SAAS,OAAOlB,CAAG,EACzB8P,GAAiB,OAAO9P,CAAG,CAC5B,CAED,SAASoQ,GAAcpQ,EAAK4X,EAAY,CACtC,IAAID,EAAUzW,EAAM,SAAS,IAAIlB,CAAG,GAAKwN,GAGzCzK,EAAU4U,EAAQ,QAAU,aAAeC,EAAW,QAAU,WAAaD,EAAQ,QAAU,WAAaC,EAAW,QAAU,WAAaD,EAAQ,QAAU,WAAaC,EAAW,QAAU,cAAgBD,EAAQ,QAAU,WAAaC,EAAW,QAAU,aAAeD,EAAQ,QAAU,cAAgBC,EAAW,QAAU,YAAa,qCAAuCD,EAAQ,MAAQ,OAASC,EAAW,KAAK,EACza,IAAIvH,EAAW,IAAI,IAAInP,EAAM,QAAQ,EACrCmP,EAAS,IAAIrQ,EAAK4X,CAAU,EAC5BtH,EAAY,CACV,SAAAD,CACN,CAAK,CACF,CACD,SAASF,GAAsB7D,EAAO,CACpC,GAAI,CACF,gBAAAuF,EACA,aAAAnQ,EACA,cAAAuO,CACD,EAAG3D,EACJ,GAAIwD,GAAiB,OAAS,EAC5B,OAIEA,GAAiB,KAAO,GAC1BzO,GAAQ,GAAO,8CAA8C,EAE/D,IAAIb,EAAU,MAAM,KAAKsP,GAAiB,QAAS,CAAA,EAC/C,CAACI,EAAY2H,CAAe,EAAIrX,EAAQA,EAAQ,OAAS,CAAC,EAC1DmX,EAAUzW,EAAM,SAAS,IAAIgP,CAAU,EAC3C,GAAI,EAAAyH,GAAWA,EAAQ,QAAU,eAO7BE,EAAgB,CAClB,gBAAAhG,EACA,aAAAnQ,EACA,cAAAuO,CACN,CAAK,EACC,OAAOC,CAEV,CACD,SAASmC,GAAsByF,EAAW,CACxC,IAAIC,EAAoB,CAAA,EACxB,OAAAlI,GAAgB,QAAQ,CAACmI,EAAK7D,IAAY,EACpC,CAAC2D,GAAaA,EAAU3D,CAAO,KAIjC6D,EAAI,OAAM,EACVD,EAAkB,KAAK5D,CAAO,EAC9BtE,GAAgB,OAAOsE,CAAO,EAEtC,CAAK,EACM4D,CACR,CAGD,SAASE,GAAwBC,EAAWC,EAAaC,EAAQ,CAO/D,GANA/J,EAAuB6J,EACvB3J,EAAoB4J,EACpB7J,EAA0B8J,GAAU,KAIhC,CAAC5J,GAAyBtN,EAAM,aAAeoM,GAAiB,CAClEkB,EAAwB,GACxB,IAAI6J,EAAI/G,GAAuBpQ,EAAM,SAAUA,EAAM,OAAO,EACxDmX,GAAK,MACP/H,EAAY,CACV,sBAAuB+H,CACjC,CAAS,CAEJ,CACD,MAAO,IAAM,CACXhK,EAAuB,KACvBE,EAAoB,KACpBD,EAA0B,IAChC,CACG,CACD,SAASgK,GAAanX,EAAUoE,EAAS,CACvC,OAAI+I,GACQA,EAAwBnN,EAAUoE,EAAQ,IAAIuJ,GAAKyJ,GAAsBzJ,EAAG5N,EAAM,UAAU,CAAC,CAAC,GAC1FC,EAAS,GAG1B,CACD,SAAS8Q,GAAmB9Q,EAAUoE,EAAS,CAC7C,GAAI8I,GAAwBE,EAAmB,CAC7C,IAAIvO,EAAMsY,GAAanX,EAAUoE,CAAO,EACxC8I,EAAqBrO,CAAG,EAAIuO,GAC7B,CACF,CACD,SAAS+C,GAAuBnQ,EAAUoE,EAAS,CACjD,GAAI8I,EAAsB,CACxB,IAAIrO,EAAMsY,GAAanX,EAAUoE,CAAO,EACpC8S,EAAIhK,EAAqBrO,CAAG,EAChC,GAAI,OAAOqY,GAAM,SACf,OAAOA,CAEV,CACD,OAAO,IACR,CACD,SAASG,GAAmBC,EAAW,CACrC9T,EAAW,CAAA,EACXsJ,EAAqB1J,GAA0BkU,EAAWhU,EAAoB,OAAWE,CAAQ,CAClG,CACD,OAAAoK,EAAS,CACP,IAAI,UAAW,CACb,OAAO7J,CACR,EACD,IAAI,OAAQ,CACV,OAAOhE,CACR,EACD,IAAI,QAAS,CACX,OAAO8M,CACR,EACD,WAAAgC,GACA,UAAAW,GACA,wBAAAsH,GACA,SAAA1G,GACA,MAAAkE,GACA,WAAA1D,GAGA,WAAY9Q,GAAMmK,EAAK,QAAQ,WAAWnK,CAAE,EAC5C,eAAgBA,GAAMmK,EAAK,QAAQ,eAAenK,CAAE,EACpD,WAAAuU,GACA,cAAA/E,GACA,QAAAD,GACA,WAAAkH,GACA,cAAAhH,GACA,0BAA2BnB,EAC3B,yBAA0BM,GAG1B,mBAAA2I,EACJ,EACSzJ,CACT,CAyYA,SAAS2J,GAAuBlH,EAAM,CACpC,OAAOA,GAAQ,OAAS,aAAcA,GAAQA,EAAK,UAAY,MAAQ,SAAUA,GAAQA,EAAK,OAAS,OACzG,CACA,SAASE,GAAYvQ,EAAUoE,EAASL,EAAUyT,EAAiB1X,EAAI2X,EAAaC,EAAU,CAC5F,IAAIC,EACAC,EACJ,GAAIH,GAAe,MAAQC,IAAa,OAAQ,CAK9CC,EAAoB,CAAA,EACpB,QAAS/Q,KAASxC,EAEhB,GADAuT,EAAkB,KAAK/Q,CAAK,EACxBA,EAAM,MAAM,KAAO6Q,EAAa,CAClCG,EAAmBhR,EACnB,KACD,CAEP,MACI+Q,EAAoBvT,EACpBwT,EAAmBxT,EAAQA,EAAQ,OAAS,CAAC,EAG/C,IAAI/D,EAAO8I,GAAUrJ,GAAU,IAAKoJ,GAA2ByO,CAAiB,EAAE,IAAIhK,GAAKA,EAAE,YAAY,EAAG3J,GAAchE,EAAS,SAAU+D,CAAQ,GAAK/D,EAAS,SAAU0X,IAAa,MAAM,EAIhM,OAAI5X,GAAM,OACRO,EAAK,OAASL,EAAS,OACvBK,EAAK,KAAOL,EAAS,OAGlBF,GAAM,MAAQA,IAAO,IAAMA,IAAO,MAAQ8X,GAAoBA,EAAiB,MAAM,OAAS,CAACC,GAAmBxX,EAAK,MAAM,IAChIA,EAAK,OAASA,EAAK,OAASA,EAAK,OAAO,QAAQ,MAAO,SAAS,EAAI,UAMlEmX,GAAmBzT,IAAa,MAClC1D,EAAK,SAAWA,EAAK,WAAa,IAAM0D,EAAWY,GAAU,CAACZ,EAAU1D,EAAK,QAAQ,CAAC,GAEjFD,GAAWC,CAAI,CACxB,CAGA,SAASoQ,GAAyBqH,EAAqBC,EAAW1X,EAAMgQ,EAAM,CAE5E,GAAI,CAACA,GAAQ,CAACkH,GAAuBlH,CAAI,EACvC,MAAO,CACL,KAAAhQ,CACN,EAEE,GAAIgQ,EAAK,YAAc,CAAC2H,GAAc3H,EAAK,UAAU,EACnD,MAAO,CACL,KAAAhQ,EACA,MAAOmN,GAAuB,IAAK,CACjC,OAAQ6C,EAAK,UACrB,CAAO,CACP,EAEE,IAAI4H,EAAsB,KAAO,CAC/B,KAAA5X,EACA,MAAOmN,GAAuB,IAAK,CACjC,KAAM,cACZ,CAAK,CACL,GAEM0K,EAAgB7H,EAAK,YAAc,MACnC8H,EAAaL,EAAsBI,EAAc,YAAW,EAAKA,EAAc,cAC/EE,EAAaC,GAAkBhY,CAAI,EACvC,GAAIgQ,EAAK,OAAS,QAChB,GAAIA,EAAK,cAAgB,aAAc,CAErC,GAAI,CAACP,GAAiBqI,CAAU,EAC9B,OAAOF,EAAmB,EAE5B,IAAIK,EAAO,OAAOjI,EAAK,MAAS,SAAWA,EAAK,KAAOA,EAAK,gBAAgB,UAAYA,EAAK,gBAAgB,gBAE7G,MAAM,KAAKA,EAAK,KAAK,QAAS,CAAA,EAAE,OAAO,CAAC5F,EAAK8N,IAAU,CACrD,GAAI,CAACC,EAAM3W,CAAK,EAAI0W,EACpB,MAAO,GAAK9N,EAAM+N,EAAO,IAAM3W,EAAQ;AAAA,CACxC,EAAE,EAAE,EAAI,OAAOwO,EAAK,IAAI,EACzB,MAAO,CACL,KAAAhQ,EACA,WAAY,CACV,WAAA8X,EACA,WAAAC,EACA,YAAa/H,EAAK,YAClB,SAAU,OACV,KAAM,OACN,KAAAiI,CACD,CACT,CACA,SAAejI,EAAK,cAAgB,mBAAoB,CAElD,GAAI,CAACP,GAAiBqI,CAAU,EAC9B,OAAOF,EAAmB,EAE5B,GAAI,CACF,IAAIlO,EAAO,OAAOsG,EAAK,MAAS,SAAW,KAAK,MAAMA,EAAK,IAAI,EAAIA,EAAK,KACxE,MAAO,CACL,KAAAhQ,EACA,WAAY,CACV,WAAA8X,EACA,WAAAC,EACA,YAAa/H,EAAK,YAClB,SAAU,OACV,KAAAtG,EACA,KAAM,MACP,CACX,CACO,MAAW,CACV,OAAOkO,EAAmB,CAC3B,CACF,EAEHrW,EAAU,OAAO,UAAa,WAAY,+CAA+C,EACzF,IAAI6W,EACAC,EACJ,GAAIrI,EAAK,SACPoI,EAAeE,GAA8BtI,EAAK,QAAQ,EAC1DqI,EAAWrI,EAAK,iBACPA,EAAK,gBAAgB,SAC9BoI,EAAeE,GAA8BtI,EAAK,IAAI,EACtDqI,EAAWrI,EAAK,aACPA,EAAK,gBAAgB,gBAC9BoI,EAAepI,EAAK,KACpBqI,EAAWE,GAA8BH,CAAY,UAC5CpI,EAAK,MAAQ,KACtBoI,EAAe,IAAI,gBACnBC,EAAW,IAAI,aAEf,IAAI,CACFD,EAAe,IAAI,gBAAgBpI,EAAK,IAAI,EAC5CqI,EAAWE,GAA8BH,CAAY,CACtD,MAAW,CACV,OAAOR,EAAmB,CAC3B,CAEH,IAAIzH,EAAa,CACf,WAAA2H,EACA,WAAAC,EACA,YAAa/H,GAAQA,EAAK,aAAe,oCACzC,SAAAqI,EACA,KAAM,OACN,KAAM,MACV,EACE,GAAI5I,GAAiBU,EAAW,UAAU,EACxC,MAAO,CACL,KAAAnQ,EACA,WAAAmQ,CACN,EAGE,IAAIpO,EAAa9B,GAAUD,CAAI,EAI/B,OAAI0X,GAAa3V,EAAW,QAAUyV,GAAmBzV,EAAW,MAAM,GACxEqW,EAAa,OAAO,QAAS,EAAE,EAEjCrW,EAAW,OAAS,IAAMqW,EACnB,CACL,KAAMrY,GAAWgC,CAAU,EAC3B,WAAAoO,CACJ,CACA,CAGA,SAASqI,GAA8BzU,EAAS0U,EAAY,CAC1D,IAAIC,EAAkB3U,EACtB,GAAI0U,EAAY,CACd,IAAIvZ,EAAQ6E,EAAQ,UAAUuJ,GAAKA,EAAE,MAAM,KAAOmL,CAAU,EACxDvZ,GAAS,IACXwZ,EAAkB3U,EAAQ,MAAM,EAAG7E,CAAK,EAE3C,CACD,OAAOwZ,CACT,CACA,SAAShG,GAAiBrQ,EAAS3C,EAAOqE,EAASoM,EAAYxQ,EAAUiO,EAAwBC,EAAyBC,EAAuBM,EAAkBD,EAAkBuC,EAAahN,EAAUuN,EAAmBC,EAAc,CAC3O,IAAIyD,EAAezD,EAAe,OAAO,OAAOA,CAAY,EAAE,CAAC,EAAID,EAAoB,OAAO,OAAOA,CAAiB,EAAE,CAAC,EAAI,OACzH0H,EAAatW,EAAQ,UAAU3C,EAAM,QAAQ,EAC7CkZ,EAAUvW,EAAQ,UAAU1C,CAAQ,EAEpC8Y,EAAavH,EAAe,OAAO,KAAKA,CAAY,EAAE,CAAC,EAAI,OAE3D2H,EADkBL,GAA8BzU,EAAS0U,CAAU,EAC/B,OAAO,CAAClS,EAAOrH,IAAU,CAC/D,GAAIqH,EAAM,MAAM,KAEd,MAAO,GAET,GAAIA,EAAM,MAAM,QAAU,KACxB,MAAO,GAGT,GAAIuS,GAAYpZ,EAAM,WAAYA,EAAM,QAAQR,CAAK,EAAGqH,CAAK,GAAKsH,EAAwB,KAAKxK,GAAMA,IAAOkD,EAAM,MAAM,EAAE,EACxH,MAAO,GAMT,IAAIwS,EAAoBrZ,EAAM,QAAQR,CAAK,EACvC8Z,EAAiBzS,EACrB,OAAO0S,GAAuB1S,EAAOnI,EAAS,CAC5C,WAAAua,EACA,cAAeI,EAAkB,OACjC,QAAAH,EACA,WAAYI,EAAe,MAC5B,EAAE7I,EAAY,CACb,aAAAwE,EACA,wBAEA/G,GAEA+K,EAAW,SAAWA,EAAW,SAAWC,EAAQ,SAAWA,EAAQ,QAEvED,EAAW,SAAWC,EAAQ,QAAUM,GAAmBH,EAAmBC,CAAc,CAC7F,CAAA,CAAC,CACN,CAAG,EAEGvG,EAAuB,CAAA,EAC3B,OAAArE,EAAiB,QAAQ,CAACgF,EAAG5U,IAAQ,CAEnC,GAAI,CAACuF,EAAQ,KAAKuJ,IAAKA,GAAE,MAAM,KAAO8F,EAAE,OAAO,EAC7C,OAEF,IAAI+F,EAAiB3V,GAAYkN,EAAa0C,EAAE,KAAM1P,CAAQ,EAK9D,GAAI,CAACyV,EAAgB,CACnB1G,EAAqB,KAAK,CACxB,IAAAjU,EACA,QAAS4U,EAAE,QACX,KAAMA,EAAE,KACR,QAAS,KACT,MAAO,KACP,WAAY,IACpB,CAAO,EACD,MACD,CAID,IAAIL,EAAUrT,EAAM,SAAS,IAAIlB,CAAG,EAChC4a,EAAevH,GAAesH,EAAgB/F,EAAE,IAAI,EACpDiG,EAAmB,GACnBlL,EAAiB,IAAI3P,CAAG,EAE1B6a,EAAmB,GACVvL,EAAsB,SAAStP,CAAG,EAE3C6a,EAAmB,GACVtG,GAAWA,EAAQ,QAAU,QAAUA,EAAQ,OAAS,OAIjEsG,EAAmBzL,EAInByL,EAAmBJ,GAAuBG,EAAchb,EAAS,CAC/D,WAAAua,EACA,cAAejZ,EAAM,QAAQA,EAAM,QAAQ,OAAS,CAAC,EAAE,OACvD,QAAAkZ,EACA,WAAY7U,EAAQA,EAAQ,OAAS,CAAC,EAAE,MACzC,EAAEoM,EAAY,CACb,aAAAwE,EACA,wBAAyB/G,CAC1B,CAAA,CAAC,EAEAyL,GACF5G,EAAqB,KAAK,CACxB,IAAAjU,EACA,QAAS4U,EAAE,QACX,KAAMA,EAAE,KACR,QAAS+F,EACT,MAAOC,EACP,WAAY,IAAI,eACxB,CAAO,CAEP,CAAG,EACM,CAACP,EAAmBpG,CAAoB,CACjD,CACA,SAASqG,GAAYQ,EAAmBC,EAAchT,EAAO,CAC3D,IAAIiT,EAEJ,CAACD,GAEDhT,EAAM,MAAM,KAAOgT,EAAa,MAAM,GAGlCE,EAAgBH,EAAkB/S,EAAM,MAAM,EAAE,IAAM,OAE1D,OAAOiT,GAASC,CAClB,CACA,SAASP,GAAmBK,EAAchT,EAAO,CAC/C,IAAImT,EAAcH,EAAa,MAAM,KACrC,OAEEA,EAAa,WAAahT,EAAM,UAGhCmT,GAAe,MAAQA,EAAY,SAAS,GAAG,GAAKH,EAAa,OAAO,GAAG,IAAMhT,EAAM,OAAO,GAAG,CAErG,CACA,SAAS0S,GAAuBU,EAAaC,EAAK,CAChD,GAAID,EAAY,MAAM,iBAAkB,CACtC,IAAIE,EAAcF,EAAY,MAAM,iBAAiBC,CAAG,EACxD,GAAI,OAAOC,GAAgB,UACzB,OAAOA,CAEV,CACD,OAAOD,EAAI,uBACb,CAMA,eAAeE,GAAoBhX,EAAOG,EAAoBE,EAAU,CACtE,GAAI,CAACL,EAAM,KACT,OAEF,IAAIiX,EAAY,MAAMjX,EAAM,OAI5B,GAAI,CAACA,EAAM,KACT,OAEF,IAAIkX,EAAgB7W,EAASL,EAAM,EAAE,EACrCvB,EAAUyY,EAAe,4BAA4B,EASrD,IAAIC,EAAe,CAAA,EACnB,QAASC,KAAqBH,EAAW,CAEvC,IAAII,EADmBH,EAAcE,CAAiB,IACC,QAGvDA,IAAsB,mBACtBra,GAAQ,CAACsa,EAA6B,UAAaH,EAAc,GAAK,4BAAgCE,EAAoB,iFAAyF,4BAA+BA,EAAoB,qBAAsB,EACxR,CAACC,GAA+B,CAACvX,GAAmB,IAAIsX,CAAiB,IAC3ED,EAAaC,CAAiB,EAAIH,EAAUG,CAAiB,EAEhE,CAGD,OAAO,OAAOF,EAAeC,CAAY,EAIzC,OAAO,OAAOD,EAAe5b,EAAS,CAAA,EAAI6E,EAAmB+W,CAAa,EAAG,CAC3E,KAAM,MACP,CAAA,CAAC,CACJ,CACA,eAAelI,GAAmBsI,EAAMrJ,EAASxK,EAAOxC,EAASZ,EAAUF,EAAoBS,EAAUsM,EAAM,CACzGA,IAAS,SACXA,EAAO,CAAA,GAET,IAAIqK,EACAnV,EACAoV,EACAC,EAAaC,GAAW,CAE1B,IAAIvQ,EACAwQ,EAAe,IAAI,QAAQ,CAACzS,EAAGkC,IAAMD,EAASC,CAAC,EACnD,OAAAoQ,EAAW,IAAMrQ,IACjB8G,EAAQ,OAAO,iBAAiB,QAASuJ,CAAQ,EAC1C,QAAQ,KAAK,CAACE,EAAQ,CAC3B,QAAAzJ,EACA,OAAQxK,EAAM,OACd,QAASyJ,EAAK,cACpB,CAAK,EAAGyK,CAAY,CAAC,CACrB,EACE,GAAI,CACF,IAAID,EAAUjU,EAAM,MAAM6T,CAAI,EAC9B,GAAI7T,EAAM,MAAM,KACd,GAAIiU,EAGFtV,GADa,MAAM,QAAQ,IAAI,CAACqV,EAAWC,CAAO,EAAGV,GAAoBvT,EAAM,MAAOtD,EAAoBE,CAAQ,CAAC,CAAC,GACpG,CAAC,UAGjB,MAAM2W,GAAoBvT,EAAM,MAAOtD,EAAoBE,CAAQ,EACnEqX,EAAUjU,EAAM,MAAM6T,CAAI,EACtBI,EAIFtV,EAAS,MAAMqV,EAAWC,CAAO,UACxBJ,IAAS,SAAU,CAC5B,IAAIhZ,EAAM,IAAI,IAAI2P,EAAQ,GAAG,EACzBrQ,EAAWU,EAAI,SAAWA,EAAI,OAClC,MAAM+L,GAAuB,IAAK,CAChC,OAAQ4D,EAAQ,OAChB,SAAArQ,EACA,QAAS6F,EAAM,MAAM,EACjC,CAAW,CACX,KAGU,OAAO,CACL,KAAM5D,EAAW,KACjB,KAAM,MAClB,UAGgB6X,EAOVtV,EAAS,MAAMqV,EAAWC,CAAO,MAPd,CACnB,IAAIpZ,EAAM,IAAI,IAAI2P,EAAQ,GAAG,EACzBrQ,EAAWU,EAAI,SAAWA,EAAI,OAClC,MAAM+L,GAAuB,IAAK,CAChC,SAAAzM,CACR,CAAO,CACP,CAGIa,EAAU2D,IAAW,OAAW,gBAAkBkV,IAAS,SAAW,YAAc,YAAc,eAAiB,IAAO7T,EAAM,MAAM,GAAK,4CAA8C6T,EAAO,MAAQ,4CAA4C,CACrP,OAAQM,EAAG,CACVL,EAAa1X,EAAW,MACxBuC,EAASwV,CACb,QAAY,CACJJ,GACFvJ,EAAQ,OAAO,oBAAoB,QAASuJ,CAAQ,CAEvD,CACD,GAAIK,GAAWzV,CAAM,EAAG,CACtB,IAAIkG,EAASlG,EAAO,OAEpB,GAAI0G,GAAoB,IAAIR,CAAM,EAAG,CACnC,IAAIzL,EAAWuF,EAAO,QAAQ,IAAI,UAAU,EAG5C,GAFA3D,EAAU5B,EAAU,4EAA4E,EAE5F,CAACsM,GAAmB,KAAKtM,CAAQ,EACnCA,EAAWuQ,GAAY,IAAI,IAAIa,EAAQ,GAAG,EAAGhN,EAAQ,MAAM,EAAGA,EAAQ,QAAQwC,CAAK,EAAI,CAAC,EAAG7C,EAAU,GAAM/D,CAAQ,UAC1G,CAACqQ,EAAK,gBAAiB,CAIhC,IAAI2I,EAAa,IAAI,IAAI5H,EAAQ,GAAG,EAChC3P,EAAMzB,EAAS,WAAW,IAAI,EAAI,IAAI,IAAIgZ,EAAW,SAAWhZ,CAAQ,EAAI,IAAI,IAAIA,CAAQ,EAC5Fib,EAAiBjX,GAAcvC,EAAI,SAAUsC,CAAQ,GAAK,KAC1DtC,EAAI,SAAWuX,EAAW,QAAUiC,IACtCjb,EAAWyB,EAAI,SAAWA,EAAI,OAASA,EAAI,KAE9C,CAKD,GAAI4O,EAAK,gBACP,MAAA9K,EAAO,QAAQ,IAAI,WAAYvF,CAAQ,EACjCuF,EAER,MAAO,CACL,KAAMvC,EAAW,SACjB,OAAAyI,EACA,SAAAzL,EACA,WAAYuF,EAAO,QAAQ,IAAI,oBAAoB,IAAM,IACjE,CACK,CAID,GAAI8K,EAAK,eAEP,KAAM,CACJ,KAAMqK,GAAc1X,EAAW,KAC/B,SAAUuC,CAClB,EAEI,IAAIyE,EACAkR,EAAc3V,EAAO,QAAQ,IAAI,cAAc,EAQnD,OALI2V,GAAe,wBAAwB,KAAKA,CAAW,EACzDlR,EAAO,MAAMzE,EAAO,OAEpByE,EAAO,MAAMzE,EAAO,OAElBmV,IAAe1X,EAAW,MACrB,CACL,KAAM0X,EACN,MAAO,IAAIlP,GAAcC,EAAQlG,EAAO,WAAYyE,CAAI,EACxD,QAASzE,EAAO,OACxB,EAEW,CACL,KAAMvC,EAAW,KACjB,KAAAgH,EACA,WAAYzE,EAAO,OACnB,QAASA,EAAO,OACtB,CACG,CACD,GAAImV,IAAe1X,EAAW,MAC5B,MAAO,CACL,KAAM0X,EACN,MAAOnV,CACb,EAEE,GAAI4V,GAAe5V,CAAM,EAAG,CAC1B,IAAI6V,EAAcC,EAClB,MAAO,CACL,KAAMrY,EAAW,SACjB,aAAcuC,EACd,YAAa6V,EAAe7V,EAAO,OAAS,KAAO,OAAS6V,EAAa,OACzE,UAAWC,EAAgB9V,EAAO,OAAS,KAAO,OAAS8V,EAAc,UAAY,IAAI,QAAQ9V,EAAO,KAAK,OAAO,CAC1H,CACG,CACD,MAAO,CACL,KAAMvC,EAAW,KACjB,KAAMuC,CACV,CACA,CAIA,SAAS8L,GAAwB3O,EAAS1C,EAAUiL,EAAQuF,EAAY,CACtE,IAAI/O,EAAMiB,EAAQ,UAAU2V,GAAkBrY,CAAQ,CAAC,EAAE,WACrDiK,EAAO,CACT,OAAAgB,CACJ,EACE,GAAIuF,GAAcV,GAAiBU,EAAW,UAAU,EAAG,CACzD,GAAI,CACF,WAAA2H,EACA,YAAAmD,CACD,EAAG9K,EAIJvG,EAAK,OAASkO,EAAW,cACrBmD,IAAgB,oBAClBrR,EAAK,QAAU,IAAI,QAAQ,CACzB,eAAgBqR,CACxB,CAAO,EACDrR,EAAK,KAAO,KAAK,UAAUuG,EAAW,IAAI,GACjC8K,IAAgB,aAEzBrR,EAAK,KAAOuG,EAAW,KACd8K,IAAgB,qCAAuC9K,EAAW,SAE3EvG,EAAK,KAAO0O,GAA8BnI,EAAW,QAAQ,EAG7DvG,EAAK,KAAOuG,EAAW,QAE1B,CACD,OAAO,IAAI,QAAQ/O,EAAKwI,CAAI,CAC9B,CACA,SAAS0O,GAA8BD,EAAU,CAC/C,IAAID,EAAe,IAAI,gBACvB,OAAS,CAAC5Z,EAAKgD,CAAK,IAAK6W,EAAS,QAAO,EAEvCD,EAAa,OAAO5Z,EAAK,OAAOgD,GAAU,SAAWA,EAAQA,EAAM,IAAI,EAEzE,OAAO4W,CACT,CACA,SAASG,GAA8BH,EAAc,CACnD,IAAIC,EAAW,IAAI,SACnB,OAAS,CAAC7Z,EAAKgD,CAAK,IAAK4W,EAAa,QAAO,EAC3CC,EAAS,OAAO7Z,EAAKgD,CAAK,EAE5B,OAAO6W,CACT,CACA,SAAS6C,GAAuBnX,EAASyO,EAAea,EAASnC,EAAc7C,EAAiB,CAE9F,IAAIsB,EAAa,CAAA,EACb6B,EAAS,KACT2J,EACAC,EAAa,GACbC,EAAgB,CAAA,EAEpB,OAAAhI,EAAQ,QAAQ,CAACnO,EAAQhG,IAAU,CACjC,IAAImE,EAAKmP,EAActT,CAAK,EAAE,MAAM,GAEpC,GADAqC,EAAU,CAACwQ,GAAiB7M,CAAM,EAAG,qDAAqD,EACtF+M,GAAc/M,CAAM,EAAG,CAGzB,IAAIgN,EAAgBf,GAAoBpN,EAASV,CAAE,EAC/Cb,EAAQ0C,EAAO,MAIfgM,IACF1O,EAAQ,OAAO,OAAO0O,CAAY,EAAE,CAAC,EACrCA,EAAe,QAEjBM,EAASA,GAAU,GAEfA,EAAOU,EAAc,MAAM,EAAE,GAAK,OACpCV,EAAOU,EAAc,MAAM,EAAE,EAAI1P,GAGnCmN,EAAWtM,CAAE,EAAI,OAGZ+X,IACHA,EAAa,GACbD,EAAa5P,GAAqBrG,EAAO,KAAK,EAAIA,EAAO,MAAM,OAAS,KAEtEA,EAAO,UACTmW,EAAchY,CAAE,EAAI6B,EAAO,QAEnC,MACUiN,GAAiBjN,CAAM,GACzBmJ,EAAgB,IAAIhL,EAAI6B,EAAO,YAAY,EAC3CyK,EAAWtM,CAAE,EAAI6B,EAAO,aAAa,MAErCyK,EAAWtM,CAAE,EAAI6B,EAAO,KAItBA,EAAO,YAAc,MAAQA,EAAO,aAAe,KAAO,CAACkW,IAC7DD,EAAajW,EAAO,YAElBA,EAAO,UACTmW,EAAchY,CAAE,EAAI6B,EAAO,QAGnC,CAAG,EAIGgM,IACFM,EAASN,EACTvB,EAAW,OAAO,KAAKuB,CAAY,EAAE,CAAC,CAAC,EAAI,QAEtC,CACL,WAAAvB,EACA,OAAA6B,EACA,WAAY2J,GAAc,IAC1B,cAAAE,CACJ,CACA,CACA,SAAS1H,GAAkBjU,EAAOqE,EAASyO,EAAea,EAASnC,EAAcuB,EAAsBc,EAAgBlF,EAAiB,CACtI,GAAI,CACF,WAAAsB,EACA,OAAA6B,CACJ,EAAM0J,GAAuBnX,EAASyO,EAAea,EAASnC,EAAc7C,CAAe,EAEzF,QAASnP,EAAQ,EAAGA,EAAQuT,EAAqB,OAAQvT,IAAS,CAChE,GAAI,CACF,IAAAV,EACA,MAAA+H,EACA,WAAAqP,CACN,EAAQnD,EAAqBvT,CAAK,EAC9BqC,EAAUgS,IAAmB,QAAaA,EAAerU,CAAK,IAAM,OAAW,2CAA2C,EAC1H,IAAIgG,EAASqO,EAAerU,CAAK,EAEjC,GAAI,EAAA0W,GAAcA,EAAW,OAAO,SAG7B,GAAI3D,GAAc/M,CAAM,EAAG,CAChC,IAAIgN,EAAgBf,GAAoBzR,EAAM,QAAS6G,GAAS,KAAO,OAASA,EAAM,MAAM,EAAE,EACxFiL,GAAUA,EAAOU,EAAc,MAAM,EAAE,IAC3CV,EAASpT,EAAS,CAAE,EAAEoT,EAAQ,CAC5B,CAACU,EAAc,MAAM,EAAE,EAAGhN,EAAO,KAC3C,CAAS,GAEHxF,EAAM,SAAS,OAAOlB,CAAG,CAC/B,SAAeuT,GAAiB7M,CAAM,EAGhC3D,EAAU,GAAO,yCAAyC,UACjD4Q,GAAiBjN,CAAM,EAGhC3D,EAAU,GAAO,iCAAiC,MAC7C,CACL,IAAIqT,EAAcC,GAAe3P,EAAO,IAAI,EAC5CxF,EAAM,SAAS,IAAIlB,EAAKoW,CAAW,CACpC,CACF,CACD,MAAO,CACL,WAAAjF,EACA,OAAA6B,CACJ,CACA,CACA,SAAS5B,GAAgBD,EAAY2L,EAAevX,EAASyN,EAAQ,CACnE,IAAI+J,EAAmBnd,EAAS,CAAE,EAAEkd,CAAa,EACjD,QAAS/U,KAASxC,EAAS,CACzB,IAAIV,EAAKkD,EAAM,MAAM,GAUrB,GATI+U,EAAc,eAAejY,CAAE,EAC7BiY,EAAcjY,CAAE,IAAM,SACxBkY,EAAiBlY,CAAE,EAAIiY,EAAcjY,CAAE,GAEhCsM,EAAWtM,CAAE,IAAM,QAAakD,EAAM,MAAM,SAGrDgV,EAAiBlY,CAAE,EAAIsM,EAAWtM,CAAE,GAElCmO,GAAUA,EAAO,eAAenO,CAAE,EAEpC,KAEH,CACD,OAAOkY,CACT,CAIA,SAASpK,GAAoBpN,EAAS4O,EAAS,CAE7C,OADsBA,EAAU5O,EAAQ,MAAM,EAAGA,EAAQ,UAAUuJ,GAAKA,EAAE,MAAM,KAAOqF,CAAO,EAAI,CAAC,EAAI,CAAC,GAAG5O,CAAO,GAC3F,UAAU,KAAKuJ,GAAKA,EAAE,MAAM,mBAAqB,EAAI,GAAKvJ,EAAQ,CAAC,CAC5F,CACA,SAASqJ,GAAuBpK,EAAQ,CAEtC,IAAIF,EAAQE,EAAO,KAAK,GAAK,EAAE,OAAS,CAAC,EAAE,MAAQ,EAAE,OAAS,GAAG,GAAK,CACpE,GAAI,sBACR,EACE,MAAO,CACL,QAAS,CAAC,CACR,OAAQ,CAAE,EACV,SAAU,GACV,aAAc,GACd,MAAAF,CACN,CAAK,EACD,MAAAA,CACJ,CACA,CACA,SAASqK,GAAuB/B,EAAQoQ,EAAQ,CAC9C,GAAI,CACF,SAAA9a,EACA,QAAAiS,EACA,OAAA8I,EACA,KAAArB,CACD,EAAGoB,IAAW,OAAS,CAAA,EAAKA,EACzBnQ,EAAa,uBACbqQ,EAAe,kCACnB,OAAItQ,IAAW,KACbC,EAAa,cACToQ,GAAU/a,GAAYiS,EACxB+I,EAAe,cAAgBD,EAAS,gBAAmB/a,EAAW,UAAa,yCAA4CiS,EAAU,OAAU,4CAC1IyH,IAAS,eAClBsB,EAAe,sCACNtB,IAAS,iBAClBsB,EAAe,qCAERtQ,IAAW,KACpBC,EAAa,YACbqQ,EAAe,UAAa/I,EAAU,yBAA6BjS,EAAW,KACrE0K,IAAW,KACpBC,EAAa,YACbqQ,EAAe,yBAA4Bhb,EAAW,KAC7C0K,IAAW,MACpBC,EAAa,qBACToQ,GAAU/a,GAAYiS,EACxB+I,EAAe,cAAgBD,EAAO,YAAa,EAAG,gBAAmB/a,EAAW,UAAa,0CAA6CiS,EAAU,OAAU,4CACzJ8I,IACTC,EAAe,2BAA8BD,EAAO,YAAW,EAAK,MAGjE,IAAItQ,GAAcC,GAAU,IAAKC,EAAY,IAAI,MAAMqQ,CAAY,EAAG,EAAI,CACnF,CAEA,SAASjI,GAAaJ,EAAS,CAC7B,QAAS/U,EAAI+U,EAAQ,OAAS,EAAG/U,GAAK,EAAGA,IAAK,CAC5C,IAAI4G,EAASmO,EAAQ/U,CAAC,EACtB,GAAIyT,GAAiB7M,CAAM,EACzB,MAAO,CACL,OAAAA,EACA,IAAK5G,CACb,CAEG,CACH,CACA,SAAS0Z,GAAkBhY,EAAM,CAC/B,IAAI+B,EAAa,OAAO/B,GAAS,SAAWC,GAAUD,CAAI,EAAIA,EAC9D,OAAOD,GAAW3B,EAAS,CAAE,EAAE2D,EAAY,CACzC,KAAM,EACP,CAAA,CAAC,CACJ,CACA,SAAS+O,GAAiB1L,EAAGC,EAAG,CAC9B,OAAID,EAAE,WAAaC,EAAE,UAAYD,EAAE,SAAWC,EAAE,OACvC,GAELD,EAAE,OAAS,GAENC,EAAE,OAAS,GACTD,EAAE,OAASC,EAAE,KAEf,GACEA,EAAE,OAAS,EAOxB,CACA,SAAS8M,GAAiBjN,EAAQ,CAChC,OAAOA,EAAO,OAASvC,EAAW,QACpC,CACA,SAASsP,GAAc/M,EAAQ,CAC7B,OAAOA,EAAO,OAASvC,EAAW,KACpC,CACA,SAASoP,GAAiB7M,EAAQ,CAChC,OAAQA,GAAUA,EAAO,QAAUvC,EAAW,QAChD,CACA,SAASmY,GAAetZ,EAAO,CAC7B,IAAIma,EAAWna,EACf,OAAOma,GAAY,OAAOA,GAAa,UAAY,OAAOA,EAAS,MAAS,UAAY,OAAOA,EAAS,WAAc,YAAc,OAAOA,EAAS,QAAW,YAAc,OAAOA,EAAS,aAAgB,UAC/M,CACA,SAAShB,GAAWnZ,EAAO,CACzB,OAAOA,GAAS,MAAQ,OAAOA,EAAM,QAAW,UAAY,OAAOA,EAAM,YAAe,UAAY,OAAOA,EAAM,SAAY,UAAY,OAAOA,EAAM,KAAS,GACjK,CAYA,SAASmW,GAAc8D,EAAQ,CAC7B,OAAO9P,GAAoB,IAAI8P,EAAO,YAAa,CAAA,CACrD,CACA,SAAShM,GAAiBgM,EAAQ,CAChC,OAAOhQ,GAAqB,IAAIgQ,EAAO,YAAa,CAAA,CACtD,CACA,eAAe9F,GAAuBF,EAAgBjD,EAAea,EAASuI,EAASlE,EAAW4B,EAAmB,CACnH,QAASpa,EAAQ,EAAGA,EAAQmU,EAAQ,OAAQnU,IAAS,CACnD,IAAIgG,EAASmO,EAAQnU,CAAK,EACtBqH,EAAQiM,EAActT,CAAK,EAI/B,GAAI,CAACqH,EACH,SAEF,IAAIgT,EAAe9D,EAAe,KAAKnI,GAAKA,EAAE,MAAM,KAAO/G,EAAM,MAAM,EAAE,EACrEsV,EAAuBtC,GAAgB,MAAQ,CAACL,GAAmBK,EAAchT,CAAK,IAAM+S,GAAqBA,EAAkB/S,EAAM,MAAM,EAAE,KAAO,OAC5J,GAAI4L,GAAiBjN,CAAM,IAAMwS,GAAamE,GAAuB,CAInE,IAAIjR,EAASgR,EAAQ1c,CAAK,EAC1BqC,EAAUqJ,EAAQ,kEAAkE,EACpF,MAAMuK,GAAoBjQ,EAAQ0F,EAAQ8M,CAAS,EAAE,KAAKxS,GAAU,CAC9DA,IACFmO,EAAQnU,CAAK,EAAIgG,GAAUmO,EAAQnU,CAAK,EAElD,CAAO,CACF,CACF,CACH,CACA,eAAeiW,GAAoBjQ,EAAQ0F,EAAQkR,EAAQ,CAKzD,GAJIA,IAAW,SACbA,EAAS,IAEG,OAAM5W,EAAO,aAAa,YAAY0F,CAAM,EAI1D,IAAIkR,EACF,GAAI,CACF,MAAO,CACL,KAAMnZ,EAAW,KACjB,KAAMuC,EAAO,aAAa,aAClC,CACK,OAAQwV,EAAG,CAEV,MAAO,CACL,KAAM/X,EAAW,MACjB,MAAO+X,CACf,CACK,CAEH,MAAO,CACL,KAAM/X,EAAW,KACjB,KAAMuC,EAAO,aAAa,IAC9B,EACA,CACA,SAASsS,GAAmB7W,EAAQ,CAClC,OAAO,IAAI,gBAAgBA,CAAM,EAAE,OAAO,OAAO,EAAE,KAAK+J,GAAKA,IAAM,EAAE,CACvE,CAGA,SAASqM,GAAsBxQ,EAAOoJ,EAAY,CAChD,GAAI,CACF,MAAA7M,EACA,SAAApC,EACA,OAAAkG,CACD,EAAGL,EACJ,MAAO,CACL,GAAIzD,EAAM,GACV,SAAApC,EACA,OAAAkG,EACA,KAAM+I,EAAW7M,EAAM,EAAE,EACzB,OAAQA,EAAM,MAClB,CACA,CACA,SAAS+O,GAAe9N,EAASpE,EAAU,CACzC,IAAIgB,EAAS,OAAOhB,GAAa,SAAWM,GAAUN,CAAQ,EAAE,OAASA,EAAS,OAClF,GAAIoE,EAAQA,EAAQ,OAAS,CAAC,EAAE,MAAM,OAASyT,GAAmB7W,GAAU,EAAE,EAE5E,OAAOoD,EAAQA,EAAQ,OAAS,CAAC,EAInC,IAAIgY,EAAclT,GAA2B9E,CAAO,EACpD,OAAOgY,EAAYA,EAAY,OAAS,CAAC,CAC3C,CACA,SAASxJ,GAA4Bb,EAAY,CAC/C,GAAI,CACF,WAAAoG,EACA,WAAAC,EACA,YAAAkD,EACA,KAAAhD,EACA,SAAAI,EACA,KAAA3O,CACD,EAAGgI,EACJ,GAAI,GAACoG,GAAc,CAACC,GAAc,CAACkD,GAGnC,IAAIhD,GAAQ,KACV,MAAO,CACL,WAAAH,EACA,WAAAC,EACA,YAAAkD,EACA,SAAU,OACV,KAAM,OACN,KAAAhD,CACN,EACS,GAAII,GAAY,KACrB,MAAO,CACL,WAAAP,EACA,WAAAC,EACA,YAAAkD,EACA,SAAA5C,EACA,KAAM,OACN,KAAM,MACZ,EACS,GAAI3O,IAAS,OAClB,MAAO,CACL,WAAAoO,EACA,WAAAC,EACA,YAAAkD,EACA,SAAU,OACV,KAAAvR,EACA,KAAM,MACZ,EAEA,CACA,SAAS4H,GAAqB3R,EAAUwQ,EAAY,CAClD,OAAIA,EACe,CACf,MAAO,UACP,SAAAxQ,EACA,WAAYwQ,EAAW,WACvB,WAAYA,EAAW,WACvB,YAAaA,EAAW,YACxB,SAAUA,EAAW,SACrB,KAAMA,EAAW,KACjB,KAAMA,EAAW,IACvB,EAGqB,CACf,MAAO,UACP,SAAAxQ,EACA,WAAY,OACZ,WAAY,OACZ,YAAa,OACb,SAAU,OACV,KAAM,OACN,KAAM,MACZ,CAGA,CACA,SAASgS,GAAwBhS,EAAUwQ,EAAY,CAWrD,MAViB,CACf,MAAO,aACP,SAAAxQ,EACA,WAAYwQ,EAAW,WACvB,WAAYA,EAAW,WACvB,YAAaA,EAAW,YACxB,SAAUA,EAAW,SACrB,KAAMA,EAAW,KACjB,KAAMA,EAAW,IACrB,CAEA,CACA,SAAS8C,GAAkB9C,EAAYxG,EAAM,CAC3C,OAAIwG,EACY,CACZ,MAAO,UACP,WAAYA,EAAW,WACvB,WAAYA,EAAW,WACvB,YAAaA,EAAW,YACxB,SAAUA,EAAW,SACrB,KAAMA,EAAW,KACjB,KAAMA,EAAW,KACjB,KAAAxG,EACA,4BAA6B,EACnC,EAGkB,CACZ,MAAO,UACP,WAAY,OACZ,WAAY,OACZ,YAAa,OACb,SAAU,OACV,KAAM,OACN,KAAM,OACN,KAAAA,EACA,4BAA6B,EACnC,CAGA,CACA,SAAS4K,GAAqBpE,EAAYmE,EAAiB,CAYzD,MAXc,CACZ,MAAO,aACP,WAAYnE,EAAW,WACvB,WAAYA,EAAW,WACvB,YAAaA,EAAW,YACxB,SAAUA,EAAW,SACrB,KAAMA,EAAW,KACjB,KAAMA,EAAW,KACjB,KAAMmE,EAAkBA,EAAgB,KAAO,OAC/C,4BAA6B,EACjC,CAEA,CACA,SAASO,GAAelL,EAAM,CAY5B,MAXc,CACZ,MAAO,OACP,WAAY,OACZ,WAAY,OACZ,YAAa,OACb,SAAU,OACV,KAAM,OACN,KAAM,OACN,KAAAA,EACA,4BAA6B,EACjC,CAEA,CCp6HA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAcA,SAASvL,IAAW,CAClBA,OAAAA,GAAW,OAAO,OAAS,OAAO,OAAO,KAAK,EAAI,SAAUC,EAAQ,CAClE,QAASC,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACrC,IAAAC,EAAS,UAAUD,CAAC,EACxB,QAASE,KAAOD,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQC,CAAG,IAC3CH,EAAAG,CAAG,EAAID,EAAOC,CAAG,EAG9B,CACO,OAAAH,CAAA,EAEFD,GAAS,MAAM,KAAM,SAAS,CACvC,CAIA,MAAM4d,GAAuCC,EAAAA,cAAc,IAAI,EAIzDC,GAA4CD,EAAAA,cAAc,IAAI,EAI9DE,GAAkCF,EAAAA,cAAc,IAAI,EAepDG,GAAuCH,EAAAA,cAAc,IAAI,EAIzDI,GAAqCJ,EAAAA,cAAc,IAAI,EAIvDK,kBAAgD,CACpD,OAAQ,KACR,QAAS,CAAC,EACV,YAAa,EACf,CAAC,EAIKC,GAAuCN,EAAAA,cAAc,IAAI,EAW/D,SAASO,GAAQ/c,EAAI2V,EAAO,CACtB,GAAA,CACF,SAAAiC,CACE,EAAAjC,IAAU,OAAS,CAAA,EAAKA,EAC3BqH,GAAA,GAEuEC,EAAiB,EAAK,EAC1F,GAAA,CACF,SAAAhZ,EACA,UAAAiZ,CAAA,EACEC,EAAAA,WAAiBR,EAAiB,EAClC,CACF,KAAAxb,EACA,SAAAF,EACA,OAAAC,CAAA,EACEkc,GAAgBpd,EAAI,CACtB,SAAA4X,CAAA,CACD,EACGyF,EAAiBpc,EAMrB,OAAIgD,IAAa,MACfoZ,EAAiBpc,IAAa,IAAMgD,EAAWY,GAAU,CAACZ,EAAUhD,CAAQ,CAAC,GAExEic,EAAU,WAAW,CAC1B,SAAUG,EACV,OAAAnc,EACA,KAAAC,CAAA,CACD,CACH,CAOA,SAAS6b,IAAqB,CACrB,OAAAG,EAAiB,WAAAP,EAAe,GAAK,IAC9C,CAYA,SAASU,IAAc,CACpB,OAAAN,GAAA,GAE2EC,EAAiB,EAAK,EAC3FE,EAAiB,WAAAP,EAAe,EAAE,QAC3C,CAQA,SAASW,IAAoB,CACpB,OAAAJ,EAAiB,WAAAP,EAAe,EAAE,cAC3C,CASA,SAASY,GAAS7V,EAAS,CACxBqV,GAAA,GAEwEC,EAAiB,EAAK,EAC3F,GAAA,CACF,SAAAhc,GACEqc,GAAY,EACT,OAAAG,EAAc,QAAA,IAAM1W,GAAUY,EAAS1G,CAAQ,EAAG,CAACA,EAAU0G,CAAO,CAAC,CAC9E,CASA,SAAS+V,GAA0BC,EAAI,CACtBR,EAAAA,WAAiBR,EAAiB,EAAE,QAKjDiB,kBAAsBD,CAAE,CAE5B,CAQA,SAASE,IAAc,CACjB,GAAA,CACF,YAAAC,CAAA,EACEX,EAAAA,WAAiBN,CAAY,EAG1B,OAAAiB,EAAcC,KAAsBC,IAC7C,CACA,SAASA,IAAsB,CAC5BhB,GAAA,GAE2EC,EAAiB,EAAK,EAC9F,IAAAgB,EAAoBd,aAAiBZ,EAAiB,EACtD,CACF,SAAAtY,EACA,UAAAiZ,CAAA,EACEC,EAAAA,WAAiBR,EAAiB,EAClC,CACF,QAAArY,CAAA,EACE6Y,EAAAA,WAAiBN,CAAY,EAC7B,CACF,SAAUrT,GACR8T,GAAY,EACZY,EAAqB,KAAK,UAAUC,GAAkC7Z,CAAO,EAAE,IAAIwC,GAASA,EAAM,YAAY,CAAC,EAC/GsX,EAAYC,SAAa,EAAK,EAClC,OAAAX,GAA0B,IAAM,CAC9BU,EAAU,QAAU,EAAA,CACrB,EACcE,EAAAA,YAAkB,SAAUte,EAAIb,EAAS,CAQtD,GAPIA,IAAY,SACdA,EAAU,CAAA,GAMR,CAACif,EAAU,QAAS,OACpB,GAAA,OAAOpe,GAAO,SAAU,CAC1Bkd,EAAU,GAAGld,CAAE,EACf,MACF,CACI,IAAAO,EAAO8I,GAAUrJ,EAAI,KAAK,MAAMke,CAAkB,EAAG1U,EAAkBrK,EAAQ,WAAa,MAAM,EAQlG8e,GAAqB,MAAQha,IAAa,MACvC1D,EAAA,SAAWA,EAAK,WAAa,IAAM0D,EAAWY,GAAU,CAACZ,EAAU1D,EAAK,QAAQ,CAAC,IAErFpB,EAAQ,QAAU+d,EAAU,QAAUA,EAAU,MAAM3c,EAAMpB,EAAQ,MAAOA,CAAO,CAAA,EACpF,CAAC8E,EAAUiZ,EAAWgB,EAAoB1U,EAAkByU,CAAiB,CAAC,CAEnF,CACA,MAAMM,GAAmC/B,EAAAA,cAAc,IAAI,EAO3D,SAASgC,IAAmB,CACnB,OAAArB,EAAAA,WAAiBoB,EAAa,CACvC,CAQA,SAASE,GAAUC,EAAS,CAC1B,IAAIC,EAASxB,EAAAA,WAAiBN,CAAY,EAAE,OAC5C,OAAI8B,GACkBC,EAAoB,cAAAL,GAAc,SAAU,CAC9D,MAAOG,GACNC,CAAM,CAGb,CAQA,SAASE,IAAY,CACf,GAAA,CACF,QAAAva,CAAA,EACE6Y,EAAAA,WAAiBN,CAAY,EAC7BiC,EAAaxa,EAAQA,EAAQ,OAAS,CAAC,EACpC,OAAAwa,EAAaA,EAAW,OAAS,EAC1C,CAOA,SAAS1B,GAAgBpd,EAAI+e,EAAQ,CAC/B,GAAA,CACF,SAAAnH,CACE,EAAAmH,IAAW,OAAS,CAAA,EAAKA,EACzB,CACF,QAAAza,CAAA,EACE6Y,EAAAA,WAAiBN,CAAY,EAC7B,CACF,SAAUrT,GACR8T,GAAY,EACZY,EAAqB,KAAK,UAAUC,GAAkC7Z,CAAO,EAAE,IAAIwC,GAASA,EAAM,YAAY,CAAC,EACnH,OAAO2W,EAAAA,QAAc,IAAMpU,GAAUrJ,EAAI,KAAK,MAAMke,CAAkB,EAAG1U,EAAkBoO,IAAa,MAAM,EAAG,CAAC5X,EAAIke,EAAoB1U,EAAkBoO,CAAQ,CAAC,CACvK,CAUA,SAASoH,GAAUzb,EAAQS,EAAa,CAC/B,OAAAib,GAAc1b,EAAQS,CAAW,CAC1C,CAGA,SAASib,GAAc1b,EAAQS,EAAakb,EAAiB,CAC1DlC,GAAA,GAEyEC,EAAiB,EAAK,EAC5F,GAAA,CACF,UAAAC,CAAA,EACEC,EAAAA,WAAiBR,EAAiB,EAClC,CACF,QAASwC,CAAA,EACPhC,EAAAA,WAAiBN,CAAY,EAC7BiC,EAAaK,EAAcA,EAAc,OAAS,CAAC,EACnDC,EAAeN,EAAaA,EAAW,OAAS,CAAA,EAC/BA,GAAaA,EAAW,SACzC,IAAAO,EAAqBP,EAAaA,EAAW,aAAe,IAC9CA,GAAcA,EAAW,MAyB3C,IAAIQ,EAAsBhC,KACtBpd,EACJ,GAAI8D,EAAa,CACX,IAAAub,EACJ,IAAIC,EAAoB,OAAOxb,GAAgB,SAAWxD,GAAUwD,CAAW,EAAIA,EACjFqb,IAAuB,MAASE,EAAwBC,EAAkB,WAAa,MAAgBD,EAAsB,WAAWF,CAAkB,GAAsbpC,EAAiB,EAAK,EAC7lB/c,EAAAsf,CAAA,MAEAtf,EAAAof,EAET,IAAAre,EAAWf,EAAS,UAAY,IAChC2G,EAAoBwY,IAAuB,IAAMpe,EAAWA,EAAS,MAAMoe,EAAmB,MAAM,GAAK,IACzG/a,EAAUP,GAAYR,EAAQ,CAChC,SAAUsD,CAAA,CACX,EAKG4Y,EAAkBC,GAAepb,GAAWA,EAAQ,OAAa,OAAO,OAAO,CAAA,EAAIwC,EAAO,CAC5F,OAAQ,OAAO,OAAO,CAAI,EAAAsY,EAActY,EAAM,MAAM,EACpD,SAAUjC,GAAU,CAACwa,EAErBnC,EAAU,eAAiBA,EAAU,eAAepW,EAAM,QAAQ,EAAE,SAAWA,EAAM,QAAA,CAAS,EAC9F,aAAcA,EAAM,eAAiB,IAAMuY,EAAqBxa,GAAU,CAACwa,EAE3EnC,EAAU,eAAiBA,EAAU,eAAepW,EAAM,YAAY,EAAE,SAAWA,EAAM,YAAA,CAAa,CAAA,CACvG,CAAC,EAAGqY,EAAeD,CAAe,EAKnC,OAAIlb,GAAeyb,EACGb,EAAoB,cAAAhC,GAAgB,SAAU,CAChE,MAAO,CACL,SAAUje,GAAS,CACjB,SAAU,IACV,OAAQ,GACR,KAAM,GACN,MAAO,KACP,IAAK,WACJuB,CAAQ,EACX,eAAgBlB,EAAO,GACzB,GACCygB,CAAe,EAEbA,CACT,CACA,SAASE,IAAwB,CAC/B,IAAI5c,EAAQ6c,KACR5d,EAAU8J,GAAqB/I,CAAK,EAAIA,EAAM,OAAS,IAAMA,EAAM,WAAaA,aAAiB,MAAQA,EAAM,QAAU,KAAK,UAAUA,CAAK,EAC7I8c,EAAQ9c,aAAiB,MAAQA,EAAM,MAAQ,KAE/C+c,EAAY,CACd,QAAS,SACT,gBAHc,wBAGG,EAenB,OAA0BlB,EAAA,cAAcmB,WAAgB,KAAmBnB,EAAoB,cAAA,KAAM,KAAM,+BAA+B,EAAgBA,gBAAoB,KAAM,CAClL,MAAO,CACL,UAAW,QACb,GACC5c,CAAO,EAAG6d,EAAqBjB,EAAAA,cAAoB,MAAO,CAC3D,MAAOkB,CACN,EAAAD,CAAK,EAAI,KAfE,IAeW,CAC3B,CACA,MAAMG,GAAmCpB,EAAoB,cAAAe,GAAuB,IAAI,EACxF,MAAMM,WAA4BC,EAAAA,SAAgB,CAChD,YAAYC,EAAO,CACjB,MAAMA,CAAK,EACX,KAAK,MAAQ,CACX,SAAUA,EAAM,SAChB,aAAcA,EAAM,aACpB,MAAOA,EAAM,KAAA,CAEjB,CACA,OAAO,yBAAyBpd,EAAO,CAC9B,MAAA,CACL,MAAAA,CAAA,CAEJ,CACA,OAAO,yBAAyBod,EAAOlgB,EAAO,CASxC,OAAAA,EAAM,WAAakgB,EAAM,UAAYlgB,EAAM,eAAiB,QAAUkgB,EAAM,eAAiB,OACxF,CACL,MAAOA,EAAM,MACb,SAAUA,EAAM,SAChB,aAAcA,EAAM,YAAA,EAQjB,CACL,MAAOA,EAAM,OAASlgB,EAAM,MAC5B,SAAUA,EAAM,SAChB,aAAckgB,EAAM,cAAgBlgB,EAAM,YAAA,CAE9C,CACA,kBAAkB8C,EAAOqd,EAAW,CAC1B,QAAA,MAAM,wDAAyDrd,EAAOqd,CAAS,CACzF,CACA,QAAS,CACP,OAAO,KAAK,MAAM,MAA2BxB,EAAAA,cAAc/B,EAAa,SAAU,CAChF,MAAO,KAAK,MAAM,YAAA,EACJ+B,EAAoB,cAAA9B,GAAkB,SAAU,CAC9D,MAAO,KAAK,MAAM,MAClB,SAAU,KAAK,MAAM,SACtB,CAAA,CAAC,EAAI,KAAK,MAAM,QACnB,CACF,CACA,SAASuD,GAAche,EAAM,CACvB,GAAA,CACF,aAAAie,EACA,MAAAxZ,EACA,SAAAyZ,CACE,EAAAle,EACA4b,EAAoBd,aAAiBZ,EAAiB,EAItD,OAAA0B,GAAqBA,EAAkB,QAAUA,EAAkB,gBAAkBnX,EAAM,MAAM,cAAgBA,EAAM,MAAM,iBAC7GmX,EAAA,cAAc,2BAA6BnX,EAAM,MAAM,IAEvD8X,EAAoB,cAAA/B,EAAa,SAAU,CAC7D,MAAOyD,GACNC,CAAQ,CACb,CACA,SAASb,GAAepb,EAAS6a,EAAeD,EAAiB,CAC3D,IAAAsB,EAOJ,GANIrB,IAAkB,SACpBA,EAAgB,CAAA,GAEdD,IAAoB,SACJA,EAAA,MAEhB5a,GAAW,KAAM,CACf,IAAAmc,EACJ,IAAKA,EAAmBvB,IAAoB,MAAQuB,EAAiB,OAGnEnc,EAAU4a,EAAgB,YAEnB,QAAA,IAEX,CACA,IAAIO,EAAkBnb,EAGlByN,GAAUyO,EAAoBtB,IAAoB,KAAO,OAASsB,EAAkB,OACxF,GAAIzO,GAAU,KAAM,CAClB,IAAI2O,EAAajB,EAAgB,UAAU5R,GAAKA,EAAE,MAAM,KAAOkE,GAAU,KAAO,OAASA,EAAOlE,EAAE,MAAM,EAAE,EAAE,EAC1G6S,GAAc,GAAoKzD,EAAiB,EAAK,EACxLwC,EAAAA,EAAgB,MAAM,EAAG,KAAK,IAAIA,EAAgB,OAAQiB,EAAa,CAAC,CAAC,CAC7F,CACA,OAAOjB,EAAgB,YAAY,CAACd,EAAQ7X,EAAOrH,IAAU,CACvD,IAAAsD,EAAQ+D,EAAM,MAAM,GAAKiL,GAAU,KAAO,OAASA,EAAOjL,EAAM,MAAM,EAAE,EAAI,KAE5E6Z,EAAe,KACfzB,IACayB,EAAA7Z,EAAM,MAAM,cAAgBkZ,IAEzC1b,IAAAA,EAAU6a,EAAc,OAAOM,EAAgB,MAAM,EAAGhgB,EAAQ,CAAC,CAAC,EAClEmhB,EAAc,IAAM,CAClB,IAAAL,EACJ,OAAIxd,EACSwd,EAAAI,EACF7Z,EAAM,MAAM,UAOrByZ,EAA8B3B,EAAA,cAAc9X,EAAM,MAAM,UAAW,IAAI,EAC9DA,EAAM,MAAM,QACrByZ,EAAWzZ,EAAM,MAAM,QAEZyZ,EAAA5B,EAEOC,EAAAA,cAAoByB,GAAe,CACrD,MAAAvZ,EACA,aAAc,CACZ,OAAA6X,EACA,QAAAra,EACA,YAAa4a,GAAmB,IAClC,EACA,SAAAqB,CAAA,CACD,CAAA,EAKI,OAAArB,IAAoBpY,EAAM,MAAM,eAAiBA,EAAM,MAAM,cAAgBrH,IAAU,GAAwBmf,EAAAA,cAAcqB,GAAqB,CACvJ,SAAUf,EAAgB,SAC1B,aAAcA,EAAgB,aAC9B,UAAWyB,EACX,MAAA5d,EACA,SAAU6d,EAAY,EACtB,aAAc,CACZ,OAAQ,KACR,QAAAtc,EACA,YAAa,EACf,CAAA,CACD,EAAIsc,EAAY,GAChB,IAAI,CACT,CACA,IAAIC,IACH,SAAUA,EAAgB,CACzBA,EAAe,WAAgB,aAC/BA,EAAe,eAAoB,iBACnCA,EAAe,kBAAuB,aACxC,GAAGA,KAAmBA,GAAiB,CAAG,EAAA,EAC1C,IAAIC,GACH,SAAUA,EAAqB,CAC9BA,EAAoB,WAAgB,aACpCA,EAAoB,cAAmB,gBACvCA,EAAoB,cAAmB,gBACvCA,EAAoB,cAAmB,gBACvCA,EAAoB,cAAmB,gBACvCA,EAAoB,mBAAwB,qBAC5CA,EAAoB,WAAgB,aACpCA,EAAoB,eAAoB,iBACxCA,EAAoB,kBAAuB,cAC3CA,EAAoB,WAAgB,YACtC,GAAGA,IAAwBA,EAAsB,CAAG,EAAA,EAIpD,SAASC,GAAqBC,EAAU,CAClC,IAAAC,EAAM9D,aAAiBZ,EAAiB,EAC3C,OAAA0E,GAA6GhE,EAAiB,EAAK,EAC7HgE,CACT,CACA,SAASC,GAAmBF,EAAU,CAChC,IAAA/gB,EAAQkd,aAAiBV,EAAsB,EAClD,OAAAxc,GAA+Ggd,EAAiB,EAAK,EAC/Hhd,CACT,CACA,SAASkhB,GAAgBH,EAAU,CAC7B,IAAA3d,EAAQ8Z,aAAiBN,CAAY,EACxC,OAAAxZ,GAA+G4Z,EAAiB,EAAK,EAC/H5Z,CACT,CAGA,SAAS+d,GAAkBJ,EAAU,CAC/B,IAAA3d,EAAQ8d,GAAwB,EAChCE,EAAYhe,EAAM,QAAQA,EAAM,QAAQ,OAAS,CAAC,EACrD,OAAAge,EAAU,MAAM,IAA8IpE,EAAiB,EAAK,EAC9KoE,EAAU,MAAM,EACzB,CAKA,SAASC,IAAa,CACb,OAAAF,GAAkBN,EAAoB,UAAU,CACzD,CAMA,SAASS,IAAgB,CAEvB,OADYL,GAAmBJ,EAAoB,aAAa,EACnD,UACf,CAMA,SAASU,IAAiB,CACpB,IAAAvD,EAAoB8C,GAAqBF,GAAe,cAAc,EACtE5gB,EAAQihB,GAAmBJ,EAAoB,cAAc,EAC1D,MAAA,CACL,WAAY7C,EAAkB,OAAO,WACrC,MAAOhe,EAAM,YAAA,CAEjB,CAMA,SAASwhB,IAAa,CAChB,GAAA,CACF,QAAAnd,EACA,WAAA4L,CAAA,EACEgR,GAAmBJ,EAAoB,UAAU,EACrD,OAAOrD,EAAM,QAAQ,IAAMnZ,EAAQ,IAAawC,GAAA,CAC1C,GAAA,CACF,SAAA7F,EACA,OAAAkG,CACE,EAAAL,EAIG,MAAA,CACL,GAAIA,EAAM,MAAM,GAChB,SAAA7F,EACA,OAAAkG,EACA,KAAM+I,EAAWpJ,EAAM,MAAM,EAAE,EAC/B,OAAQA,EAAM,MAAM,MAAA,CAEvB,CAAA,EAAG,CAACxC,EAAS4L,CAAU,CAAC,CAC3B,CAKA,SAASwR,IAAgB,CACnB,IAAAzhB,EAAQihB,GAAmBJ,EAAoB,aAAa,EAC5D5N,EAAUkO,GAAkBN,EAAoB,aAAa,EACjE,GAAI7gB,EAAM,QAAUA,EAAM,OAAOiT,CAAO,GAAK,KAAM,CACzC,QAAA,MAAM,2DAA6DA,EAAU,GAAG,EACjF,MACT,CACO,OAAAjT,EAAM,WAAWiT,CAAO,CACjC,CAKA,SAASyO,GAAmBzO,EAAS,CAE5B,OADKgO,GAAmBJ,EAAoB,kBAAkB,EACxD,WAAW5N,CAAO,CACjC,CAKA,SAAS0O,IAAgB,CACnB,IAAA3hB,EAAQihB,GAAmBJ,EAAoB,aAAa,EAE/D,OADW3D,aAAiBN,CAAY,GACsFI,EAAiB,EAAK,EAC9I,OAAO,QAAQhd,GAAS,KAAO,OAASA,EAAM,aAAe,EAAE,EAAE,CAAC,CAC3E,CAOA,SAAS2f,IAAgB,CACnB,IAAAiC,EACA,IAAA9e,EAAQoa,aAAiBL,EAAiB,EAC1C7c,EAAQihB,GAAmBJ,EAAoB,aAAa,EAC5D5N,EAAUkO,GAAkBN,EAAoB,aAAa,EAIjE,OAAI/d,KAKI8e,EAAgB5hB,EAAM,SAAW,KAAO,OAAS4hB,EAAc3O,CAAO,EAChF,CAKA,SAAS4O,IAAgB,CACnB,IAAA/f,EAAQob,aAAiBT,EAAY,EAClC,OAAA3a,GAAS,KAAO,OAASA,EAAM,KACxC,CAKA,SAASggB,IAAgB,CACnB,IAAAhgB,EAAQob,aAAiBT,EAAY,EAClC,OAAA3a,GAAS,KAAO,OAASA,EAAM,MACxC,CACA,IAAIigB,GAAY,EAQhB,SAASC,GAAWC,EAAa,CAC3B,GAAA,CACF,OAAApU,EACA,SAAA7J,CAAA,EACE8c,GAAqBF,GAAe,UAAU,EAC9C5gB,EAAQihB,GAAmBJ,EAAoB,UAAU,EACzD,CAAC7R,EAAYkT,CAAa,EAAIC,WAAe,EAAE,EAC/CxL,EAAkB0H,cAAyBnE,GAAA,CACzC,GAAA,OAAO+H,GAAgB,WACzB,MAAO,CAAC,CAACA,EAEX,GAAIje,IAAa,IACf,OAAOie,EAAY/H,CAAG,EAMpB,GAAA,CACF,gBAAAvJ,EACA,aAAAnQ,EACA,cAAAuO,CACE,EAAAmL,EACJ,OAAO+H,EAAY,CACjB,gBAAiBvjB,GAAS,CAAC,EAAGiS,EAAiB,CAC7C,SAAU1M,GAAc0M,EAAgB,SAAU3M,CAAQ,GAAK2M,EAAgB,QAAA,CAChF,EACD,aAAcjS,GAAS,CAAC,EAAG8B,EAAc,CACvC,SAAUyD,GAAczD,EAAa,SAAUwD,CAAQ,GAAKxD,EAAa,QAAA,CAC1E,EACD,cAAAuO,CAAA,CACD,CAAA,EACA,CAAC/K,EAAUie,CAAW,CAAC,EAI1BG,OAAAA,EAAAA,UAAgB,IAAM,CAChB,IAAAtjB,EAAM,OAAO,EAAEijB,EAAS,EAC5B,OAAAG,EAAcpjB,CAAG,EACV,IAAM+O,EAAO,cAAc/O,CAAG,CAAA,EACpC,CAAC+O,CAAM,CAAC,EAMXuU,EAAAA,UAAgB,IAAM,CAChBpT,IAAe,IACVnB,EAAA,WAAWmB,EAAY2H,CAAe,CAE9C,EAAA,CAAC9I,EAAQmB,EAAY2H,CAAe,CAAC,EAIjC3H,GAAchP,EAAM,SAAS,IAAIgP,CAAU,EAAIhP,EAAM,SAAS,IAAIgP,CAAU,EAAI1C,EACzF,CAMA,SAASwR,IAAoB,CACvB,GAAA,CACF,OAAAjQ,CAAA,EACEiT,GAAqBF,GAAe,iBAAiB,EACrDjd,EAAKwd,GAAkBN,EAAoB,iBAAiB,EAC5D1C,EAAYC,SAAa,EAAK,EAClC,OAAAX,GAA0B,IAAM,CAC9BU,EAAU,QAAU,EAAA,CACrB,EACcE,EAAAA,YAAkB,SAAUte,EAAIb,EAAS,CAClDA,IAAY,SACdA,EAAU,CAAA,GAMPif,EAAU,UACX,OAAOpe,GAAO,SAChB8N,EAAO,SAAS9N,CAAE,EAEX8N,EAAA,SAAS9N,EAAIrB,GAAS,CAC3B,YAAaiF,CAAA,EACZzE,CAAO,CAAC,EACb,EACC,CAAC2O,EAAQlK,CAAE,CAAC,CAEjB,CA8BA,MAAM0e,GAAmB,kBACnBC,GAAsBC,GAAMF,EAAgB,EAKlD,SAASG,GAAepgB,EAAM,CACxB,GAAA,CACF,gBAAAqgB,EACA,OAAA5U,EACA,OAAAb,CACE,EAAA5K,EAGA,CAACpC,EAAO0iB,CAAY,EAAIP,EAAAA,SAAetU,EAAO,KAAK,EACnD,CACF,mBAAA8U,CAAA,EACE3V,GAAU,CAAA,EACV4V,EAAWvE,cAA8B3O,GAAA,CACrBiT,GAAAL,GAAsBA,GAAoB,IAAMI,EAAahT,CAAQ,CAAC,EAAIgT,EAAahT,CAAQ,CAAA,EACpH,CAACgT,EAAcC,CAAkB,CAAC,EAC/BhF,kBAAgB,IAAM9P,EAAO,UAAU+U,CAAQ,EAAG,CAAC/U,EAAQ+U,CAAQ,CAAC,EACtE,IAAA3F,EAAYO,EAAAA,QAAc,KACrB,CACL,WAAY3P,EAAO,WACnB,eAAgBA,EAAO,eACvB,GAAIhO,GAAKgO,EAAO,SAAShO,CAAC,EAC1B,KAAM,CAACE,EAAIC,EAAOsQ,IAASzC,EAAO,SAAS9N,EAAI,CAC7C,MAAAC,EACA,mBAAoBsQ,GAAQ,KAAO,OAASA,EAAK,kBAAA,CAClD,EACD,QAAS,CAACvQ,EAAIC,EAAOsQ,IAASzC,EAAO,SAAS9N,EAAI,CAChD,QAAS,GACT,MAAAC,EACA,mBAAoBsQ,GAAQ,KAAO,OAASA,EAAK,kBAAA,CAClD,CAAA,GAEF,CAACzC,CAAM,CAAC,EACP7J,EAAW6J,EAAO,UAAY,IAC9BmQ,EAAoBR,EAAAA,QAAc,KAAO,CAC3C,OAAA3P,EACA,UAAAoP,EACA,OAAQ,GACR,SAAAjZ,CACE,GAAA,CAAC6J,EAAQoP,EAAWjZ,CAAQ,CAAC,EAQb,OAAA2a,EAAAA,cAAoBmB,EAAAA,SAAgB,KAAyBnB,EAAAA,cAAcrC,GAAkB,SAAU,CACzH,MAAO0B,CAAA,EACOW,EAAoB,cAAAnC,GAAuB,SAAU,CACnE,MAAOxc,CAAA,EACa2e,EAAAA,cAAckE,GAAQ,CAC1C,SAAA7e,EACA,SAAUhE,EAAM,SAChB,eAAgBA,EAAM,cACtB,UAAAid,CACC,EAAAjd,EAAM,YAA2B2e,gBAAoBmE,GAAY,CAClE,OAAQjV,EAAO,OACf,MAAA7N,CACD,CAAA,EAAIyiB,CAAe,CAAC,CAAC,EAAG,IAAI,CAC/B,CACA,SAASK,GAAW1X,EAAO,CACrB,GAAA,CACF,OAAA9H,EACA,MAAAtD,CACE,EAAAoL,EACG,OAAA4T,GAAc1b,EAAQ,OAAWtD,CAAK,CAC/C,CAMA,SAAS+iB,GAAavK,EAAO,CACvB,GAAA,CACF,SAAAxU,EACA,SAAAsc,EACA,eAAAnhB,EACA,aAAAC,EACA,OAAA4N,CACE,EAAAwL,EACAwK,EAAa5E,EAAAA,SACb4E,EAAW,SAAW,OACxBA,EAAW,QAAU/jB,GAAoB,CACvC,eAAAE,EACA,aAAAC,EACA,SAAU,EAAA,CACX,GAEH,IAAIuD,EAAUqgB,EAAW,QACrB,CAAChjB,EAAO0iB,CAAY,EAAIP,WAAe,CACzC,OAAQxf,EAAQ,OAChB,SAAUA,EAAQ,QAAA,CACnB,EACG,CACF,mBAAAggB,CAAA,EACE3V,GAAU,CAAA,EACV4V,EAAWvE,cAA8B3O,GAAA,CACrBiT,GAAAL,GAAsBA,GAAoB,IAAMI,EAAahT,CAAQ,CAAC,EAAIgT,EAAahT,CAAQ,CAAA,EACpH,CAACgT,EAAcC,CAAkB,CAAC,EAC/BhF,OAAAA,kBAAgB,IAAMhb,EAAQ,OAAOigB,CAAQ,EAAG,CAACjgB,EAASigB,CAAQ,CAAC,EACrDjE,EAAAA,cAAoBkE,GAAQ,CAC9C,SAAA7e,EACA,SAAAsc,EACA,SAAUtgB,EAAM,SAChB,eAAgBA,EAAM,OACtB,UAAW2C,CAAA,CACZ,CACH,CAUA,SAASsgB,GAASC,EAAO,CACnB,GAAA,CACF,GAAAnjB,EACA,QAAAgD,EACA,MAAA/C,EACA,SAAA2X,CACE,EAAAuL,EACHnG,GAAA,GAEwEC,EAAiB,EAAK,EAE3F,GAAA,CACF,QAAA3Y,CAAA,EACE6Y,EAAAA,WAAiBN,CAAY,EAC7B,CACF,SAAUrT,GACR8T,GAAY,EACZhN,EAAWuN,KAIXtd,EAAO8I,GAAUrJ,EAAIme,GAAkC7Z,CAAO,EAAE,IAAIwC,GAASA,EAAM,YAAY,EAAG0C,EAAkBoO,IAAa,MAAM,EACvIwL,EAAW,KAAK,UAAU7iB,CAAI,EAClC8hB,OAAAA,EAAAA,UAAgB,IAAM/R,EAAS,KAAK,MAAM8S,CAAQ,EAAG,CACnD,QAAApgB,EACA,MAAA/C,EACA,SAAA2X,CAAA,CACD,EAAG,CAACtH,EAAU8S,EAAUxL,EAAU5U,EAAS/C,CAAK,CAAC,EAC3C,IACT,CAMA,SAASojB,GAAOlD,EAAO,CACd,OAAA1B,GAAU0B,EAAM,OAAO,CAChC,CAMA,SAASmD,GAAMC,EAAQ,CAC0LtG,EAAiB,EAAK,CACvO,CAUA,SAAS6F,GAAOU,EAAO,CACjB,GAAA,CACF,SAAUC,EAAe,IACzB,SAAAlD,EAAW,KACX,SAAUmD,EACV,eAAAC,EAAiB3kB,EAAO,IACxB,UAAAke,EACA,OAAQ0G,EAAa,EACnB,EAAAJ,EACFxG,GAAmB,GAAqLC,EAAiB,EAAK,EAIhO,IAAIhZ,EAAWwf,EAAa,QAAQ,OAAQ,GAAG,EAC3CI,EAAoBpG,EAAAA,QAAc,KAAO,CAC3C,SAAAxZ,EACA,UAAAiZ,EACA,OAAQ0G,CACN,GAAA,CAAC3f,EAAUiZ,EAAW0G,CAAU,CAAC,EACjC,OAAOF,GAAiB,WAC1BA,EAAeljB,GAAUkjB,CAAY,GAEnC,GAAA,CACF,SAAAziB,EAAW,IACX,OAAAC,EAAS,GACT,KAAAC,EAAO,GACP,MAAAlB,EAAQ,KACR,IAAAlB,EAAM,SACJ,EAAA2kB,EACAI,EAAkBrG,EAAAA,QAAc,IAAM,CACpC,IAAAsG,EAAmB7f,GAAcjD,EAAUgD,CAAQ,EACvD,OAAI8f,GAAoB,KACf,KAEF,CACL,SAAU,CACR,SAAUA,EACV,OAAA7iB,EACA,KAAAC,EACA,MAAAlB,EACA,IAAAlB,CACF,EACA,eAAA4kB,CAAA,CACF,EACC,CAAC1f,EAAUhD,EAAUC,EAAQC,EAAMlB,EAAOlB,EAAK4kB,CAAc,CAAC,EAEjE,OAAIG,GAAmB,KACd,KAEWlF,EAAoB,cAAAjC,GAAkB,SAAU,CAClE,MAAOkH,CAAA,EACOjF,EAAoB,cAAAhC,GAAgB,SAAU,CAC5D,SAAA2D,EACA,MAAOuD,CACR,CAAA,CAAC,CACJ,CAOA,SAASE,GAAOC,EAAO,CACjB,GAAA,CACF,SAAA1D,EACA,SAAArgB,CACE,EAAA+jB,EACJ,OAAOjF,GAAUkF,GAAyB3D,CAAQ,EAAGrgB,CAAQ,CAC/D,CAKA,SAASikB,GAAMC,EAAO,CAChB,GAAA,CACF,SAAA7D,EACA,aAAAI,EACA,QAAAvV,CACE,EAAAgZ,EACgB,OAAAxF,EAAAA,cAAoByF,GAAoB,CAC1D,QAAAjZ,EACA,aAAAuV,GACoB/B,EAAA,cAAc0F,GAAc,KAAM/D,CAAQ,CAAC,CACnE,CACA,IAAIgE,GACH,SAAUA,EAAmB,CAC5BA,EAAkBA,EAAkB,QAAa,CAAC,EAAI,UACtDA,EAAkBA,EAAkB,QAAa,CAAC,EAAI,UACtDA,EAAkBA,EAAkB,MAAW,CAAC,EAAI,OACtD,GAAGA,IAAsBA,EAAoB,CAAG,EAAA,EAChD,MAAMC,GAAsB,IAAI,QAAQ,IAAM,CAAC,CAAC,EAChD,MAAMH,WAA2BnE,EAAAA,SAAgB,CAC/C,YAAYC,EAAO,CACjB,MAAMA,CAAK,EACX,KAAK,MAAQ,CACX,MAAO,IAAA,CAEX,CACA,OAAO,yBAAyBpd,EAAO,CAC9B,MAAA,CACL,MAAAA,CAAA,CAEJ,CACA,kBAAkBA,EAAOqd,EAAW,CAC1B,QAAA,MAAM,mDAAoDrd,EAAOqd,CAAS,CACpF,CACA,QAAS,CACH,GAAA,CACF,SAAAG,EACA,aAAAI,EACA,QAAAvV,CAAA,EACE,KAAK,MACLR,EAAU,KACVe,EAAS4Y,EAAkB,QAC3B,GAAA,EAAEnZ,aAAmB,SAEvBO,EAAS4Y,EAAkB,QAC3B3Z,EAAU,QAAQ,UACX,OAAA,eAAeA,EAAS,WAAY,CACzC,IAAK,IAAM,EAAA,CACZ,EACM,OAAA,eAAeA,EAAS,QAAS,CACtC,IAAK,IAAMQ,CAAA,CACZ,UACQ,KAAK,MAAM,MAAO,CAE3BO,EAAS4Y,EAAkB,MACvB,IAAAE,EAAc,KAAK,MAAM,MAC7B7Z,EAAU,QAAQ,OAAS,EAAA,MAAM,IAAM,CAAA,CAAE,EAClC,OAAA,eAAeA,EAAS,WAAY,CACzC,IAAK,IAAM,EAAA,CACZ,EACM,OAAA,eAAeA,EAAS,SAAU,CACvC,IAAK,IAAM6Z,CAAA,CACZ,CAAA,MACQrZ,EAAQ,UAEPR,EAAAQ,EACDO,EAAAf,EAAQ,SAAW,OAAY2Z,EAAkB,MAAQ3Z,EAAQ,QAAU,OAAY2Z,EAAkB,QAAUA,EAAkB,UAG9I5Y,EAAS4Y,EAAkB,QACpB,OAAA,eAAenZ,EAAS,WAAY,CACzC,IAAK,IAAM,EAAA,CACZ,EACDR,EAAUQ,EAAQ,KAAKlB,GAAQ,OAAO,eAAekB,EAAS,QAAS,CACrE,IAAK,IAAMlB,CAAA,CACZ,EAAGnH,GAAS,OAAO,eAAeqI,EAAS,SAAU,CACpD,IAAK,IAAMrI,CACZ,CAAA,CAAC,GAEJ,GAAI4I,IAAW4Y,EAAkB,OAAS3Z,EAAQ,kBAAkBN,GAE5D,MAAAka,GAER,GAAI7Y,IAAW4Y,EAAkB,OAAS,CAAC5D,EAEzC,MAAM/V,EAAQ,OAEZ,GAAAe,IAAW4Y,EAAkB,MAEX,OAAA3F,EAAoB,cAAAlC,GAAa,SAAU,CAC7D,MAAO9R,EACP,SAAU+V,CAAA,CACX,EAEC,GAAAhV,IAAW4Y,EAAkB,QAEX,OAAA3F,EAAoB,cAAAlC,GAAa,SAAU,CAC7D,MAAO9R,EACP,SAAA2V,CAAA,CACD,EAIG,MAAA3V,CACR,CACF,CAMA,SAAS0Z,GAAaI,EAAO,CACvB,GAAA,CACF,SAAAnE,CACE,EAAAmE,EACAxa,EAAO4X,KACP6C,EAAW,OAAOpE,GAAa,WAAaA,EAASrW,CAAI,EAAIqW,EACjE,OAA0B3B,gBAAcmB,EAAAA,SAAgB,KAAM4E,CAAQ,CACxE,CAaA,SAAST,GAAyB3D,EAAU9c,EAAY,CAClDA,IAAe,SACjBA,EAAa,CAAA,GAEf,IAAIF,EAAS,CAAA,EACbqhB,OAAAA,EAAAA,SAAe,QAAQrE,EAAU,CAACsE,EAASplB,IAAU,CACnD,GAAI,CAAeqlB,EAAAA,eAAqBD,CAAO,EAG7C,OAEF,IAAIlhB,EAAW,CAAC,GAAGF,EAAYhE,CAAK,EAChC,GAAAolB,EAAQ,OAAS9E,WAAgB,CAE5Bxc,EAAA,KAAK,MAAMA,EAAQ2gB,GAAyBW,EAAQ,MAAM,SAAUlhB,CAAQ,CAAC,EACpF,MACF,CACEkhB,EAAQ,OAASvB,IAAmQrG,EAAiB,EAAK,EAC1S,CAAC4H,EAAQ,MAAM,OAAS,CAACA,EAAQ,MAAM,UAA0H5H,EAAiB,EAAK,EACzL,IAAI5Z,EAAQ,CACV,GAAIwhB,EAAQ,MAAM,IAAMlhB,EAAS,KAAK,GAAG,EACzC,cAAekhB,EAAQ,MAAM,cAC7B,QAASA,EAAQ,MAAM,QACvB,UAAWA,EAAQ,MAAM,UACzB,MAAOA,EAAQ,MAAM,MACrB,KAAMA,EAAQ,MAAM,KACpB,OAAQA,EAAQ,MAAM,OACtB,OAAQA,EAAQ,MAAM,OACtB,aAAcA,EAAQ,MAAM,aAC5B,cAAeA,EAAQ,MAAM,cAC7B,iBAAkBA,EAAQ,MAAM,eAAiB,MAAQA,EAAQ,MAAM,cAAgB,KACvF,iBAAkBA,EAAQ,MAAM,iBAChC,OAAQA,EAAQ,MAAM,OACtB,KAAMA,EAAQ,MAAM,IAAA,EAElBA,EAAQ,MAAM,WAChBxhB,EAAM,SAAW6gB,GAAyBW,EAAQ,MAAM,SAAUlhB,CAAQ,GAE5EJ,EAAO,KAAKF,CAAK,CAAA,CAClB,EACME,CACT,CAKA,SAASwhB,GAAczgB,EAAS,CAC9B,OAAOob,GAAepb,CAAO,CAC/B,CAEA,SAASd,GAAmBH,EAAO,CACjC,IAAI2hB,EAAU,CAGZ,iBAAkB3hB,EAAM,eAAiB,MAAQA,EAAM,cAAgB,IAAA,EAEzE,OAAIA,EAAM,WAMR,OAAO,OAAO2hB,EAAS,CACrB,QAAsBpG,EAAAA,cAAoBvb,EAAM,SAAS,EACzD,UAAW,MAAA,CACZ,EAECA,EAAM,eAMR,OAAO,OAAO2hB,EAAS,CACrB,aAA2BpG,EAAAA,cAAoBvb,EAAM,aAAa,EAClE,cAAe,MAAA,CAChB,EAEI2hB,CACT,CACA,SAASC,GAAmB1hB,EAAQgN,EAAM,CACxC,OAAO7D,GAAa,CAClB,SAAU6D,GAAQ,KAAO,OAASA,EAAK,SACvC,OAAQ5R,GAAS,CAAA,EAAI4R,GAAQ,KAAO,OAASA,EAAK,OAAQ,CACxD,mBAAoB,EAAA,CACrB,EACD,QAASrR,GAAoB,CAC3B,eAAgBqR,GAAQ,KAAO,OAASA,EAAK,eAC7C,aAAcA,GAAQ,KAAO,OAASA,EAAK,YAAA,CAC5C,EACD,cAAeA,GAAQ,KAAO,OAASA,EAAK,cAC5C,OAAAhN,EACA,mBAAAC,EAAA,CACD,EAAE,WAAW,CAChB,CC70CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAeA,SAAS7E,GAAW,CAClB,OAAAA,EAAW,OAAO,OAAS,OAAO,OAAO,KAAK,EAAI,SAAUC,EAAQ,CAClE,QAASC,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CACrC,IAAAC,EAAS,UAAUD,CAAC,EACxB,QAASE,KAAOD,EACV,OAAO,UAAU,eAAe,KAAKA,EAAQC,CAAG,IAC3CH,EAAAG,CAAG,EAAID,EAAOC,CAAG,EAG9B,CACO,OAAAH,CAAA,EAEFD,EAAS,MAAM,KAAM,SAAS,CACvC,CACA,SAASumB,GAA8BpmB,EAAQqmB,EAAU,CACvD,GAAIrmB,GAAU,KAAM,MAAO,GAC3B,IAAIF,EAAS,CAAA,EACTwmB,EAAa,OAAO,KAAKtmB,CAAM,EAC/BC,EAAKF,EACT,IAAKA,EAAI,EAAGA,EAAIumB,EAAW,OAAQvmB,IACjCE,EAAMqmB,EAAWvmB,CAAC,EACd,EAAAsmB,EAAS,QAAQpmB,CAAG,GAAK,KACtBH,EAAAG,CAAG,EAAID,EAAOC,CAAG,GAEnB,OAAAH,CACT,CAEA,MAAMymB,GAAgB,MAChBC,GAAiB,oCACvB,SAASC,GAAcC,EAAQ,CAC7B,OAAOA,GAAU,MAAQ,OAAOA,EAAO,SAAY,QACrD,CACA,SAASC,GAAgBD,EAAQ,CAC/B,OAAOD,GAAcC,CAAM,GAAKA,EAAO,QAAQ,YAAkB,IAAA,QACnE,CACA,SAASE,GAAcF,EAAQ,CAC7B,OAAOD,GAAcC,CAAM,GAAKA,EAAO,QAAQ,YAAkB,IAAA,MACnE,CACA,SAASG,GAAeH,EAAQ,CAC9B,OAAOD,GAAcC,CAAM,GAAKA,EAAO,QAAQ,YAAkB,IAAA,OACnE,CACA,SAASI,GAAgBC,EAAO,CACvB,MAAA,CAAC,EAAEA,EAAM,SAAWA,EAAM,QAAUA,EAAM,SAAWA,EAAM,SACpE,CACA,SAASC,GAAuBD,EAAOjnB,EAAQ,CAC7C,OAAOinB,EAAM,SAAW,IAExB,CAACjnB,GAAUA,IAAW,UAEtB,CAACgnB,GAAgBC,CAAK,CAExB,CAsBA,SAASE,GAAmB5b,EAAM,CAChC,OAAIA,IAAS,SACJA,EAAA,IAEF,IAAI,gBAAgB,OAAOA,GAAS,UAAY,MAAM,QAAQA,CAAI,GAAKA,aAAgB,gBAAkBA,EAAO,OAAO,KAAKA,CAAI,EAAE,OAAO,CAAClC,EAAMlJ,IAAQ,CACzJ,IAAAgD,EAAQoI,EAAKpL,CAAG,EACpB,OAAOkJ,EAAK,OAAO,MAAM,QAAQlG,CAAK,EAAIA,EAAM,IAAIkJ,GAAK,CAAClM,EAAKkM,CAAC,CAAC,EAAI,CAAC,CAAClM,EAAKgD,CAAK,CAAC,CAAC,CAAA,EAClF,CAAA,CAAE,CAAC,CACR,CACA,SAASikB,GAA2BC,EAAgBC,EAAqB,CACnE,IAAAvN,EAAeoN,GAAmBE,CAAc,EACpD,GAAIC,EACO,QAAAnnB,KAAOmnB,EAAoB,OAC7BvN,EAAa,IAAI5Z,CAAG,GACvBmnB,EAAoB,OAAOnnB,CAAG,EAAE,QAAiBgD,GAAA,CAClC4W,EAAA,OAAO5Z,EAAKgD,CAAK,CAAA,CAC/B,EAIA,OAAA4W,CACT,CAEA,IAAIwN,GAA6B,KACjC,SAASC,IAA+B,CACtC,GAAID,KAA+B,KAC7B,GAAA,CACE,IAAA,SAAS,SAAS,cAAc,MAAM,EAE1C,CAAA,EAC6BA,GAAA,QACnB,CACmBA,GAAA,EAC/B,CAEK,OAAAA,EACT,CACA,MAAME,GAA4B,IAAA,IAAI,CAAC,oCAAqC,sBAAuB,YAAY,CAAC,EAChH,SAASC,GAAeC,EAAS,CAC/B,OAAIA,GAAW,MAAQ,CAACF,GAAsB,IAAIE,CAAO,EAEhD,KAEFA,CACT,CACA,SAASC,GAAsB5nB,EAAQqF,EAAU,CAC3C,IAAA+X,EACApc,EACA2mB,EACA3N,EACA6N,EACA,GAAAf,GAAc9mB,CAAM,EAAG,CAIrB,IAAA8nB,EAAO9nB,EAAO,aAAa,QAAQ,EACvCgB,EAAS8mB,EAAOxiB,GAAcwiB,EAAMziB,CAAQ,EAAI,KACvC+X,EAAApd,EAAO,aAAa,QAAQ,GAAKymB,GAC1CkB,EAAUD,GAAe1nB,EAAO,aAAa,SAAS,CAAC,GAAK0mB,GACjD1M,EAAA,IAAI,SAASha,CAAM,CACrB,SAAA6mB,GAAgB7mB,CAAM,GAAK+mB,GAAe/mB,CAAM,IAAMA,EAAO,OAAS,UAAYA,EAAO,OAAS,SAAU,CACrH,IAAI+nB,EAAO/nB,EAAO,KAClB,GAAI+nB,GAAQ,KACJ,MAAA,IAAI,MAAM,oEAAsE,EAMxF,IAAID,EAAO9nB,EAAO,aAAa,YAAY,GAAK+nB,EAAK,aAAa,QAAQ,EAUtE,GATJ/mB,EAAS8mB,EAAOxiB,GAAcwiB,EAAMziB,CAAQ,EAAI,KAChD+X,EAASpd,EAAO,aAAa,YAAY,GAAK+nB,EAAK,aAAa,QAAQ,GAAKtB,GACnEkB,EAAAD,GAAe1nB,EAAO,aAAa,aAAa,CAAC,GAAK0nB,GAAeK,EAAK,aAAa,SAAS,CAAC,GAAKrB,GAErG1M,EAAA,IAAI,SAAS+N,EAAM/nB,CAAM,EAKhC,CAACwnB,KAAgC,CAC/B,GAAA,CACF,KAAA1N,EACA,KAAAiC,EACA,MAAA5Y,CACE,EAAAnD,EACJ,GAAI+b,IAAS,QAAS,CAChB,IAAAvT,EAASsR,EAAOA,EAAO,IAAM,GACxBE,EAAA,OAAOxR,EAAS,IAAK,GAAG,EACxBwR,EAAA,OAAOxR,EAAS,IAAK,GAAG,OACxBsR,GACAE,EAAA,OAAOF,EAAM3W,CAAK,CAE/B,CAAA,KACF,IAAWwjB,GAAc3mB,CAAM,EACvB,MAAA,IAAI,MAAM,oFAA2F,EAElGod,EAAAqJ,GACAzlB,EAAA,KACC2mB,EAAAjB,GACHmB,EAAA7nB,EAGL,OAAAga,GAAY2N,IAAY,eACnBE,EAAA7N,EACIA,EAAA,QAEN,CACL,OAAAhZ,EACA,OAAQoc,EAAO,YAAY,EAC3B,QAAAuK,EACA,SAAA3N,EACA,KAAA6N,CAAA,CAEJ,CAEA,MAAMG,GAAY,CAAC,UAAW,WAAY,iBAAkB,UAAW,QAAS,SAAU,KAAM,oBAAoB,EAClHC,GAAa,CAAC,eAAgB,gBAAiB,YAAa,MAAO,QAAS,KAAM,UAAU,EAC5FC,GAAa,CAAC,iBAAkB,UAAW,QAAS,SAAU,SAAU,WAAY,SAAU,WAAY,oBAAoB,EAChI,SAASC,GAAoBxjB,EAAQgN,EAAM,CACzC,OAAO7D,GAAa,CAClB,SAAU6D,GAAQ,KAAO,OAASA,EAAK,SACvC,OAAQ5R,EAAS,CAAA,EAAI4R,GAAQ,KAAO,OAASA,EAAK,OAAQ,CACxD,mBAAoB,EAAA,CACrB,EACD,QAAS1P,GAAqB,CAC5B,OAAQ0P,GAAQ,KAAO,OAASA,EAAK,MAAA,CACtC,EACD,eAAgBA,GAAQ,KAAO,OAASA,EAAK,gBAAkByW,GAAmB,EAClF,OAAAzjB,EACA,mBAAoB0jB,EAAA,CACrB,EAAE,WAAW,CAChB,CACA,SAASC,GAAiB3jB,EAAQgN,EAAM,CACtC,OAAO7D,GAAa,CAClB,SAAU6D,GAAQ,KAAO,OAASA,EAAK,SACvC,OAAQ5R,EAAS,CAAA,EAAI4R,GAAQ,KAAO,OAASA,EAAK,OAAQ,CACxD,mBAAoB,EAAA,CACrB,EACD,QAASjP,GAAkB,CACzB,OAAQiP,GAAQ,KAAO,OAASA,EAAK,MAAA,CACtC,EACD,eAAgBA,GAAQ,KAAO,OAASA,EAAK,gBAAkByW,GAAmB,EAClF,OAAAzjB,EACA,mBAAoB0jB,EAAA,CACrB,EAAE,WAAW,CAChB,CACA,SAASD,IAAqB,CACxB,IAAAG,EACJ,IAAIlnB,GAASknB,EAAU,SAAW,KAAO,OAASA,EAAQ,4BACtD,OAAAlnB,GAASA,EAAM,SACTA,EAAAtB,EAAS,CAAC,EAAGsB,EAAO,CAC1B,OAAQmnB,GAAkBnnB,EAAM,MAAM,CAAA,CACvC,GAEIA,CACT,CACA,SAASmnB,GAAkBrV,EAAQ,CACjC,GAAI,CAACA,EAAe,OAAA,KAChB,IAAAxS,EAAU,OAAO,QAAQwS,CAAM,EAC/BsV,EAAa,CAAA,EACjB,OAAS,CAACtoB,EAAKuoB,CAAG,IAAK/nB,EAGjB,GAAA+nB,GAAOA,EAAI,SAAW,qBACxBD,EAAWtoB,CAAG,EAAI,IAAI2M,GAAc4b,EAAI,OAAQA,EAAI,WAAYA,EAAI,KAAMA,EAAI,WAAa,EAAI,UACtFA,GAAOA,EAAI,SAAW,QAAS,CAExC,GAAIA,EAAI,UAAW,CACb,IAAAC,EAAmB,OAAOD,EAAI,SAAS,EACvC,GAAA,OAAOC,GAAqB,WAC1B,GAAA,CAEF,IAAIxkB,EAAQ,IAAIwkB,EAAiBD,EAAI,OAAO,EAG5CvkB,EAAM,MAAQ,GACdskB,EAAWtoB,CAAG,EAAIgE,OACR,CAEZ,CAEJ,CACI,GAAAskB,EAAWtoB,CAAG,GAAK,KAAM,CAC3B,IAAIgE,EAAQ,IAAI,MAAMukB,EAAI,OAAO,EAGjCvkB,EAAM,MAAQ,GACdskB,EAAWtoB,CAAG,EAAIgE,CACpB,CAAA,MAEAskB,EAAWtoB,CAAG,EAAIuoB,EAGf,OAAAD,CACT,CA0BA,MAAM/E,GAAmB,kBACnBC,GAAsBC,GAAMF,EAAgB,EAIlD,SAASkF,GAAcnlB,EAAM,CACvB,GAAA,CACF,SAAA4B,EACA,SAAAsc,EACA,OAAAtT,EACA,OAAAlM,CACE,EAAAsB,EACA4gB,EAAa5E,EAAAA,SACb4E,EAAW,SAAW,OACxBA,EAAW,QAAUpiB,GAAqB,CACxC,OAAAE,EACA,SAAU,EAAA,CACX,GAEH,IAAI6B,EAAUqgB,EAAW,QACrB,CAAChjB,EAAO0iB,CAAY,EAAIP,WAAe,CACzC,OAAQxf,EAAQ,OAChB,SAAUA,EAAQ,QAAA,CACnB,EACG,CACF,mBAAAggB,CAAA,EACE3V,GAAU,CAAA,EACV4V,EAAWvE,cAA8B3O,GAAA,CACrBiT,GAAAL,GAAsBA,GAAoB,IAAMI,EAAahT,CAAQ,CAAC,EAAIgT,EAAahT,CAAQ,CAAA,EACpH,CAACgT,EAAcC,CAAkB,CAAC,EAC/BhF,OAAAA,kBAAgB,IAAMhb,EAAQ,OAAOigB,CAAQ,EAAG,CAACjgB,EAASigB,CAAQ,CAAC,EACrDjE,EAAAA,cAAoBkE,GAAQ,CAC9C,SAAA7e,EACA,SAAAsc,EACA,SAAUtgB,EAAM,SAChB,eAAgBA,EAAM,OACtB,UAAW2C,CAAA,CACZ,CACH,CAKA,SAAS6kB,GAAWpc,EAAO,CACrB,GAAA,CACF,SAAApH,EACA,SAAAsc,EACA,OAAAtT,EACA,OAAAlM,CACE,EAAAsK,EACA4X,EAAa5E,EAAAA,SACb4E,EAAW,SAAW,OACxBA,EAAW,QAAU3hB,GAAkB,CACrC,OAAAP,EACA,SAAU,EAAA,CACX,GAEH,IAAI6B,EAAUqgB,EAAW,QACrB,CAAChjB,EAAO0iB,CAAY,EAAIP,WAAe,CACzC,OAAQxf,EAAQ,OAChB,SAAUA,EAAQ,QAAA,CACnB,EACG,CACF,mBAAAggB,CAAA,EACE3V,GAAU,CAAA,EACV4V,EAAWvE,cAA8B3O,GAAA,CACrBiT,GAAAL,GAAsBA,GAAoB,IAAMI,EAAahT,CAAQ,CAAC,EAAIgT,EAAahT,CAAQ,CAAA,EACpH,CAACgT,EAAcC,CAAkB,CAAC,EAC/BhF,OAAAA,kBAAgB,IAAMhb,EAAQ,OAAOigB,CAAQ,EAAG,CAACjgB,EAASigB,CAAQ,CAAC,EACrDjE,EAAAA,cAAoBkE,GAAQ,CAC9C,SAAA7e,EACA,SAAAsc,EACA,SAAUtgB,EAAM,SAChB,eAAgBA,EAAM,OACtB,UAAW2C,CAAA,CACZ,CACH,CAOA,SAAS8kB,GAAcjP,EAAO,CACxB,GAAA,CACF,SAAAxU,EACA,SAAAsc,EACA,OAAAtT,EACA,QAAArK,CACE,EAAA6V,EACA,CAACxY,EAAO0iB,CAAY,EAAIP,WAAe,CACzC,OAAQxf,EAAQ,OAChB,SAAUA,EAAQ,QAAA,CACnB,EACG,CACF,mBAAAggB,CAAA,EACE3V,GAAU,CAAA,EACV4V,EAAWvE,cAA8B3O,GAAA,CACrBiT,GAAAL,GAAsBA,GAAoB,IAAMI,EAAahT,CAAQ,CAAC,EAAIgT,EAAahT,CAAQ,CAAA,EACpH,CAACgT,EAAcC,CAAkB,CAAC,EAC/BhF,OAAAA,kBAAgB,IAAMhb,EAAQ,OAAOigB,CAAQ,EAAG,CAACjgB,EAASigB,CAAQ,CAAC,EACrDjE,EAAAA,cAAoBkE,GAAQ,CAC9C,SAAA7e,EACA,SAAAsc,EACA,SAAUtgB,EAAM,SAChB,eAAgBA,EAAM,OACtB,UAAW2C,CAAA,CACZ,CACH,CAIA,MAAMgK,GAAY,OAAO,OAAW,KAAe,OAAO,OAAO,SAAa,KAAe,OAAO,OAAO,SAAS,cAAkB,IAChIJ,GAAqB,gCAIrBmb,GAA0BC,EAAAA,WAAW,SAAqBzE,EAAO0E,EAAK,CACtE,GAAA,CACA,QAAAC,EACA,SAAAlQ,EACA,eAAAmQ,EACA,QAAA/kB,EACA,MAAA/C,EACA,OAAArB,EACA,GAAAoB,EACA,mBAAAoQ,CACE,EAAA+S,EACJ9d,EAAO6f,GAA8B/B,EAAOyD,EAAS,EACnD,CACF,SAAA3iB,CAAA,EACEkZ,EAAAA,WAAiB6K,EAAwB,EAEzCC,EACAC,EAAa,GACjB,GAAI,OAAOloB,GAAO,UAAYwM,GAAmB,KAAKxM,CAAE,IAEvCioB,EAAAjoB,EAEX4M,IACE,GAAA,CACF,IAAIsM,EAAa,IAAI,IAAI,OAAO,SAAS,IAAI,EACzCiP,EAAYnoB,EAAG,WAAW,IAAI,EAAI,IAAI,IAAIkZ,EAAW,SAAWlZ,CAAE,EAAI,IAAI,IAAIA,CAAE,EAChFO,EAAO2D,GAAcikB,EAAU,SAAUlkB,CAAQ,EACjDkkB,EAAU,SAAWjP,EAAW,QAAU3Y,GAAQ,KAE/CP,EAAAO,EAAO4nB,EAAU,OAASA,EAAU,KAE5BD,EAAA,QAEL,CAGZ,CAIA,IAAAxmB,EAAOqb,GAAQ/c,EAAI,CACrB,SAAA4X,CAAA,CACD,EACGwQ,EAAkBC,GAAoBroB,EAAI,CAC5C,QAAAgD,EACA,MAAA/C,EACA,OAAArB,EACA,mBAAAwR,EACA,SAAAwH,CAAA,CACD,EACD,SAAS0Q,EAAYzC,EAAO,CACtBiC,GAASA,EAAQjC,CAAK,EACrBA,EAAM,kBACTuC,EAAgBvC,CAAK,CAEzB,CACA,uBAGsB,IAAKlnB,EAAS,CAAA,EAAI0G,EAAM,CAC1C,KAAM4iB,GAAgBvmB,EACtB,QAASwmB,GAAcH,EAAiBD,EAAUQ,EAClD,IAAAT,EACA,OAAAjpB,CAAA,CACD,CAAC,CAEN,CAAC,EAOK2pB,GAA6BX,EAAAA,WAAW,SAAwBpE,EAAOqE,EAAK,CAC5E,GAAA,CACA,eAAgBW,EAAkB,OAClC,cAAAngB,EAAgB,GAChB,UAAWogB,EAAgB,GAC3B,IAAA7hB,EAAM,GACN,MAAO8hB,EACP,GAAA1oB,EACA,SAAAugB,CACE,EAAAiD,EACJne,EAAO6f,GAA8B1B,EAAOqD,EAAU,EACpDtmB,EAAO6c,GAAgBpd,EAAI,CAC7B,SAAUqF,EAAK,QAAA,CAChB,EACGnF,EAAWod,KACXqL,EAAcxL,aAAiByL,EAA6B,EAC5D,CACF,UAAA1L,CAAA,EACEC,EAAAA,WAAiB6K,EAAwB,EACzCpf,EAAasU,EAAU,eAAiBA,EAAU,eAAe3c,CAAI,EAAE,SAAWA,EAAK,SACvFiJ,EAAmBtJ,EAAS,SAC5B2oB,EAAuBF,GAAeA,EAAY,YAAcA,EAAY,WAAW,SAAWA,EAAY,WAAW,SAAS,SAAW,KAC5ItgB,IACHmB,EAAmBA,EAAiB,cACbqf,EAAAA,EAAuBA,EAAqB,YAAA,EAAgB,KACnFjgB,EAAaA,EAAW,eAE1B,IAAIkgB,EAAWtf,IAAqBZ,GAAc,CAAChC,GAAO4C,EAAiB,WAAWZ,CAAU,GAAKY,EAAiB,OAAOZ,EAAW,MAAM,IAAM,IAChJmgB,EAAYF,GAAwB,OAASA,IAAyBjgB,GAAc,CAAChC,GAAOiiB,EAAqB,WAAWjgB,CAAU,GAAKigB,EAAqB,OAAOjgB,EAAW,MAAM,IAAM,KAC9LogB,EAAcF,EAAWN,EAAkB,OAC3CS,EACA,OAAOR,GAAkB,WAC3BQ,EAAYR,EAAc,CACxB,SAAAK,EACA,UAAAC,CAAA,CACD,EAODE,EAAY,CAACR,EAAeK,EAAW,SAAW,KAAMC,EAAY,UAAY,IAAI,EAAE,OAAO,OAAO,EAAE,KAAK,GAAG,EAEhH,IAAIG,EAAQ,OAAOR,GAAc,WAAaA,EAAU,CACtD,SAAAI,EACA,UAAAC,CACD,CAAA,EAAIL,EACL,SAAwC,cAAAf,GAAMhpB,EAAS,CAAA,EAAI0G,EAAM,CAC/D,eAAgB2jB,EAChB,UAAAC,EACA,IAAApB,EACA,MAAAqB,EACA,GAAAlpB,CACD,CAAA,EAAG,OAAOugB,GAAa,WAAaA,EAAS,CAC5C,SAAAuI,EACA,UAAAC,CAAA,CACD,EAAIxI,CAAQ,CACf,CAAC,EAUK4I,GAAoBvB,EAAiB,WAAA,CAACzH,EAAO0H,IAAQ,CACzD,IAAIuB,EAASC,KACb,SAAwC,cAAAC,GAAU3qB,EAAS,CAAA,EAAIwhB,EAAO,CACpE,OAAAiJ,EACA,IAAAvB,CACD,CAAA,CAAC,CACJ,CAAC,EAIKyB,GAAwB1B,EAAiB,WAAA,CAAC3D,EAAOsF,IAAiB,CAClE,GAAA,CACA,eAAAxB,EACA,QAAA/kB,EACA,MAAA/C,EACA,OAAA+b,EAASqJ,GACT,OAAAzlB,EACA,SAAA4pB,EACA,OAAAJ,EACA,SAAAxR,EACA,mBAAAxH,CACE,EAAA6T,EACJ9D,EAAQ+E,GAA8BjB,EAAO6C,EAAU,EACrDzO,EAAa2D,EAAO,YAAY,IAAM,MAAQ,MAAQ,OACtD1D,EAAamR,GAAc7pB,EAAQ,CACrC,SAAAgY,CAAA,CACD,EACG8R,EAAyB7D,GAAA,CAE3B,GADA2D,GAAYA,EAAS3D,CAAK,EACtBA,EAAM,iBAAkB,OAC5BA,EAAM,eAAe,EACjB,IAAA8D,EAAY9D,EAAM,YAAY,UAC9B+D,GAAgBD,GAAa,KAAO,OAASA,EAAU,aAAa,YAAY,IAAM3N,EACnFoN,EAAAO,GAAa9D,EAAM,cAAe,CACvC,OAAQ+D,EACR,QAAA5mB,EACA,MAAA/C,EACA,SAAA2X,EACA,mBAAAxH,CAAA,CACD,CAAA,EAEiB,OAAAwO,EAAoB,cAAA,OAAQjgB,EAAS,CACvD,IAAK4qB,EACL,OAAQlR,EACR,OAAQC,EACR,SAAUyP,EAAiByB,EAAWE,CAAA,EACrCvJ,CAAK,CAAC,CACX,CAAC,EAQD,SAAS0J,GAAkBzF,EAAO,CAC5B,GAAA,CACF,OAAAjN,EACA,WAAA2S,CACE,EAAA1F,EACiB,OAAA2F,GAAA,CACnB,OAAA5S,EACA,WAAA2S,CAAA,CACD,EACM,IACT,CAQA,IAAIjJ,IACH,SAAUA,EAAgB,CACzBA,EAAe,qBAA0B,uBACzCA,EAAe,UAAe,YAC9BA,EAAe,iBAAsB,mBACrCA,EAAe,WAAgB,YACjC,GAAGA,KAAmBA,GAAiB,CAAG,EAAA,EAC1C,IAAIC,IACH,SAAUA,EAAqB,CAC9BA,EAAoB,YAAiB,cACrCA,EAAoB,qBAA0B,sBAChD,GAAGA,KAAwBA,GAAsB,CAAG,EAAA,EAIpD,SAASC,GAAqBC,EAAU,CAClC,IAAAC,EAAM9D,aAAiB6M,EAAwB,EAClD,OAAA/I,GAA6GhE,EAAiB,EAAK,EAC7HgE,CACT,CACA,SAASC,GAAmBF,EAAU,CAChC,IAAA/gB,EAAQkd,aAAiByL,EAA6B,EACzD,OAAA3oB,GAA+Ggd,EAAiB,EAAK,EAC/Hhd,CACT,CAMA,SAASooB,GAAoBroB,EAAI2V,EAAO,CAClC,GAAA,CACF,OAAA/W,EACA,QAASqrB,EACT,MAAAhqB,EACA,mBAAAmQ,EACA,SAAAwH,CACE,EAAAjC,IAAU,OAAS,CAAA,EAAKA,EACxBrF,EAAWuN,KACX3d,EAAWod,KACX/c,EAAO6c,GAAgBpd,EAAI,CAC7B,SAAA4X,CAAA,CACD,EACM,OAAA0G,EAAAA,YAA2BuH,GAAA,CAC5B,GAAAC,GAAuBD,EAAOjnB,CAAM,EAAG,CACzCinB,EAAM,eAAe,EAGjB,IAAA7iB,EAAUinB,IAAgB,OAAYA,EAAc3pB,GAAWJ,CAAQ,IAAMI,GAAWC,CAAI,EAChG+P,EAAStQ,EAAI,CACX,QAAAgD,EACA,MAAA/C,EACA,mBAAAmQ,EACA,SAAAwH,CAAA,CACD,CACH,CACF,EAAG,CAAC1X,EAAUoQ,EAAU/P,EAAM0pB,EAAahqB,EAAOrB,EAAQoB,EAAIoQ,EAAoBwH,CAAQ,CAAC,CAC7F,CAKA,SAASsS,GAAgBC,EAAa,CAEpC,IAAIC,EAAyB/L,EAAa,OAAA0H,GAAmBoE,CAAW,CAAC,EACrEE,EAAwBhM,SAAa,EAAK,EAC1Cne,EAAWod,KACX3E,EAAe8E,EAAAA,QAAc,IAIjCuI,GAA2B9lB,EAAS,OAAQmqB,EAAsB,QAAU,KAAOD,EAAuB,OAAO,EAAG,CAAClqB,EAAS,MAAM,CAAC,EACjIoQ,EAAWuN,KACXyM,EAAkBhM,EAAAA,YAAkB,CAACiM,EAAUC,IAAoB,CAC/D,MAAAC,EAAkB1E,GAAmB,OAAOwE,GAAa,WAAaA,EAAS5R,CAAY,EAAI4R,CAAQ,EAC7GF,EAAsB,QAAU,GACvB/Z,EAAA,IAAMma,EAAiBD,CAAe,CAAA,EAC9C,CAACla,EAAUqI,CAAY,CAAC,EACpB,MAAA,CAACA,EAAc2R,CAAe,CACvC,CACA,SAASI,IAA+B,CAClC,GAAA,OAAO,SAAa,IAChB,MAAA,IAAI,MAAM,+GAAoH,CAExI,CAKA,SAASrB,IAAY,CACf,GAAA,CACF,OAAAvb,CAAA,EACEiT,GAAqBF,GAAe,SAAS,EAC7C,CACF,SAAA5c,CAAA,EACEkZ,EAAAA,WAAiB6K,EAAwB,EACzC2C,EAAiBC,KACrB,OAAOtM,EAAM,YAAY,SAAU1f,EAAQO,EAAS,CAC9CA,IAAY,SACdA,EAAU,CAAA,GAEiBurB,KACzB,GAAA,CACF,OAAA9qB,EACA,OAAAoc,EACA,QAAAuK,EACA,SAAA3N,EACA,KAAA6N,CAAA,EACED,GAAsB5nB,EAAQqF,CAAQ,EACnC6J,EAAA,SAAS3O,EAAQ,QAAUS,EAAQ,CACxC,mBAAoBT,EAAQ,mBAC5B,SAAAyZ,EACA,KAAA6N,EACA,WAAYtnB,EAAQ,QAAU6c,EAC9B,YAAa7c,EAAQ,SAAWonB,EAChC,QAASpnB,EAAQ,QACjB,MAAOA,EAAQ,MACf,YAAawrB,CAAA,CACd,CACA,EAAA,CAAC7c,EAAQ7J,EAAU0mB,CAAc,CAAC,CACvC,CAIA,SAASE,GAAiB5W,EAAY6W,EAAgB,CAChD,GAAA,CACF,OAAAhd,CAAA,EACEiT,GAAqBF,GAAe,gBAAgB,EACpD,CACF,SAAA5c,CAAA,EACEkZ,EAAAA,WAAiB6K,EAAwB,EAC7C,OAAO1J,EAAM,YAAY,SAAU1f,EAAQO,EAAS,CAC9CA,IAAY,SACdA,EAAU,CAAA,GAEiBurB,KACzB,GAAA,CACF,OAAA9qB,EACA,OAAAoc,EACA,QAAAuK,EACA,SAAA3N,EACA,KAAA6N,CAAA,EACED,GAAsB5nB,EAAQqF,CAAQ,EACxC6mB,GAAkB,MAAmH7N,EAAiB,EAAK,EAC7JnP,EAAO,MAAMmG,EAAY6W,EAAgB3rB,EAAQ,QAAUS,EAAQ,CACjE,mBAAoBT,EAAQ,mBAC5B,SAAAyZ,EACA,KAAA6N,EACA,WAAYtnB,EAAQ,QAAU6c,EAC9B,YAAa7c,EAAQ,SAAWonB,CAAA,CACjC,GACA,CAACzY,EAAQ7J,EAAUgQ,EAAY6W,CAAc,CAAC,CACnD,CAGA,SAASrB,GAAc7pB,EAAQmf,EAAQ,CACjC,GAAA,CACF,SAAAnH,CACE,EAAAmH,IAAW,OAAS,CAAA,EAAKA,EACzB,CACF,SAAA9a,CAAA,EACEkZ,EAAAA,WAAiB6K,EAAwB,EACzC1H,EAAenD,aAAiB4N,CAAmB,EACtDzK,GAAqIrD,EAAiB,EAAK,EAC5J,GAAI,CAACnW,CAAK,EAAIwZ,EAAa,QAAQ,MAAM,EAAE,EAGvC/f,EAAO5B,EAAS,GAAIye,GAAgBxd,GAAkB,IAAK,CAC7D,SAAAgY,CACD,CAAA,CAAC,EAME1X,EAAWod,KACf,GAAI1d,GAAU,OAIZW,EAAK,OAASL,EAAS,OACvBK,EAAK,KAAOL,EAAS,KAIjB4G,EAAM,MAAM,OAAO,CACrB,IAAIK,EAAS,IAAI,gBAAgB5G,EAAK,MAAM,EAC5C4G,EAAO,OAAO,OAAO,EACrB5G,EAAK,OAAS4G,EAAO,SAAA,EAAa,IAAMA,EAAO,SAAa,EAAA,EAC9D,CAEF,OAAK,CAACvH,GAAUA,IAAW,MAAQkH,EAAM,MAAM,QACxCvG,EAAA,OAASA,EAAK,OAASA,EAAK,OAAO,QAAQ,MAAO,SAAS,EAAI,UAMlE0D,IAAa,MACV1D,EAAA,SAAWA,EAAK,WAAa,IAAM0D,EAAWY,GAAU,CAACZ,EAAU1D,EAAK,QAAQ,CAAC,GAEjFD,GAAWC,CAAI,CACxB,CACA,SAASyqB,GAAkB/W,EAAYf,EAAS,CAWvC,OAVwB0U,EAAAA,WAAiB,CAACzH,EAAO0H,IAAQ,CAC1D,IAAAuB,EAASyB,GAAiB5W,EAAYf,CAAO,EACjD,SAAwC,cAAAoW,GAAU3qB,EAAS,CAAA,EAAIwhB,EAAO,CACpE,IAAA0H,EACA,OAAAuB,CACD,CAAA,CAAC,CAAA,CACH,CAKH,CACA,IAAI6B,GAAY,EAKhB,SAASC,IAAa,CAChB,IAAAC,EACA,GAAA,CACF,OAAArd,CAAA,EACEiT,GAAqBF,GAAe,UAAU,EAC9Cxd,EAAQ8Z,aAAiB4N,CAAmB,EAC/C1nB,GAA2H4Z,EAAiB,EAAK,EAClJ,IAAI/J,GAAWiY,EAAiB9nB,EAAM,QAAQA,EAAM,QAAQ,OAAS,CAAC,IAAM,KAAO,OAAS8nB,EAAe,MAAM,GAC/GjY,GAAW,MAAgJ+J,EAAiB,EAAK,EAC/K,GAAA,CAAChJ,CAAU,EAAImO,WAAe,IAAM,OAAO,EAAE6I,EAAS,CAAC,EACvD,CAAC9B,CAAI,EAAI/G,EAAAA,SAAe,KACzBlP,GAAuH+J,EAAiB,EAAK,EACvI+N,GAAkB/W,EAAYf,CAAO,EAC7C,EACG,CAACkY,CAAI,EAAIhJ,WAAe,IAAc1gB,GAAA,CACvCoM,GAAqHmP,EAAiB,EAAK,EAC3I/J,GAAuH+J,EAAiB,EAAK,EACvInP,EAAA,MAAMmG,EAAYf,EAASxR,CAAI,CAAA,CACvC,EACG0nB,EAASyB,GAAiB5W,EAAYf,CAAO,EAC7CI,EAAUxF,EAAO,WAAWmG,CAAU,EACtCoX,EAAwB5N,UAAc,IAAM9e,EAAS,CACvD,KAAAwqB,EACA,OAAAC,EACA,KAAAgC,CAAA,EACC9X,CAAO,EAAG,CAACA,EAAS6V,EAAMC,EAAQgC,CAAI,CAAC,EAC1C/I,OAAAA,EAAAA,UAAgB,IAIP,IAAM,CACX,GAAI,CAACvU,EAAQ,CACX,QAAQ,KAAK,mDAAmD,EAChE,MACF,CACAA,EAAO,cAAcmG,CAAU,CAAA,EAEhC,CAACnG,EAAQmG,CAAU,CAAC,EAChBoX,CACT,CAKA,SAASC,IAAc,CAErB,MAAO,CAAC,GADIpK,GAAmBJ,GAAoB,WAAW,EAC7C,SAAS,OAAQ,CAAA,CACpC,CACA,MAAMyK,GAAiC,gCACvC,IAAIne,GAAuB,CAAA,EAI3B,SAAS2c,GAAqByB,EAAQ,CAChC,GAAA,CACF,OAAArU,EACA,WAAA2S,CACE,EAAA0B,IAAW,OAAS,CAAA,EAAKA,EACzB,CACF,OAAA1d,CAAA,EACEiT,GAAqBF,GAAe,oBAAoB,EACxD,CACF,sBAAA4K,EACA,mBAAArb,CAAA,EACE8Q,GAAmBJ,GAAoB,oBAAoB,EAC3D,CACF,SAAA7c,CAAA,EACEkZ,EAAAA,WAAiB6K,EAAwB,EACzC9nB,EAAWod,KACXhZ,EAAUmd,KACVxP,EAAasP,KAEjBc,EAAAA,UAAgB,KACd,OAAO,QAAQ,kBAAoB,SAC5B,IAAM,CACX,OAAO,QAAQ,kBAAoB,MAAA,GAEpC,CAAE,CAAA,EAEOqJ,GAAApN,cAAkB,IAAM,CAC9B,GAAArM,EAAW,QAAU,OAAQ,CAC/B,IAAIlT,GAAOoY,EAASA,EAAOjX,EAAUoE,CAAO,EAAI,OAASpE,EAAS,IAC7CkN,GAAArO,CAAG,EAAI,OAAO,OACrC,CACA,eAAe,QAAQ+qB,GAAcyB,GAAgC,KAAK,UAAUne,EAAoB,CAAC,EACzG,OAAO,QAAQ,kBAAoB,MAAA,EAClC,CAAC0c,EAAY3S,EAAQlF,EAAW,MAAO/R,EAAUoE,CAAO,CAAC,CAAC,EAEzD,OAAO,SAAa,MAEtBsZ,EAAAA,gBAAsB,IAAM,CACtB,GAAA,CACF,IAAI+N,EAAmB,eAAe,QAAQ7B,GAAcyB,EAA8B,EACtFI,IACqBve,GAAA,KAAK,MAAMue,CAAgB,QAE1C,CAEZ,CAAA,EACC,CAAC7B,CAAU,CAAC,EAGflM,EAAAA,gBAAsB,IAAM,CAC1B,IAAIgO,EAAwBzU,GAAUlT,IAAa,IAAM,CAAC/D,EAAUoE,IAAY6S,EAChFxY,EAAS,CAAC,EAAGuB,EAAU,CACrB,SAAUgE,GAAchE,EAAS,SAAU+D,CAAQ,GAAK/D,EAAS,QAAA,CAClE,EAAGoE,CAAW,EAAA6S,EACX0U,EAA2B/d,GAAU,KAAO,OAASA,EAAO,wBAAwBV,GAAsB,IAAM,OAAO,QAASwe,CAAqB,EAClJ,MAAA,IAAMC,GAA4BA,GACxC,EAAA,CAAC/d,EAAQ7J,EAAUkT,CAAM,CAAC,EAG7ByG,EAAAA,gBAAsB,IAAM,CAE1B,GAAI6N,IAA0B,GAI1B,IAAA,OAAOA,GAA0B,SAAU,CACtC,OAAA,SAAS,EAAGA,CAAqB,EACxC,MACF,CAEA,GAAIvrB,EAAS,KAAM,CACb,IAAA4rB,EAAK,SAAS,eAAe,mBAAmB5rB,EAAS,KAAK,MAAM,CAAC,CAAC,CAAC,EAC3E,GAAI4rB,EAAI,CACNA,EAAG,eAAe,EAClB,MACF,CACF,CAEI1b,IAAuB,IAIpB,OAAA,SAAS,EAAG,CAAC,EACnB,EAAA,CAAClQ,EAAUurB,EAAuBrb,CAAkB,CAAC,EAE5D,CASA,SAAS2b,GAAgBC,EAAU7sB,EAAS,CACtC,GAAA,CACF,QAAA8sB,CAAA,EACE9sB,GAAW,CAAA,EACfkjB,EAAAA,UAAgB,IAAM,CAChB,IAAA9R,EAAO0b,GAAW,KAAO,CAC3B,QAAAA,CACE,EAAA,OACG,cAAA,iBAAiB,eAAgBD,EAAUzb,CAAI,EAC/C,IAAM,CACJ,OAAA,oBAAoB,eAAgByb,EAAUzb,CAAI,CAAA,CAC3D,EACC,CAACyb,EAAUC,CAAO,CAAC,CACxB,CASA,SAASP,GAAYM,EAAU7sB,EAAS,CAClC,GAAA,CACF,QAAA8sB,CACF,EAAe,GACf5J,EAAAA,UAAgB,IAAM,CAChB,IAAA9R,EAAO0b,GAAW,KAAO,CAC3B,QAAAA,CACE,EAAA,OACG,cAAA,iBAAiB,WAAYD,EAAUzb,CAAI,EAC3C,IAAM,CACJ,OAAA,oBAAoB,WAAYyb,EAAUzb,CAAI,CAAA,CACvD,EACC,CAACyb,EAAUC,CAAO,CAAC,CACxB,CASA,SAASC,GAAUxH,EAAO,CACpB,GAAA,CACF,KAAAyH,EACA,QAAAnqB,CACE,EAAA0iB,EACAhO,EAAU0V,GAAoBD,CAAI,EACtC9J,EAAAA,UAAgB,IAAM,CAChB3L,EAAQ,QAAU,WAAa,CAACyV,GAClCzV,EAAQ,MAAM,CAChB,EACC,CAACA,EAASyV,CAAI,CAAC,EAClB9J,EAAAA,UAAgB,IAAM,CAChB3L,EAAQ,QAAU,YACN,OAAO,QAAQ1U,CAAO,EAEvB,WAAA0U,EAAQ,QAAS,CAAC,EAE7BA,EAAQ,MAAM,EAElB,EACC,CAACA,EAAS1U,CAAO,CAAC,CACvB,u2CC9iCA,OAAO,eAAwBqqB,EAAA,aAAc,CAC3C,MAAO,EACT,CAAC,EACDA,EAAQ,QAAa,OAErB,IAAIC,EAASC,EAAuBC,CAAgB,EAEhDC,EAAaF,EAAuBG,EAAqB,EAEzDC,EAAkBC,GAElBhG,EAAY,CAAC,WAAY,UAAW,UAAW,KAAM,QAAS,kBAAmB,YAAa,cAAe,QAAS,UAAU,EAEpI,SAAS2F,EAAuBM,EAAK,CAAE,OAAOA,GAAOA,EAAI,WAAaA,EAAM,CAAE,QAAWA,CAAK,CAAG,CAEjG,SAASC,EAAQtH,EAAQuH,EAAgB,CAAE,IAAI1W,EAAO,OAAO,KAAKmP,CAAM,EAAG,GAAI,OAAO,sBAAuB,CAAE,IAAIwH,EAAU,OAAO,sBAAsBxH,CAAM,EAAGuH,IAAmBC,EAAUA,EAAQ,OAAO,SAAUC,EAAK,CAAE,OAAO,OAAO,yBAAyBzH,EAAQyH,CAAG,EAAE,UAAW,CAAE,GAAI5W,EAAK,KAAK,MAAMA,EAAM2W,CAAO,CAAE,CAAG,OAAO3W,CAAO,CAErV,SAAS6W,EAActuB,EAAQ,CAAE,QAASC,EAAI,EAAGA,EAAI,UAAU,OAAQA,IAAK,CAAE,IAAIC,EAAiB,UAAUD,CAAC,GAAnB,KAAuB,UAAUA,CAAC,EAAI,CAAA,EAAIA,EAAI,EAAIiuB,EAAQ,OAAOhuB,CAAM,EAAG,EAAE,EAAE,QAAQ,SAAUC,EAAK,CAAEouB,EAAgBvuB,EAAQG,EAAKD,EAAOC,CAAG,CAAC,CAAI,CAAA,EAAI,OAAO,0BAA4B,OAAO,iBAAiBH,EAAQ,OAAO,0BAA0BE,CAAM,CAAC,EAAIguB,EAAQ,OAAOhuB,CAAM,CAAC,EAAE,QAAQ,SAAUC,EAAK,CAAE,OAAO,eAAeH,EAAQG,EAAK,OAAO,yBAAyBD,EAAQC,CAAG,CAAC,CAAE,CAAE,CAAI,CAAC,OAAOH,CAAS,CAE1f,SAASuuB,EAAgBN,EAAK9tB,EAAKgD,EAAO,CAAE,OAAIhD,KAAO8tB,EAAO,OAAO,eAAeA,EAAK9tB,EAAK,CAAE,MAAOgD,EAAO,WAAY,GAAM,aAAc,GAAM,SAAU,EAAM,CAAA,EAAY8qB,EAAI9tB,CAAG,EAAIgD,EAAgB8qB,CAAM,CAEjN,SAASO,EAAQP,EAAK,CAAE,0BAA2B,OAAOO,EAAwB,OAAO,QAArB,YAA2C,OAAO,OAAO,UAA1B,SAAqC,SAAUP,EAAK,CAAE,OAAO,OAAOA,GAAS,SAAUA,EAAK,CAAE,OAAOA,GAAqB,OAAO,QAArB,YAA+BA,EAAI,cAAgB,QAAUA,IAAQ,OAAO,UAAY,SAAW,OAAOA,CAAI,EAAIO,EAAQP,CAAG,CAAI,CAEhV,SAASQ,EAAyBvuB,EAAQqmB,EAAU,CAAE,GAAIrmB,GAAU,KAAM,MAAO,CAAE,EAAE,IAAIF,EAASsmB,EAA8BpmB,EAAQqmB,CAAQ,EAAOpmB,EAAKF,EAAG,GAAI,OAAO,sBAAuB,CAAE,IAAIyuB,EAAmB,OAAO,sBAAsBxuB,CAAM,EAAG,IAAKD,EAAI,EAAGA,EAAIyuB,EAAiB,OAAQzuB,IAAOE,EAAMuuB,EAAiBzuB,CAAC,EAAO,EAAAsmB,EAAS,QAAQpmB,CAAG,GAAK,IAAkB,OAAO,UAAU,qBAAqB,KAAKD,EAAQC,CAAG,IAAaH,EAAOG,CAAG,EAAID,EAAOC,CAAG,EAAI,CAAG,OAAOH,CAAS,CAE5e,SAASsmB,EAA8BpmB,EAAQqmB,EAAU,CAAE,GAAIrmB,GAAU,KAAM,MAAO,CAAA,EAAI,IAAIF,EAAS,CAAA,EAAQwmB,EAAa,OAAO,KAAKtmB,CAAM,EAAOC,EAAKF,EAAG,IAAKA,EAAI,EAAGA,EAAIumB,EAAW,OAAQvmB,IAAOE,EAAMqmB,EAAWvmB,CAAC,EAAO,EAAAsmB,EAAS,QAAQpmB,CAAG,GAAK,KAAaH,EAAOG,CAAG,EAAID,EAAOC,CAAG,GAAK,OAAOH,CAAS,CAEnT,IAAIgnB,EAAkB,SAAyBC,EAAO,CACpD,MAAO,CAAC,EAAEA,EAAM,SAAWA,EAAM,QAAUA,EAAM,SAAWA,EAAM,SACpE,EAEI0H,EAAgB,SAAuBlrB,EAAM,CAC/C,IAAIke,EAAWle,EAAK,SAChBylB,EAAUzlB,EAAK,QACfW,EAAUX,EAAK,QACfrC,EAAKqC,EAAK,GACVpC,EAAQoC,EAAK,MACbmrB,EAAkBnrB,EAAK,gBACvB4mB,EAAY5mB,EAAK,UACjBorB,EAAcprB,EAAK,YACnB6mB,EAAQ7mB,EAAK,MACbqrB,EAAcrrB,EAAK,SACnB8d,GAAQkN,EAAyBhrB,EAAMukB,CAAS,EAEhDrmB,EAAO6sB,EAAQptB,CAAE,IAAM,SAAWA,EAAG,UAAY,GAAKA,EACtDsQ,MAAeqc,EAAgB,eAC/BjrB,MAAWirB,EAAgB,SAAS,OAAO3sB,GAAO,SAAW,CAC/D,SAAUA,CACX,EAAGA,CAAE,EACF8G,MAAY6lB,EAAgB,UAAUpsB,CAAI,EAC1CL,MAAeysB,EAAgB,eAE/BgB,GAAQrB,EAAO,QAAW,SAAS,KAAK/L,CAAQ,EAEhDuI,GAAW,CAAC,EAAE4E,EAAc,OAAOA,GAAgB,WAAaA,EAAY5mB,GAAO5G,EAAQ,EAAIwtB,EAAc5mB,IAE7GwhB,GAAc,SAAqBzC,GAAO,CACxCtF,EAAS,MAAM,SACjBA,EAAS,MAAM,QAAQsF,EAAK,EAG1BiC,GACFA,EAAQjC,EAAK,EAGX,CAACA,GAAM,kBACXA,GAAM,SAAW,GACjB,CAACD,EAAgBC,EAAK,IAEpBA,GAAM,eAAc,EACpBvV,GAAStQ,EAAI,CACX,QAASgD,EACT,MAAO/C,CACf,CAAO,EAEP,EAEE,OAAoBqsB,EAAO,QAAW,aAAaqB,GAAOT,EAAcA,EAAc,CAAE,EAAE/M,EAAK,EAAG,GAAI,CACpG,UAAW,CAAC8I,EAAW0E,GAAM,MAAM,UAAW7E,GAAW0E,EAAkB,IAAI,EAAE,KAAK,GAAG,EAAE,KAAM,EACjG,MAAO1E,GAAWoE,EAAcA,EAAc,CAAE,EAAEhE,CAAK,EAAGuE,CAAW,EAAIvE,EACzE,KAAMxnB,GACN,QAAS4mB,EACV,CAAA,CAAC,CACJ,EAEAiF,EAAc,UAAY,CACxB,SAAUd,EAAW,QAAW,QAAQ,WACxC,QAASA,EAAW,QAAW,KAC/B,QAASA,EAAW,QAAW,KAC/B,GAAIA,EAAW,QAAW,UAAU,CAACA,EAAW,QAAW,OAAQA,EAAW,QAAW,MAAM,CAAC,EAAE,WAClG,MAAOA,EAAW,QAAW,OAC7B,UAAWA,EAAW,QAAW,OACjC,gBAAiBA,EAAW,QAAW,OACvC,MAAOA,EAAW,QAAW,SAASA,EAAW,QAAW,UAAU,CAACA,EAAW,QAAW,OAAQA,EAAW,QAAW,MAAM,CAAC,CAAC,EACnI,YAAaA,EAAW,QAAW,SAASA,EAAW,QAAW,UAAU,CAACA,EAAW,QAAW,OAAQA,EAAW,QAAW,MAAM,CAAC,CAAC,EACzI,SAAUA,EAAW,QAAW,UAAU,CAACA,EAAW,QAAW,KAAMA,EAAW,QAAW,IAAI,CAAC,CACpG,EACAc,EAAc,aAAe,CAC3B,QAAS,GACT,gBAAiB,SACjB,QAAS,KACT,UAAW,KACX,MAAO,KACP,YAAa,KACb,SAAU,IACZ,EACA,IAAIK,EAAWL,EACflB,EAAQ,QAAauB,qBC3GrB,OAAO,eAAwBvB,EAAA,aAAc,CAC3C,MAAO,EACT,CAAC,EACD,OAAO,eAAeA,EAAS,gBAAiB,CAC9C,WAAY,GACZ,IAAK,UAAe,CAClB,OAAOwB,EAAe,OACvB,CACH,CAAC,EAED,IAAIA,EAAiBtB,EAAuBC,EAA0B,EAEtE,SAASD,EAAuBM,EAAK,CAAE,OAAOA,GAAOA,EAAI,WAAaA,EAAM,CAAE,QAAWA,CAAK,CAAC","x_google_ignoreList":[0,1,2,3,4]}
